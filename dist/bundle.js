/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={679:(e,t,n)=>{"use strict";var r=n(864),a={childContextTypes:!0,contextType:!0,contextTypes:!0,defaultProps:!0,displayName:!0,getDefaultProps:!0,getDerivedStateFromError:!0,getDerivedStateFromProps:!0,mixins:!0,propTypes:!0,type:!0},o={name:!0,length:!0,prototype:!0,caller:!0,callee:!0,arguments:!0,arity:!0},l={$$typeof:!0,compare:!0,defaultProps:!0,displayName:!0,propTypes:!0,type:!0},i={};function u(e){return r.isMemo(e)?l:i[e.$$typeof]||a}i[r.ForwardRef]={$$typeof:!0,render:!0,defaultProps:!0,displayName:!0,propTypes:!0},i[r.Memo]=l;var c=Object.defineProperty,s=Object.getOwnPropertyNames,f=Object.getOwnPropertySymbols,d=Object.getOwnPropertyDescriptor,p=Object.getPrototypeOf,h=Object.prototype;e.exports=function e(t,n,r){if("string"!=typeof n){if(h){var a=p(n);a&&a!==h&&e(t,a,r)}var l=s(n);f&&(l=l.concat(f(n)));for(var i=u(t),m=u(n),v=0;v<l.length;++v){var y=l[v];if(!(o[y]||r&&r[y]||m&&m[y]||i&&i[y])){var g=d(n,y);try{c(t,y,g)}catch(e){}}}}return t}},826:e=>{e.exports=Array.isArray||function(e){return"[object Array]"==Object.prototype.toString.call(e)}},418:e=>{"use strict";var t=Object.getOwnPropertySymbols,n=Object.prototype.hasOwnProperty,r=Object.prototype.propertyIsEnumerable;function a(e){if(null==e)throw new TypeError("Object.assign cannot be called with null or undefined");return Object(e)}e.exports=function(){try{if(!Object.assign)return!1;var e=new String("abc");if(e[5]="de","5"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},n=0;n<10;n++)t["_"+String.fromCharCode(n)]=n;if("0123456789"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(""))return!1;var r={};return"abcdefghijklmnopqrst".split("").forEach((function(e){r[e]=e})),"abcdefghijklmnopqrst"===Object.keys(Object.assign({},r)).join("")}catch(e){return!1}}()?Object.assign:function(e,o){for(var l,i,u=a(e),c=1;c<arguments.length;c++){for(var s in l=Object(arguments[c]))n.call(l,s)&&(u[s]=l[s]);if(t){i=t(l);for(var f=0;f<i.length;f++)r.call(l,i[f])&&(u[i[f]]=l[i[f]])}}return u}},779:(e,t,n)=>{var r=n(826);e.exports=function e(t,n,a){return r(n)||(a=n||a,n=[]),a=a||{},t instanceof RegExp?function(e,t){var n=e.source.match(/\((?!\?)/g);if(n)for(var r=0;r<n.length;r++)t.push({name:r,prefix:null,delimiter:null,optional:!1,repeat:!1,partial:!1,asterisk:!1,pattern:null});return s(e,t)}(t,n):r(t)?function(t,n,r){for(var a=[],o=0;o<t.length;o++)a.push(e(t[o],n,r).source);return s(new RegExp("(?:"+a.join("|")+")",f(r)),n)}(t,n,a):function(e,t,n){return d(o(e,n),t,n)}(t,n,a)},e.exports.parse=o,e.exports.compile=function(e,t){return i(o(e,t),t)},e.exports.tokensToFunction=i,e.exports.tokensToRegExp=d;var a=new RegExp(["(\\\\.)","([\\/.])?(?:(?:\\:(\\w+)(?:\\(((?:\\\\.|[^\\\\()])+)\\))?|\\(((?:\\\\.|[^\\\\()])+)\\))([+*?])?|(\\*))"].join("|"),"g");function o(e,t){for(var n,r=[],o=0,l=0,i="",s=t&&t.delimiter||"/";null!=(n=a.exec(e));){var f=n[0],d=n[1],p=n.index;if(i+=e.slice(l,p),l=p+f.length,d)i+=d[1];else{var h=e[l],m=n[2],v=n[3],y=n[4],g=n[5],b=n[6],w=n[7];i&&(r.push(i),i="");var k=null!=m&&null!=h&&h!==m,E="+"===b||"*"===b,S="?"===b||"*"===b,x=n[2]||s,C=y||g;r.push({name:v||o++,prefix:m||"",delimiter:x,optional:S,repeat:E,partial:k,asterisk:!!w,pattern:C?c(C):w?".*":"[^"+u(x)+"]+?"})}}return l<e.length&&(i+=e.substr(l)),i&&r.push(i),r}function l(e){return encodeURI(e).replace(/[\/?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()}))}function i(e,t){for(var n=new Array(e.length),a=0;a<e.length;a++)"object"==typeof e[a]&&(n[a]=new RegExp("^(?:"+e[a].pattern+")$",f(t)));return function(t,a){for(var o="",i=t||{},u=(a||{}).pretty?l:encodeURIComponent,c=0;c<e.length;c++){var s=e[c];if("string"!=typeof s){var f,d=i[s.name];if(null==d){if(s.optional){s.partial&&(o+=s.prefix);continue}throw new TypeError('Expected "'+s.name+'" to be defined')}if(r(d)){if(!s.repeat)throw new TypeError('Expected "'+s.name+'" to not repeat, but received `'+JSON.stringify(d)+"`");if(0===d.length){if(s.optional)continue;throw new TypeError('Expected "'+s.name+'" to not be empty')}for(var p=0;p<d.length;p++){if(f=u(d[p]),!n[c].test(f))throw new TypeError('Expected all "'+s.name+'" to match "'+s.pattern+'", but received `'+JSON.stringify(f)+"`");o+=(0===p?s.prefix:s.delimiter)+f}}else{if(f=s.asterisk?encodeURI(d).replace(/[?#]/g,(function(e){return"%"+e.charCodeAt(0).toString(16).toUpperCase()})):u(d),!n[c].test(f))throw new TypeError('Expected "'+s.name+'" to match "'+s.pattern+'", but received "'+f+'"');o+=s.prefix+f}}else o+=s}return o}}function u(e){return e.replace(/([.+*?=^!:${}()[\]|\/\\])/g,"\\$1")}function c(e){return e.replace(/([=!:$\/()])/g,"\\$1")}function s(e,t){return e.keys=t,e}function f(e){return e&&e.sensitive?"":"i"}function d(e,t,n){r(t)||(n=t||n,t=[]);for(var a=(n=n||{}).strict,o=!1!==n.end,l="",i=0;i<e.length;i++){var c=e[i];if("string"==typeof c)l+=u(c);else{var d=u(c.prefix),p="(?:"+c.pattern+")";t.push(c),c.repeat&&(p+="(?:"+d+p+")*"),l+=p=c.optional?c.partial?d+"("+p+")?":"(?:"+d+"("+p+"))?":d+"("+p+")"}}var h=u(n.delimiter||"/"),m=l.slice(-h.length)===h;return a||(l=(m?l.slice(0,-h.length):l)+"(?:"+h+"(?=$))?"),l+=o?"$":a&&m?"":"(?="+h+"|$)",s(new RegExp("^"+l,f(n)),t)}},703:(e,t,n)=>{"use strict";var r=n(414);function a(){}function o(){}o.resetWarningCache=a,e.exports=function(){function e(e,t,n,a,o,l){if(l!==r){var i=new Error("Calling PropTypes validators directly is not supported by the `prop-types` package. Use PropTypes.checkPropTypes() to call them. Read more at http://fb.me/use-check-prop-types");throw i.name="Invariant Violation",i}}function t(){return e}e.isRequired=e;var n={array:e,bool:e,func:e,number:e,object:e,string:e,symbol:e,any:e,arrayOf:t,element:e,elementType:e,instanceOf:t,node:e,objectOf:t,oneOf:t,oneOfType:t,shape:t,exact:t,checkPropTypes:o,resetWarningCache:a};return n.PropTypes=n,n}},697:(e,t,n)=>{e.exports=n(703)()},414:e=>{"use strict";e.exports="SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED"},448:(e,t,n)=>{"use strict";var r=n(294),a=n(418),o=n(840);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}if(!r)throw Error(l(227));var i=new Set,u={};function c(e,t){s(e,t),s(e+"Capture",t)}function s(e,t){for(u[e]=t,e=0;e<t.length;e++)i.add(t[e])}var f=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p=Object.prototype.hasOwnProperty,h={},m={};function v(e,t,n,r,a,o,l){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=o,this.removeEmptyString=l}var y={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){y[e]=new v(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];y[t]=new v(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){y[e]=new v(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){y[e]=new v(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){y[e]=new v(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){y[e]=new v(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){y[e]=new v(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){y[e]=new v(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){y[e]=new v(e,5,!1,e.toLowerCase(),null,!1,!1)}));var g=/[\-:]([a-z])/g;function b(e){return e[1].toUpperCase()}function w(e,t,n,r){var a=y.hasOwnProperty(t)?y[t]:null;(null!==a?0===a.type:!r&&2<t.length&&("o"===t[0]||"O"===t[0])&&("n"===t[1]||"N"===t[1]))||(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!p.call(m,e)||!p.call(h,e)&&(d.test(e)?m[e]=!0:(h[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(g,b);y[t]=new v(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!1,!1)})),y.xlinkHref=new v("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){y[e]=new v(e,1,!1,e.toLowerCase(),null,!0,!0)}));var k=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,E=60103,S=60106,x=60107,C=60108,P=60114,_=60109,T=60110,N=60112,M=60113,O=60120,R=60115,I=60116,F=60121,L=60128,A=60129,z=60130,D=60131;if("function"==typeof Symbol&&Symbol.for){var U=Symbol.for;E=U("react.element"),S=U("react.portal"),x=U("react.fragment"),C=U("react.strict_mode"),P=U("react.profiler"),_=U("react.provider"),T=U("react.context"),N=U("react.forward_ref"),M=U("react.suspense"),O=U("react.suspense_list"),R=U("react.memo"),I=U("react.lazy"),F=U("react.block"),U("react.scope"),L=U("react.opaque.id"),A=U("react.debug_trace_mode"),z=U("react.offscreen"),D=U("react.legacy_hidden")}var j,B="function"==typeof Symbol&&Symbol.iterator;function V(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=B&&e[B]||e["@@iterator"])?e:null}function W(e){if(void 0===j)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);j=t&&t[1]||""}return"\n"+j+e}var $=!1;function H(e,t){if(!e||$)return"";$=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(e){if(e&&r&&"string"==typeof e.stack){for(var a=e.stack.split("\n"),o=r.stack.split("\n"),l=a.length-1,i=o.length-1;1<=l&&0<=i&&a[l]!==o[i];)i--;for(;1<=l&&0<=i;l--,i--)if(a[l]!==o[i]){if(1!==l||1!==i)do{if(l--,0>--i||a[l]!==o[i])return"\n"+a[l].replace(" at new "," at ")}while(1<=l&&0<=i);break}}}finally{$=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?W(e):""}function K(e){switch(e.tag){case 5:return W(e.type);case 16:return W("Lazy");case 13:return W("Suspense");case 19:return W("SuspenseList");case 0:case 2:case 15:return H(e.type,!1);case 11:return H(e.type.render,!1);case 22:return H(e.type._render,!1);case 1:return H(e.type,!0);default:return""}}function Q(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case S:return"Portal";case P:return"Profiler";case C:return"StrictMode";case M:return"Suspense";case O:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case T:return(e.displayName||"Context")+".Consumer";case _:return(e._context.displayName||"Context")+".Provider";case N:var t=e.render;return t=t.displayName||t.name||"",e.displayName||(""!==t?"ForwardRef("+t+")":"ForwardRef");case R:return Q(e.type);case F:return Q(e._render);case I:t=e._payload,e=e._init;try{return Q(e(t))}catch(e){}}return null}function q(e){switch(typeof e){case"boolean":case"number":case"object":case"string":case"undefined":return e;default:return""}}function Y(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function X(e){e._valueTracker||(e._valueTracker=function(e){var t=Y(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,o=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,o.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function G(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=Y(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Z(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function J(e,t){var n=t.checked;return a({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function ee(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=q(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function te(e,t){null!=(t=t.checked)&&w(e,"checked",t,!1)}function ne(e,t){te(e,t);var n=q(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ae(e,t.type,n):t.hasOwnProperty("defaultValue")&&ae(e,t.type,q(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function re(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ae(e,t,n){"number"===t&&Z(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}function oe(e,t){return e=a({children:void 0},t),(t=function(e){var t="";return r.Children.forEach(e,(function(e){null!=e&&(t+=e)})),t}(t.children))&&(e.children=t),e}function le(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+q(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function ie(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return a({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ue(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(Array.isArray(n)){if(!(1>=n.length))throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:q(n)}}function ce(e,t){var n=q(t.value),r=q(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function se(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}var fe="http://www.w3.org/1999/xhtml";function de(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function pe(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?de(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var he,me,ve=(me=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((he=he||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=he.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return me(e,t)}))}:me);function ye(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var ge={animationIterationCount:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},be=["Webkit","ms","Moz","O"];function we(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||ge.hasOwnProperty(e)&&ge[e]?(""+t).trim():t+"px"}function ke(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=we(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(ge).forEach((function(e){be.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),ge[t]=ge[e]}))}));var Ee=a({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function Se(e,t){if(t){if(Ee[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function xe(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var Pe=null,_e=null,Te=null;function Ne(e){if(e=Zr(e)){if("function"!=typeof Pe)throw Error(l(280));var t=e.stateNode;t&&(t=ea(t),Pe(e.stateNode,e.type,t))}}function Me(e){_e?Te?Te.push(e):Te=[e]:_e=e}function Oe(){if(_e){var e=_e,t=Te;if(Te=_e=null,Ne(e),t)for(e=0;e<t.length;e++)Ne(t[e])}}function Re(e,t){return e(t)}function Ie(e,t,n,r,a){return e(t,n,r,a)}function Fe(){}var Le=Re,Ae=!1,ze=!1;function De(){null===_e&&null===Te||(Fe(),Oe())}function Ue(e,t){var n=e.stateNode;if(null===n)return null;var r=ea(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var je=!1;if(f)try{var Be={};Object.defineProperty(Be,"passive",{get:function(){je=!0}}),window.addEventListener("test",Be,Be),window.removeEventListener("test",Be,Be)}catch(me){je=!1}function Ve(e,t,n,r,a,o,l,i,u){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var We=!1,$e=null,He=!1,Ke=null,Qe={onError:function(e){We=!0,$e=e}};function qe(e,t,n,r,a,o,l,i,u){We=!1,$e=null,Ve.apply(Qe,arguments)}function Ye(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{0!=(1026&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Xe(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function Ge(e){if(Ye(e)!==e)throw Error(l(188))}function Ze(e,t){for(var n=e.alternate;null!==t;){if(t===e||t===n)return!0;t=t.return}return!1}var Je,et,tt,nt,rt=!1,at=[],ot=null,lt=null,it=null,ut=new Map,ct=new Map,st=[],ft="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function dt(e,t,n,r,a){return{blockedOn:e,domEventName:t,eventSystemFlags:16|n,nativeEvent:a,targetContainers:[r]}}function pt(e,t){switch(e){case"focusin":case"focusout":ot=null;break;case"dragenter":case"dragleave":lt=null;break;case"mouseover":case"mouseout":it=null;break;case"pointerover":case"pointerout":ut.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":ct.delete(t.pointerId)}}function ht(e,t,n,r,a,o){return null===e||e.nativeEvent!==o?(e=dt(t,n,r,a,o),null!==t&&null!==(t=Zr(t))&&et(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function mt(e){var t=Gr(e.target);if(null!==t){var n=Ye(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Xe(n)))return e.blockedOn=t,void nt(e.lanePriority,(function(){o.unstable_runWithPriority(e.priority,(function(){tt(n)}))}))}else if(3===t&&n.stateNode.hydrate)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function vt(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=Zr(n))&&et(t),e.blockedOn=n,!1;t.shift()}return!0}function yt(e,t,n){vt(e)&&n.delete(t)}function gt(){for(rt=!1;0<at.length;){var e=at[0];if(null!==e.blockedOn){null!==(e=Zr(e.blockedOn))&&Je(e);break}for(var t=e.targetContainers;0<t.length;){var n=Gt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n){e.blockedOn=n;break}t.shift()}null===e.blockedOn&&at.shift()}null!==ot&&vt(ot)&&(ot=null),null!==lt&&vt(lt)&&(lt=null),null!==it&&vt(it)&&(it=null),ut.forEach(yt),ct.forEach(yt)}function bt(e,t){e.blockedOn===t&&(e.blockedOn=null,rt||(rt=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,gt)))}function wt(e){function t(t){return bt(t,e)}if(0<at.length){bt(at[0],e);for(var n=1;n<at.length;n++){var r=at[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==ot&&bt(ot,e),null!==lt&&bt(lt,e),null!==it&&bt(it,e),ut.forEach(t),ct.forEach(t),n=0;n<st.length;n++)(r=st[n]).blockedOn===e&&(r.blockedOn=null);for(;0<st.length&&null===(n=st[0]).blockedOn;)mt(n),null===n.blockedOn&&st.shift()}function kt(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var Et={animationend:kt("Animation","AnimationEnd"),animationiteration:kt("Animation","AnimationIteration"),animationstart:kt("Animation","AnimationStart"),transitionend:kt("Transition","TransitionEnd")},St={},xt={};function Ct(e){if(St[e])return St[e];if(!Et[e])return e;var t,n=Et[e];for(t in n)if(n.hasOwnProperty(t)&&t in xt)return St[e]=n[t];return e}f&&(xt=document.createElement("div").style,"AnimationEvent"in window||(delete Et.animationend.animation,delete Et.animationiteration.animation,delete Et.animationstart.animation),"TransitionEvent"in window||delete Et.transitionend.transition);var Pt=Ct("animationend"),_t=Ct("animationiteration"),Tt=Ct("animationstart"),Nt=Ct("transitionend"),Mt=new Map,Ot=new Map,Rt=["abort","abort",Pt,"animationEnd",_t,"animationIteration",Tt,"animationStart","canplay","canPlay","canplaythrough","canPlayThrough","durationchange","durationChange","emptied","emptied","encrypted","encrypted","ended","ended","error","error","gotpointercapture","gotPointerCapture","load","load","loadeddata","loadedData","loadedmetadata","loadedMetadata","loadstart","loadStart","lostpointercapture","lostPointerCapture","playing","playing","progress","progress","seeking","seeking","stalled","stalled","suspend","suspend","timeupdate","timeUpdate",Nt,"transitionEnd","waiting","waiting"];function It(e,t){for(var n=0;n<e.length;n+=2){var r=e[n],a=e[n+1];a="on"+(a[0].toUpperCase()+a.slice(1)),Ot.set(r,t),Mt.set(r,a),c(a,[r])}}(0,o.unstable_now)();var Ft=8;function Lt(e){if(0!=(1&e))return Ft=15,1;if(0!=(2&e))return Ft=14,2;if(0!=(4&e))return Ft=13,4;var t=24&e;return 0!==t?(Ft=12,t):0!=(32&e)?(Ft=11,32):0!=(t=192&e)?(Ft=10,t):0!=(256&e)?(Ft=9,256):0!=(t=3584&e)?(Ft=8,t):0!=(4096&e)?(Ft=7,4096):0!=(t=4186112&e)?(Ft=6,t):0!=(t=62914560&e)?(Ft=5,t):67108864&e?(Ft=4,67108864):0!=(134217728&e)?(Ft=3,134217728):0!=(t=805306368&e)?(Ft=2,t):0!=(1073741824&e)?(Ft=1,1073741824):(Ft=8,e)}function At(e,t){var n=e.pendingLanes;if(0===n)return Ft=0;var r=0,a=0,o=e.expiredLanes,l=e.suspendedLanes,i=e.pingedLanes;if(0!==o)r=o,a=Ft=15;else if(0!=(o=134217727&n)){var u=o&~l;0!==u?(r=Lt(u),a=Ft):0!=(i&=o)&&(r=Lt(i),a=Ft)}else 0!=(o=n&~l)?(r=Lt(o),a=Ft):0!==i&&(r=Lt(i),a=Ft);if(0===r)return 0;if(r=n&((0>(r=31-Vt(r))?0:1<<r)<<1)-1,0!==t&&t!==r&&0==(t&l)){if(Lt(t),a<=Ft)return t;Ft=a}if(0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-Vt(t)),r|=e[n],t&=~a;return r}function zt(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function Dt(e,t){switch(e){case 15:return 1;case 14:return 2;case 12:return 0===(e=Ut(24&~t))?Dt(10,t):e;case 10:return 0===(e=Ut(192&~t))?Dt(8,t):e;case 8:return 0===(e=Ut(3584&~t))&&0===(e=Ut(4186112&~t))&&(e=512),e;case 2:return 0===(t=Ut(805306368&~t))&&(t=268435456),t}throw Error(l(358,e))}function Ut(e){return e&-e}function jt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function Bt(e,t,n){e.pendingLanes|=t;var r=t-1;e.suspendedLanes&=r,e.pingedLanes&=r,(e=e.eventTimes)[t=31-Vt(t)]=n}var Vt=Math.clz32?Math.clz32:function(e){return 0===e?32:31-(Wt(e)/$t|0)|0},Wt=Math.log,$t=Math.LN2,Ht=o.unstable_UserBlockingPriority,Kt=o.unstable_runWithPriority,Qt=!0;function qt(e,t,n,r){Ae||Fe();var a=Xt,o=Ae;Ae=!0;try{Ie(a,e,t,n,r)}finally{(Ae=o)||De()}}function Yt(e,t,n,r){Kt(Ht,Xt.bind(null,e,t,n,r))}function Xt(e,t,n,r){var a;if(Qt)if((a=0==(4&t))&&0<at.length&&-1<ft.indexOf(e))e=dt(null,e,t,n,r),at.push(e);else{var o=Gt(e,t,n,r);if(null===o)a&&pt(e,r);else{if(a){if(-1<ft.indexOf(e))return e=dt(o,e,t,n,r),void at.push(e);if(function(e,t,n,r,a){switch(t){case"focusin":return ot=ht(ot,e,t,n,r,a),!0;case"dragenter":return lt=ht(lt,e,t,n,r,a),!0;case"mouseover":return it=ht(it,e,t,n,r,a),!0;case"pointerover":var o=a.pointerId;return ut.set(o,ht(ut.get(o)||null,e,t,n,r,a)),!0;case"gotpointercapture":return o=a.pointerId,ct.set(o,ht(ct.get(o)||null,e,t,n,r,a)),!0}return!1}(o,e,t,n,r))return;pt(e,r)}Mr(e,t,r,null,n)}}}function Gt(e,t,n,r){var a=Ce(r);if(null!==(a=Gr(a))){var o=Ye(a);if(null===o)a=null;else{var l=o.tag;if(13===l){if(null!==(a=Xe(o)))return a;a=null}else if(3===l){if(o.stateNode.hydrate)return 3===o.tag?o.stateNode.containerInfo:null;a=null}else o!==a&&(a=null)}}return Mr(e,t,r,a,n),null}var Zt=null,Jt=null,en=null;function tn(){if(en)return en;var e,t,n=Jt,r=n.length,a="value"in Zt?Zt.value:Zt.textContent,o=a.length;for(e=0;e<r&&n[e]===a[e];e++);var l=r-e;for(t=1;t<=l&&n[r-t]===a[o-t];t++);return en=a.slice(e,1<t?1-t:void 0)}function nn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function rn(){return!0}function an(){return!1}function on(e){function t(t,n,r,a,o){for(var l in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=o,this.currentTarget=null,e)e.hasOwnProperty(l)&&(t=e[l],this[l]=t?t(a):a[l]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?rn:an,this.isPropagationStopped=an,this}return a(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=rn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=rn)},persist:function(){},isPersistent:rn}),t}var ln,un,cn,sn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},fn=on(sn),dn=a({},sn,{view:0,detail:0}),pn=on(dn),hn=a({},dn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Cn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==cn&&(cn&&"mousemove"===e.type?(ln=e.screenX-cn.screenX,un=e.screenY-cn.screenY):un=ln=0,cn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:un}}),mn=on(hn),vn=on(a({},hn,{dataTransfer:0})),yn=on(a({},dn,{relatedTarget:0})),gn=on(a({},sn,{animationName:0,elapsedTime:0,pseudoElement:0})),bn=on(a({},sn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}})),wn=on(a({},sn,{data:0})),kn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},En={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},Sn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function xn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=Sn[e])&&!!t[e]}function Cn(){return xn}var Pn=on(a({},dn,{key:function(e){if(e.key){var t=kn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=nn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?En[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Cn,charCode:function(e){return"keypress"===e.type?nn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?nn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}})),_n=on(a({},hn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Tn=on(a({},dn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Cn})),Nn=on(a({},sn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Mn=on(a({},hn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0})),On=[9,13,27,32],Rn=f&&"CompositionEvent"in window,In=null;f&&"documentMode"in document&&(In=document.documentMode);var Fn=f&&"TextEvent"in window&&!In,Ln=f&&(!Rn||In&&8<In&&11>=In),An=String.fromCharCode(32),zn=!1;function Dn(e,t){switch(e){case"keyup":return-1!==On.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function Un(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jn=!1,Bn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Vn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Bn[e.type]:"textarea"===t}function Wn(e,t,n,r){Me(r),0<(t=Rr(t,"onChange")).length&&(n=new fn("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var $n=null,Hn=null;function Kn(e){xr(e,0)}function Qn(e){if(G(Jr(e)))return e}function qn(e,t){if("change"===e)return t}var Yn=!1;if(f){var Xn;if(f){var Gn="oninput"in document;if(!Gn){var Zn=document.createElement("div");Zn.setAttribute("oninput","return;"),Gn="function"==typeof Zn.oninput}Xn=Gn}else Xn=!1;Yn=Xn&&(!document.documentMode||9<document.documentMode)}function Jn(){$n&&($n.detachEvent("onpropertychange",er),Hn=$n=null)}function er(e){if("value"===e.propertyName&&Qn(Hn)){var t=[];if(Wn(t,Hn,e,Ce(e)),e=Kn,Ae)e(t);else{Ae=!0;try{Re(e,t)}finally{Ae=!1,De()}}}}function tr(e,t,n){"focusin"===e?(Jn(),Hn=n,($n=t).attachEvent("onpropertychange",er)):"focusout"===e&&Jn()}function nr(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Qn(Hn)}function rr(e,t){if("click"===e)return Qn(t)}function ar(e,t){if("input"===e||"change"===e)return Qn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t},lr=Object.prototype.hasOwnProperty;function ir(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++)if(!lr.call(t,n[r])||!or(e[n[r]],t[n[r]]))return!1;return!0}function ur(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function cr(e,t){var n,r=ur(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=ur(r)}}function sr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?sr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function fr(){for(var e=window,t=Z();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Z((e=t.contentWindow).document)}return t}function dr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}var pr=f&&"documentMode"in document&&11>=document.documentMode,hr=null,mr=null,vr=null,yr=!1;function gr(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;yr||null==hr||hr!==Z(r)||(r="selectionStart"in(r=hr)&&dr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},vr&&ir(vr,r)||(vr=r,0<(r=Rr(mr,"onSelect")).length&&(t=new fn("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=hr)))}It("cancel cancel click click close close contextmenu contextMenu copy copy cut cut auxclick auxClick dblclick doubleClick dragend dragEnd dragstart dragStart drop drop focusin focus focusout blur input input invalid invalid keydown keyDown keypress keyPress keyup keyUp mousedown mouseDown mouseup mouseUp paste paste pause pause play play pointercancel pointerCancel pointerdown pointerDown pointerup pointerUp ratechange rateChange reset reset seeked seeked submit submit touchcancel touchCancel touchend touchEnd touchstart touchStart volumechange volumeChange".split(" "),0),It("drag drag dragenter dragEnter dragexit dragExit dragleave dragLeave dragover dragOver mousemove mouseMove mouseout mouseOut mouseover mouseOver pointermove pointerMove pointerout pointerOut pointerover pointerOver scroll scroll toggle toggle touchmove touchMove wheel wheel".split(" "),1),It(Rt,2);for(var br="change selectionchange textInput compositionstart compositionend compositionupdate".split(" "),wr=0;wr<br.length;wr++)Ot.set(br[wr],0);s("onMouseEnter",["mouseout","mouseover"]),s("onMouseLeave",["mouseout","mouseover"]),s("onPointerEnter",["pointerout","pointerover"]),s("onPointerLeave",["pointerout","pointerover"]),c("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),c("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),c("onBeforeInput",["compositionend","keypress","textInput","paste"]),c("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),c("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var kr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Er=new Set("cancel close invalid load scroll toggle".split(" ").concat(kr));function Sr(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,o,i,u,c){if(qe.apply(this,arguments),We){if(!We)throw Error(l(198));var s=$e;We=!1,$e=null,He||(He=!0,Ke=s)}}(r,t,void 0,e),e.currentTarget=null}function xr(e,t){t=0!=(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var o=void 0;if(t)for(var l=r.length-1;0<=l;l--){var i=r[l],u=i.instance,c=i.currentTarget;if(i=i.listener,u!==o&&a.isPropagationStopped())break e;Sr(a,i,c),o=u}else for(l=0;l<r.length;l++){if(u=(i=r[l]).instance,c=i.currentTarget,i=i.listener,u!==o&&a.isPropagationStopped())break e;Sr(a,i,c),o=u}}}if(He)throw e=Ke,He=!1,Ke=null,e}function Cr(e,t){var n=ta(t),r=e+"__bubble";n.has(r)||(Nr(t,e,2,!1),n.add(r))}var Pr="_reactListening"+Math.random().toString(36).slice(2);function _r(e){e[Pr]||(e[Pr]=!0,i.forEach((function(t){Er.has(t)||Tr(t,!1,e,null),Tr(t,!0,e,null)})))}function Tr(e,t,n,r){var a=4<arguments.length&&void 0!==arguments[4]?arguments[4]:0,o=n;if("selectionchange"===e&&9!==n.nodeType&&(o=n.ownerDocument),null!==r&&!t&&Er.has(e)){if("scroll"!==e)return;a|=2,o=r}var l=ta(o),i=e+"__"+(t?"capture":"bubble");l.has(i)||(t&&(a|=4),Nr(o,e,a,t),l.add(i))}function Nr(e,t,n,r){var a=Ot.get(t);switch(void 0===a?2:a){case 0:a=qt;break;case 1:a=Yt;break;default:a=Xt}n=a.bind(null,t,n,e),a=void 0,!je||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Mr(e,t,n,r,a){var o=r;if(0==(1&t)&&0==(2&t)&&null!==r)e:for(;;){if(null===r)return;var l=r.tag;if(3===l||4===l){var i=r.stateNode.containerInfo;if(i===a||8===i.nodeType&&i.parentNode===a)break;if(4===l)for(l=r.return;null!==l;){var u=l.tag;if((3===u||4===u)&&((u=l.stateNode.containerInfo)===a||8===u.nodeType&&u.parentNode===a))return;l=l.return}for(;null!==i;){if(null===(l=Gr(i)))return;if(5===(u=l.tag)||6===u){r=o=l;continue e}i=i.parentNode}}r=r.return}!function(e,t,n){if(ze)return e();ze=!0;try{Le(e,t,n)}finally{ze=!1,De()}}((function(){var r=o,a=Ce(n),l=[];e:{var i=Mt.get(e);if(void 0!==i){var u=fn,c=e;switch(e){case"keypress":if(0===nn(n))break e;case"keydown":case"keyup":u=Pn;break;case"focusin":c="focus",u=yn;break;case"focusout":c="blur",u=yn;break;case"beforeblur":case"afterblur":u=yn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":u=mn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":u=vn;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":u=Tn;break;case Pt:case _t:case Tt:u=gn;break;case Nt:u=Nn;break;case"scroll":u=pn;break;case"wheel":u=Mn;break;case"copy":case"cut":case"paste":u=bn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":u=_n}var s=0!=(4&t),f=!s&&"scroll"===e,d=s?null!==i?i+"Capture":null:i;s=[];for(var p,h=r;null!==h;){var m=(p=h).stateNode;if(5===p.tag&&null!==m&&(p=m,null!==d&&null!=(m=Ue(h,d))&&s.push(Or(h,m,p))),f)break;h=h.return}0<s.length&&(i=new u(i,c,null,n,a),l.push({event:i,listeners:s}))}}if(0==(7&t)){if(u="mouseout"===e||"pointerout"===e,(!(i="mouseover"===e||"pointerover"===e)||0!=(16&t)||!(c=n.relatedTarget||n.fromElement)||!Gr(c)&&!c[Yr])&&(u||i)&&(i=a.window===a?a:(i=a.ownerDocument)?i.defaultView||i.parentWindow:window,u?(u=r,null!==(c=(c=n.relatedTarget||n.toElement)?Gr(c):null)&&(c!==(f=Ye(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(u=null,c=r),u!==c)){if(s=mn,m="onMouseLeave",d="onMouseEnter",h="mouse","pointerout"!==e&&"pointerover"!==e||(s=_n,m="onPointerLeave",d="onPointerEnter",h="pointer"),f=null==u?i:Jr(u),p=null==c?i:Jr(c),(i=new s(m,h+"leave",u,n,a)).target=f,i.relatedTarget=p,m=null,Gr(a)===r&&((s=new s(d,h+"enter",c,n,a)).target=p,s.relatedTarget=f,m=s),f=m,u&&c)e:{for(d=c,h=0,p=s=u;p;p=Ir(p))h++;for(p=0,m=d;m;m=Ir(m))p++;for(;0<h-p;)s=Ir(s),h--;for(;0<p-h;)d=Ir(d),p--;for(;h--;){if(s===d||null!==d&&s===d.alternate)break e;s=Ir(s),d=Ir(d)}s=null}else s=null;null!==u&&Fr(l,i,u,s,!1),null!==c&&null!==f&&Fr(l,f,c,s,!0)}if("select"===(u=(i=r?Jr(r):window).nodeName&&i.nodeName.toLowerCase())||"input"===u&&"file"===i.type)var v=qn;else if(Vn(i))if(Yn)v=ar;else{v=nr;var y=tr}else(u=i.nodeName)&&"input"===u.toLowerCase()&&("checkbox"===i.type||"radio"===i.type)&&(v=rr);switch(v&&(v=v(e,r))?Wn(l,v,n,a):(y&&y(e,i,r),"focusout"===e&&(y=i._wrapperState)&&y.controlled&&"number"===i.type&&ae(i,"number",i.value)),y=r?Jr(r):window,e){case"focusin":(Vn(y)||"true"===y.contentEditable)&&(hr=y,mr=r,vr=null);break;case"focusout":vr=mr=hr=null;break;case"mousedown":yr=!0;break;case"contextmenu":case"mouseup":case"dragend":yr=!1,gr(l,n,a);break;case"selectionchange":if(pr)break;case"keydown":case"keyup":gr(l,n,a)}var g;if(Rn)e:{switch(e){case"compositionstart":var b="onCompositionStart";break e;case"compositionend":b="onCompositionEnd";break e;case"compositionupdate":b="onCompositionUpdate";break e}b=void 0}else jn?Dn(e,n)&&(b="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(b="onCompositionStart");b&&(Ln&&"ko"!==n.locale&&(jn||"onCompositionStart"!==b?"onCompositionEnd"===b&&jn&&(g=tn()):(Jt="value"in(Zt=a)?Zt.value:Zt.textContent,jn=!0)),0<(y=Rr(r,b)).length&&(b=new wn(b,e,null,n,a),l.push({event:b,listeners:y}),(g||null!==(g=Un(n)))&&(b.data=g))),(g=Fn?function(e,t){switch(e){case"compositionend":return Un(t);case"keypress":return 32!==t.which?null:(zn=!0,An);case"textInput":return(e=t.data)===An&&zn?null:e;default:return null}}(e,n):function(e,t){if(jn)return"compositionend"===e||!Rn&&Dn(e,t)?(e=tn(),en=Jt=Zt=null,jn=!1,e):null;switch(e){case"paste":return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Ln&&"ko"!==t.locale?null:t.data;default:return null}}(e,n))&&0<(r=Rr(r,"onBeforeInput")).length&&(a=new wn("onBeforeInput","beforeinput",null,n,a),l.push({event:a,listeners:r}),a.data=g)}xr(l,t)}))}function Or(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Rr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,o=a.stateNode;5===a.tag&&null!==o&&(a=o,null!=(o=Ue(e,n))&&r.unshift(Or(e,o,a)),null!=(o=Ue(e,t))&&r.push(Or(e,o,a))),e=e.return}return r}function Ir(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Fr(e,t,n,r,a){for(var o=t._reactName,l=[];null!==n&&n!==r;){var i=n,u=i.alternate,c=i.stateNode;if(null!==u&&u===r)break;5===i.tag&&null!==c&&(i=c,a?null!=(u=Ue(n,o))&&l.unshift(Or(n,u,i)):a||null!=(u=Ue(n,o))&&l.push(Or(n,u,i))),n=n.return}0!==l.length&&e.push({event:t,listeners:l})}function Lr(){}var Ar=null,zr=null;function Dr(e,t){switch(e){case"button":case"input":case"select":case"textarea":return!!t.autoFocus}return!1}function Ur(e,t){return"textarea"===e||"option"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var jr="function"==typeof setTimeout?setTimeout:void 0,Br="function"==typeof clearTimeout?clearTimeout:void 0;function Vr(e){(1===e.nodeType||9===e.nodeType&&null!=(e=e.body))&&(e.textContent="")}function Wr(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break}return e}function $r(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var Hr=0,Kr=Math.random().toString(36).slice(2),Qr="__reactFiber$"+Kr,qr="__reactProps$"+Kr,Yr="__reactContainer$"+Kr,Xr="__reactEvents$"+Kr;function Gr(e){var t=e[Qr];if(t)return t;for(var n=e.parentNode;n;){if(t=n[Yr]||n[Qr]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=$r(e);null!==e;){if(n=e[Qr])return n;e=$r(e)}return t}n=(e=n).parentNode}return null}function Zr(e){return!(e=e[Qr]||e[Yr])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Jr(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function ea(e){return e[qr]||null}function ta(e){var t=e[Xr];return void 0===t&&(t=e[Xr]=new Set),t}var na=[],ra=-1;function aa(e){return{current:e}}function oa(e){0>ra||(e.current=na[ra],na[ra]=null,ra--)}function la(e,t){ra++,na[ra]=e.current,e.current=t}var ia={},ua=aa(ia),ca=aa(!1),sa=ia;function fa(e,t){var n=e.type.contextTypes;if(!n)return ia;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,o={};for(a in n)o[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=o),o}function da(e){return null!=e.childContextTypes}function pa(){oa(ca),oa(ua)}function ha(e,t,n){if(ua.current!==ia)throw Error(l(168));la(ua,t),la(ca,n)}function ma(e,t,n){var r=e.stateNode;if(e=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var o in r=r.getChildContext())if(!(o in e))throw Error(l(108,Q(t)||"Unknown",o));return a({},n,r)}function va(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||ia,sa=ua.current,la(ua,e),la(ca,ca.current),!0}function ya(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=ma(e,t,sa),r.__reactInternalMemoizedMergedChildContext=e,oa(ca),oa(ua),la(ua,e)):oa(ca),la(ca,n)}var ga=null,ba=null,wa=o.unstable_runWithPriority,ka=o.unstable_scheduleCallback,Ea=o.unstable_cancelCallback,Sa=o.unstable_shouldYield,xa=o.unstable_requestPaint,Ca=o.unstable_now,Pa=o.unstable_getCurrentPriorityLevel,_a=o.unstable_ImmediatePriority,Ta=o.unstable_UserBlockingPriority,Na=o.unstable_NormalPriority,Ma=o.unstable_LowPriority,Oa=o.unstable_IdlePriority,Ra={},Ia=void 0!==xa?xa:function(){},Fa=null,La=null,Aa=!1,za=Ca(),Da=1e4>za?Ca:function(){return Ca()-za};function Ua(){switch(Pa()){case _a:return 99;case Ta:return 98;case Na:return 97;case Ma:return 96;case Oa:return 95;default:throw Error(l(332))}}function ja(e){switch(e){case 99:return _a;case 98:return Ta;case 97:return Na;case 96:return Ma;case 95:return Oa;default:throw Error(l(332))}}function Ba(e,t){return e=ja(e),wa(e,t)}function Va(e,t,n){return e=ja(e),ka(e,t,n)}function Wa(){if(null!==La){var e=La;La=null,Ea(e)}$a()}function $a(){if(!Aa&&null!==Fa){Aa=!0;var e=0;try{var t=Fa;Ba(99,(function(){for(;e<t.length;e++){var n=t[e];do{n=n(!0)}while(null!==n)}})),Fa=null}catch(t){throw null!==Fa&&(Fa=Fa.slice(e+1)),ka(_a,Wa),t}finally{Aa=!1}}}var Ha=k.ReactCurrentBatchConfig;function Ka(e,t){if(e&&e.defaultProps){for(var n in t=a({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}var Qa=aa(null),qa=null,Ya=null,Xa=null;function Ga(){Xa=Ya=qa=null}function Za(e){var t=Qa.current;oa(Qa),e.type._context._currentValue=t}function Ja(e,t){for(;null!==e;){var n=e.alternate;if((e.childLanes&t)===t){if(null===n||(n.childLanes&t)===t)break;n.childLanes|=t}else e.childLanes|=t,null!==n&&(n.childLanes|=t);e=e.return}}function eo(e,t){qa=e,Xa=Ya=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(0!=(e.lanes&t)&&(Rl=!0),e.firstContext=null)}function to(e,t){if(Xa!==e&&!1!==t&&0!==t)if("number"==typeof t&&1073741823!==t||(Xa=e,t=1073741823),t={context:e,observedBits:t,next:null},null===Ya){if(null===qa)throw Error(l(308));Ya=t,qa.dependencies={lanes:0,firstContext:t,responders:null}}else Ya=Ya.next=t;return e._currentValue}var no=!1;function ro(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null},effects:null}}function ao(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function oo(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function lo(e,t){if(null!==(e=e.updateQueue)){var n=(e=e.shared).pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}}function io(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,o=null;if(null!==(n=n.firstBaseUpdate)){do{var l={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===o?a=o=l:o=o.next=l,n=n.next}while(null!==n);null===o?a=o=t:o=o.next=t}else a=o=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:o,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function uo(e,t,n,r){var o=e.updateQueue;no=!1;var l=o.firstBaseUpdate,i=o.lastBaseUpdate,u=o.shared.pending;if(null!==u){o.shared.pending=null;var c=u,s=c.next;c.next=null,null===i?l=s:i.next=s,i=c;var f=e.alternate;if(null!==f){var d=(f=f.updateQueue).lastBaseUpdate;d!==i&&(null===d?f.firstBaseUpdate=s:d.next=s,f.lastBaseUpdate=c)}}if(null!==l){for(d=o.baseState,i=0,f=s=c=null;;){u=l.lane;var p=l.eventTime;if((r&u)===u){null!==f&&(f=f.next={eventTime:p,lane:0,tag:l.tag,payload:l.payload,callback:l.callback,next:null});e:{var h=e,m=l;switch(u=t,p=n,m.tag){case 1:if("function"==typeof(h=m.payload)){d=h.call(p,d,u);break e}d=h;break e;case 3:h.flags=-4097&h.flags|64;case 0:if(null==(u="function"==typeof(h=m.payload)?h.call(p,d,u):h))break e;d=a({},d,u);break e;case 2:no=!0}}null!==l.callback&&(e.flags|=32,null===(u=o.effects)?o.effects=[l]:u.push(l))}else p={eventTime:p,lane:u,tag:l.tag,payload:l.payload,callback:l.callback,next:null},null===f?(s=f=p,c=d):f=f.next=p,i|=u;if(null===(l=l.next)){if(null===(u=o.shared.pending))break;l=u.next,u.next=null,o.lastBaseUpdate=u,o.shared.pending=null}}null===f&&(c=d),o.baseState=c,o.firstBaseUpdate=s,o.lastBaseUpdate=f,Fi|=i,e.lanes=i,e.memoizedState=d}}function co(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var so=(new r.Component).refs;function fo(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:a({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var po={isMounted:function(e){return!!(e=e._reactInternals)&&Ye(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ou(),a=lu(e),o=oo(r,a);o.payload=t,null!=n&&(o.callback=n),lo(e,o),iu(e,a,r)},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ou(),a=lu(e),o=oo(r,a);o.tag=1,o.payload=t,null!=n&&(o.callback=n),lo(e,o),iu(e,a,r)},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ou(),r=lu(e),a=oo(n,r);a.tag=2,null!=t&&(a.callback=t),lo(e,a),iu(e,r,n)}};function ho(e,t,n,r,a,o,l){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,o,l):!(t.prototype&&t.prototype.isPureReactComponent&&ir(n,r)&&ir(a,o))}function mo(e,t,n){var r=!1,a=ia,o=t.contextType;return"object"==typeof o&&null!==o?o=to(o):(a=da(t)?sa:ua.current,o=(r=null!=(r=t.contextTypes))?fa(e,a):ia),t=new t(n,o),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=po,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=o),t}function vo(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&po.enqueueReplaceState(t,t.state,null)}function yo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs=so,ro(e);var o=t.contextType;"object"==typeof o&&null!==o?a.context=to(o):(o=da(t)?sa:ua.current,a.context=fa(e,o)),uo(e,n,a,r),a.state=e.memoizedState,"function"==typeof(o=t.getDerivedStateFromProps)&&(fo(e,t,o,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&po.enqueueReplaceState(a,a.state,null),uo(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4)}var go=Array.isArray;function bo(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===a?t.ref:((t=function(e){var t=r.refs;t===so&&(t=r.refs={}),null===e?delete t[a]:t[a]=e})._stringRef=a,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function wo(e,t){if("textarea"!==e.type)throw Error(l(31,"[object Object]"===Object.prototype.toString.call(t)?"object with keys {"+Object.keys(t).join(", ")+"}":t))}function ko(e){function t(t,n){if(e){var r=t.lastEffect;null!==r?(r.nextEffect=n,t.lastEffect=n):t.firstEffect=t.lastEffect=n,n.nextEffect=null,n.flags=8}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=zu(e,t)).index=0,e.sibling=null,e}function o(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags=2,n):r:(t.flags=2,n):n}function i(t){return e&&null===t.alternate&&(t.flags=2),t}function u(e,t,n,r){return null===t||6!==t.tag?((t=Bu(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){return null!==t&&t.elementType===n.type?((r=a(t,n.props)).ref=bo(e,t,n),r.return=e,r):((r=Du(n.type,n.key,n.props,null,e.mode,r)).ref=bo(e,t,n),r.return=e,r)}function s(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=Vu(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function f(e,t,n,r,o){return null===t||7!==t.tag?((t=Uu(n,e.mode,r,o)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t||"number"==typeof t)return(t=Bu(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case E:return(n=Du(t.type,t.key,t.props,null,e.mode,n)).ref=bo(e,null,t),n.return=e,n;case S:return(t=Vu(t,e.mode,n)).return=e,t}if(go(t)||V(t))return(t=Uu(t,e.mode,n,null)).return=e,t;wo(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n||"number"==typeof n)return null!==a?null:u(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case E:return n.key===a?n.type===x?f(e,t,n.props.children,r,a):c(e,t,n,r):null;case S:return n.key===a?s(e,t,n,r):null}if(go(n)||V(n))return null!==a?null:f(e,t,n,r,null);wo(e,n)}return null}function h(e,t,n,r,a){if("string"==typeof r||"number"==typeof r)return u(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case E:return e=e.get(null===r.key?n:r.key)||null,r.type===x?f(t,e,r.props.children,a,r.key):c(t,e,r,a);case S:return s(t,e=e.get(null===r.key?n:r.key)||null,r,a)}if(go(r)||V(r))return f(t,e=e.get(n)||null,r,a,null);wo(t,r)}return null}function m(a,l,i,u){for(var c=null,s=null,f=l,m=l=0,v=null;null!==f&&m<i.length;m++){f.index>m?(v=f,f=null):v=f.sibling;var y=p(a,f,i[m],u);if(null===y){null===f&&(f=v);break}e&&f&&null===y.alternate&&t(a,f),l=o(y,l,m),null===s?c=y:s.sibling=y,s=y,f=v}if(m===i.length)return n(a,f),c;if(null===f){for(;m<i.length;m++)null!==(f=d(a,i[m],u))&&(l=o(f,l,m),null===s?c=f:s.sibling=f,s=f);return c}for(f=r(a,f);m<i.length;m++)null!==(v=h(f,a,m,i[m],u))&&(e&&null!==v.alternate&&f.delete(null===v.key?m:v.key),l=o(v,l,m),null===s?c=v:s.sibling=v,s=v);return e&&f.forEach((function(e){return t(a,e)})),c}function v(a,i,u,c){var s=V(u);if("function"!=typeof s)throw Error(l(150));if(null==(u=s.call(u)))throw Error(l(151));for(var f=s=null,m=i,v=i=0,y=null,g=u.next();null!==m&&!g.done;v++,g=u.next()){m.index>v?(y=m,m=null):y=m.sibling;var b=p(a,m,g.value,c);if(null===b){null===m&&(m=y);break}e&&m&&null===b.alternate&&t(a,m),i=o(b,i,v),null===f?s=b:f.sibling=b,f=b,m=y}if(g.done)return n(a,m),s;if(null===m){for(;!g.done;v++,g=u.next())null!==(g=d(a,g.value,c))&&(i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return s}for(m=r(a,m);!g.done;v++,g=u.next())null!==(g=h(m,a,v,g.value,c))&&(e&&null!==g.alternate&&m.delete(null===g.key?v:g.key),i=o(g,i,v),null===f?s=g:f.sibling=g,f=g);return e&&m.forEach((function(e){return t(a,e)})),s}return function(e,r,o,u){var c="object"==typeof o&&null!==o&&o.type===x&&null===o.key;c&&(o=o.props.children);var s="object"==typeof o&&null!==o;if(s)switch(o.$$typeof){case E:e:{for(s=o.key,c=r;null!==c;){if(c.key===s){switch(c.tag){case 7:if(o.type===x){n(e,c.sibling),(r=a(c,o.props.children)).return=e,e=r;break e}break;default:if(c.elementType===o.type){n(e,c.sibling),(r=a(c,o.props)).ref=bo(e,c,o),r.return=e,e=r;break e}}n(e,c);break}t(e,c),c=c.sibling}o.type===x?((r=Uu(o.props.children,e.mode,u,o.key)).return=e,e=r):((u=Du(o.type,o.key,o.props,null,e.mode,u)).ref=bo(e,r,o),u.return=e,e=u)}return i(e);case S:e:{for(c=o.key;null!==r;){if(r.key===c){if(4===r.tag&&r.stateNode.containerInfo===o.containerInfo&&r.stateNode.implementation===o.implementation){n(e,r.sibling),(r=a(r,o.children||[])).return=e,e=r;break e}n(e,r);break}t(e,r),r=r.sibling}(r=Vu(o,e.mode,u)).return=e,e=r}return i(e)}if("string"==typeof o||"number"==typeof o)return o=""+o,null!==r&&6===r.tag?(n(e,r.sibling),(r=a(r,o)).return=e,e=r):(n(e,r),(r=Bu(o,e.mode,u)).return=e,e=r),i(e);if(go(o))return m(e,r,o,u);if(V(o))return v(e,r,o,u);if(s&&wo(e,o),void 0===o&&!c)switch(e.tag){case 1:case 22:case 0:case 11:case 15:throw Error(l(152,Q(e.type)||"Component"))}return n(e,r)}}var Eo=ko(!0),So=ko(!1),xo={},Co=aa(xo),Po=aa(xo),_o=aa(xo);function To(e){if(e===xo)throw Error(l(174));return e}function No(e,t){switch(la(_o,t),la(Po,e),la(Co,xo),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:pe(null,"");break;default:t=pe(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}oa(Co),la(Co,t)}function Mo(){oa(Co),oa(Po),oa(_o)}function Oo(e){To(_o.current);var t=To(Co.current),n=pe(t,e.type);t!==n&&(la(Po,e),la(Co,n))}function Ro(e){Po.current===e&&(oa(Co),oa(Po))}var Io=aa(0);function Fo(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(0!=(64&t.flags))return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var Lo=null,Ao=null,zo=!1;function Do(e,t){var n=Lu(5,null,null,0);n.elementType="DELETED",n.type="DELETED",n.stateNode=t,n.return=e,n.flags=8,null!==e.lastEffect?(e.lastEffect.nextEffect=n,e.lastEffect=n):e.firstEffect=e.lastEffect=n}function Uo(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,!0);case 13:default:return!1}}function jo(e){if(zo){var t=Ao;if(t){var n=t;if(!Uo(e,t)){if(!(t=Wr(n.nextSibling))||!Uo(e,t))return e.flags=-1025&e.flags|2,zo=!1,void(Lo=e);Do(Lo,n)}Lo=e,Ao=Wr(t.firstChild)}else e.flags=-1025&e.flags|2,zo=!1,Lo=e}}function Bo(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;Lo=e}function Vo(e){if(e!==Lo)return!1;if(!zo)return Bo(e),zo=!0,!1;var t=e.type;if(5!==e.tag||"head"!==t&&"body"!==t&&!Ur(t,e.memoizedProps))for(t=Ao;t;)Do(e,t),t=Wr(t.nextSibling);if(Bo(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){Ao=Wr(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}Ao=null}}else Ao=Lo?Wr(e.stateNode.nextSibling):null;return!0}function Wo(){Ao=Lo=null,zo=!1}var $o=[];function Ho(){for(var e=0;e<$o.length;e++)$o[e]._workInProgressVersionPrimary=null;$o.length=0}var Ko=k.ReactCurrentDispatcher,Qo=k.ReactCurrentBatchConfig,qo=0,Yo=null,Xo=null,Go=null,Zo=!1,Jo=!1;function el(){throw Error(l(321))}function tl(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function nl(e,t,n,r,a,o){if(qo=o,Yo=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,Ko.current=null===e||null===e.memoizedState?Tl:Nl,e=n(r,a),Jo){o=0;do{if(Jo=!1,!(25>o))throw Error(l(301));o+=1,Go=Xo=null,t.updateQueue=null,Ko.current=Ml,e=n(r,a)}while(Jo)}if(Ko.current=_l,t=null!==Xo&&null!==Xo.next,qo=0,Go=Xo=Yo=null,Zo=!1,t)throw Error(l(300));return e}function rl(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===Go?Yo.memoizedState=Go=e:Go=Go.next=e,Go}function al(){if(null===Xo){var e=Yo.alternate;e=null!==e?e.memoizedState:null}else e=Xo.next;var t=null===Go?Yo.memoizedState:Go.next;if(null!==t)Go=t,Xo=e;else{if(null===e)throw Error(l(310));e={memoizedState:(Xo=e).memoizedState,baseState:Xo.baseState,baseQueue:Xo.baseQueue,queue:Xo.queue,next:null},null===Go?Yo.memoizedState=Go=e:Go=Go.next=e}return Go}function ol(e,t){return"function"==typeof t?t(e):t}function ll(e){var t=al(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=Xo,a=r.baseQueue,o=n.pending;if(null!==o){if(null!==a){var i=a.next;a.next=o.next,o.next=i}r.baseQueue=a=o,n.pending=null}if(null!==a){a=a.next,r=r.baseState;var u=i=o=null,c=a;do{var s=c.lane;if((qo&s)===s)null!==u&&(u=u.next={lane:0,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null}),r=c.eagerReducer===e?c.eagerState:e(r,c.action);else{var f={lane:s,action:c.action,eagerReducer:c.eagerReducer,eagerState:c.eagerState,next:null};null===u?(i=u=f,o=r):u=u.next=f,Yo.lanes|=s,Fi|=s}c=c.next}while(null!==c&&c!==a);null===u?o=r:u.next=i,or(r,t.memoizedState)||(Rl=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=u,n.lastRenderedState=r}return[t.memoizedState,n.dispatch]}function il(e){var t=al(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,o=t.memoizedState;if(null!==a){n.pending=null;var i=a=a.next;do{o=e(o,i.action),i=i.next}while(i!==a);or(o,t.memoizedState)||(Rl=!0),t.memoizedState=o,null===t.baseQueue&&(t.baseState=o),n.lastRenderedState=o}return[o,r]}function ul(e,t,n){var r=t._getVersion;r=r(t._source);var a=t._workInProgressVersionPrimary;if(null!==a?e=a===r:(e=e.mutableReadLanes,(e=(qo&e)===e)&&(t._workInProgressVersionPrimary=r,$o.push(t))),e)return n(t._source);throw $o.push(t),Error(l(350))}function cl(e,t,n,r){var a=Pi;if(null===a)throw Error(l(349));var o=t._getVersion,i=o(t._source),u=Ko.current,c=u.useState((function(){return ul(a,t,n)})),s=c[1],f=c[0];c=Go;var d=e.memoizedState,p=d.refs,h=p.getSnapshot,m=d.source;d=d.subscribe;var v=Yo;return e.memoizedState={refs:p,source:t,subscribe:r},u.useEffect((function(){p.getSnapshot=n,p.setSnapshot=s;var e=o(t._source);if(!or(i,e)){e=n(t._source),or(f,e)||(s(e),e=lu(v),a.mutableReadLanes|=e&a.pendingLanes),e=a.mutableReadLanes,a.entangledLanes|=e;for(var r=a.entanglements,l=e;0<l;){var u=31-Vt(l),c=1<<u;r[u]|=e,l&=~c}}}),[n,t,r]),u.useEffect((function(){return r(t._source,(function(){var e=p.getSnapshot,n=p.setSnapshot;try{n(e(t._source));var r=lu(v);a.mutableReadLanes|=r&a.pendingLanes}catch(e){n((function(){throw e}))}}))}),[t,r]),or(h,n)&&or(m,t)&&or(d,r)||((e={pending:null,dispatch:null,lastRenderedReducer:ol,lastRenderedState:f}).dispatch=s=Pl.bind(null,Yo,e),c.queue=e,c.baseQueue=null,f=ul(a,t,n),c.memoizedState=c.baseState=f),f}function sl(e,t,n){return cl(al(),e,t,n)}function fl(e){var t=rl();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e=(e=t.queue={pending:null,dispatch:null,lastRenderedReducer:ol,lastRenderedState:e}).dispatch=Pl.bind(null,Yo,e),[t.memoizedState,e]}function dl(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=Yo.updateQueue)?(t={lastEffect:null},Yo.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function pl(e){return e={current:e},rl().memoizedState=e}function hl(){return al().memoizedState}function ml(e,t,n,r){var a=rl();Yo.flags|=e,a.memoizedState=dl(1|t,n,void 0,void 0===r?null:r)}function vl(e,t,n,r){var a=al();r=void 0===r?null:r;var o=void 0;if(null!==Xo){var l=Xo.memoizedState;if(o=l.destroy,null!==r&&tl(r,l.deps))return void dl(t,n,o,r)}Yo.flags|=e,a.memoizedState=dl(1|t,n,o,r)}function yl(e,t){return ml(516,4,e,t)}function gl(e,t){return vl(516,4,e,t)}function bl(e,t){return vl(4,2,e,t)}function wl(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function kl(e,t,n){return n=null!=n?n.concat([e]):null,vl(4,2,wl.bind(null,t,e),n)}function El(){}function Sl(e,t){var n=al();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&tl(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function xl(e,t){var n=al();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&tl(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Cl(e,t){var n=Ua();Ba(98>n?98:n,(function(){e(!0)})),Ba(97<n?97:n,(function(){var n=Qo.transition;Qo.transition=1;try{e(!1),t()}finally{Qo.transition=n}}))}function Pl(e,t,n){var r=ou(),a=lu(e),o={lane:a,action:n,eagerReducer:null,eagerState:null,next:null},l=t.pending;if(null===l?o.next=o:(o.next=l.next,l.next=o),t.pending=o,l=e.alternate,e===Yo||null!==l&&l===Yo)Jo=Zo=!0;else{if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,u=l(i,n);if(o.eagerReducer=l,o.eagerState=u,or(u,i))return}catch(e){}iu(e,a,r)}}var _l={readContext:to,useCallback:el,useContext:el,useEffect:el,useImperativeHandle:el,useLayoutEffect:el,useMemo:el,useReducer:el,useRef:el,useState:el,useDebugValue:el,useDeferredValue:el,useTransition:el,useMutableSource:el,useOpaqueIdentifier:el,unstable_isNewReconciler:!1},Tl={readContext:to,useCallback:function(e,t){return rl().memoizedState=[e,void 0===t?null:t],e},useContext:to,useEffect:yl,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,ml(4,2,wl.bind(null,t,e),n)},useLayoutEffect:function(e,t){return ml(4,2,e,t)},useMemo:function(e,t){var n=rl();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=rl();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e=(e=r.queue={pending:null,dispatch:null,lastRenderedReducer:e,lastRenderedState:t}).dispatch=Pl.bind(null,Yo,e),[r.memoizedState,e]},useRef:pl,useState:fl,useDebugValue:El,useDeferredValue:function(e){var t=fl(e),n=t[0],r=t[1];return yl((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=fl(!1),t=e[0];return pl(e=Cl.bind(null,e[1])),[e,t]},useMutableSource:function(e,t,n){var r=rl();return r.memoizedState={refs:{getSnapshot:t,setSnapshot:null},source:e,subscribe:n},cl(r,e,t,n)},useOpaqueIdentifier:function(){if(zo){var e=!1,t=function(e){return{$$typeof:L,toString:e,valueOf:e}}((function(){throw e||(e=!0,n("r:"+(Hr++).toString(36))),Error(l(355))})),n=fl(t)[1];return 0==(2&Yo.mode)&&(Yo.flags|=516,dl(5,(function(){n("r:"+(Hr++).toString(36))}),void 0,null)),t}return fl(t="r:"+(Hr++).toString(36)),t},unstable_isNewReconciler:!1},Nl={readContext:to,useCallback:Sl,useContext:to,useEffect:gl,useImperativeHandle:kl,useLayoutEffect:bl,useMemo:xl,useReducer:ll,useRef:hl,useState:function(){return ll(ol)},useDebugValue:El,useDeferredValue:function(e){var t=ll(ol),n=t[0],r=t[1];return gl((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=ll(ol)[0];return[hl().current,e]},useMutableSource:sl,useOpaqueIdentifier:function(){return ll(ol)[0]},unstable_isNewReconciler:!1},Ml={readContext:to,useCallback:Sl,useContext:to,useEffect:gl,useImperativeHandle:kl,useLayoutEffect:bl,useMemo:xl,useReducer:il,useRef:hl,useState:function(){return il(ol)},useDebugValue:El,useDeferredValue:function(e){var t=il(ol),n=t[0],r=t[1];return gl((function(){var t=Qo.transition;Qo.transition=1;try{r(e)}finally{Qo.transition=t}}),[e]),n},useTransition:function(){var e=il(ol)[0];return[hl().current,e]},useMutableSource:sl,useOpaqueIdentifier:function(){return il(ol)[0]},unstable_isNewReconciler:!1},Ol=k.ReactCurrentOwner,Rl=!1;function Il(e,t,n,r){t.child=null===e?So(t,null,n,r):Eo(t,e.child,n,r)}function Fl(e,t,n,r,a){n=n.render;var o=t.ref;return eo(t,a),r=nl(e,t,n,r,o,a),null===e||Rl?(t.flags|=1,Il(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zl(e,t,a))}function Ll(e,t,n,r,a,o){if(null===e){var l=n.type;return"function"!=typeof l||Au(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Du(n.type,null,r,t,t.mode,o)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,Al(e,t,l,r,a,o))}return l=e.child,0==(a&o)&&(a=l.memoizedProps,(n=null!==(n=n.compare)?n:ir)(a,r)&&e.ref===t.ref)?Zl(e,t,o):(t.flags|=1,(e=zu(l,r)).ref=t.ref,e.return=t,t.child=e)}function Al(e,t,n,r,a,o){if(null!==e&&ir(e.memoizedProps,r)&&e.ref===t.ref){if(Rl=!1,0==(o&a))return t.lanes=e.lanes,Zl(e,t,o);0!=(16384&e.flags)&&(Rl=!0)}return Ul(e,t,n,r,o)}function zl(e,t,n){var r=t.pendingProps,a=r.children,o=null!==e?e.memoizedState:null;if("hidden"===r.mode||"unstable-defer-without-hiding"===r.mode)if(0==(4&t.mode))t.memoizedState={baseLanes:0},pu(0,n);else{if(0==(1073741824&n))return e=null!==o?o.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e},pu(0,e),null;t.memoizedState={baseLanes:0},pu(0,null!==o?o.baseLanes:n)}else null!==o?(r=o.baseLanes|n,t.memoizedState=null):r=n,pu(0,r);return Il(e,t,a,n),t.child}function Dl(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=128)}function Ul(e,t,n,r,a){var o=da(n)?sa:ua.current;return o=fa(t,o),eo(t,a),n=nl(e,t,n,r,o,a),null===e||Rl?(t.flags|=1,Il(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-517,e.lanes&=~a,Zl(e,t,a))}function jl(e,t,n,r,a){if(da(n)){var o=!0;va(t)}else o=!1;if(eo(t,a),null===t.stateNode)null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),mo(t,n,r),yo(t,n,r,a),r=!0;else if(null===e){var l=t.stateNode,i=t.memoizedProps;l.props=i;var u=l.context,c=n.contextType;c="object"==typeof c&&null!==c?to(c):fa(t,c=da(n)?sa:ua.current);var s=n.getDerivedStateFromProps,f="function"==typeof s||"function"==typeof l.getSnapshotBeforeUpdate;f||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==r||u!==c)&&vo(t,l,r,c),no=!1;var d=t.memoizedState;l.state=d,uo(t,r,l,a),u=t.memoizedState,i!==r||d!==u||ca.current||no?("function"==typeof s&&(fo(t,n,s,r),u=t.memoizedState),(i=no||ho(t,n,i,r,d,u,c))?(f||"function"!=typeof l.UNSAFE_componentWillMount&&"function"!=typeof l.componentWillMount||("function"==typeof l.componentWillMount&&l.componentWillMount(),"function"==typeof l.UNSAFE_componentWillMount&&l.UNSAFE_componentWillMount()),"function"==typeof l.componentDidMount&&(t.flags|=4)):("function"==typeof l.componentDidMount&&(t.flags|=4),t.memoizedProps=r,t.memoizedState=u),l.props=r,l.state=u,l.context=c,r=i):("function"==typeof l.componentDidMount&&(t.flags|=4),r=!1)}else{l=t.stateNode,ao(e,t),i=t.memoizedProps,c=t.type===t.elementType?i:Ka(t.type,i),l.props=c,f=t.pendingProps,d=l.context,u="object"==typeof(u=n.contextType)&&null!==u?to(u):fa(t,u=da(n)?sa:ua.current);var p=n.getDerivedStateFromProps;(s="function"==typeof p||"function"==typeof l.getSnapshotBeforeUpdate)||"function"!=typeof l.UNSAFE_componentWillReceiveProps&&"function"!=typeof l.componentWillReceiveProps||(i!==f||d!==u)&&vo(t,l,r,u),no=!1,d=t.memoizedState,l.state=d,uo(t,r,l,a);var h=t.memoizedState;i!==f||d!==h||ca.current||no?("function"==typeof p&&(fo(t,n,p,r),h=t.memoizedState),(c=no||ho(t,n,c,r,d,h,u))?(s||"function"!=typeof l.UNSAFE_componentWillUpdate&&"function"!=typeof l.componentWillUpdate||("function"==typeof l.componentWillUpdate&&l.componentWillUpdate(r,h,u),"function"==typeof l.UNSAFE_componentWillUpdate&&l.UNSAFE_componentWillUpdate(r,h,u)),"function"==typeof l.componentDidUpdate&&(t.flags|=4),"function"==typeof l.getSnapshotBeforeUpdate&&(t.flags|=256)):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),t.memoizedProps=r,t.memoizedState=h),l.props=r,l.state=h,l.context=u,r=c):("function"!=typeof l.componentDidUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof l.getSnapshotBeforeUpdate||i===e.memoizedProps&&d===e.memoizedState||(t.flags|=256),r=!1)}return Bl(e,t,n,r,o,a)}function Bl(e,t,n,r,a,o){Dl(e,t);var l=0!=(64&t.flags);if(!r&&!l)return a&&ya(t,n,!1),Zl(e,t,o);r=t.stateNode,Ol.current=t;var i=l&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&l?(t.child=Eo(t,e.child,null,o),t.child=Eo(t,null,i,o)):Il(e,t,i,o),t.memoizedState=r.state,a&&ya(t,n,!0),t.child}function Vl(e){var t=e.stateNode;t.pendingContext?ha(0,t.pendingContext,t.pendingContext!==t.context):t.context&&ha(0,t.context,!1),No(e,t.containerInfo)}var Wl,$l,Hl,Kl={dehydrated:null,retryLane:0};function Ql(e,t,n){var r,a=t.pendingProps,o=Io.current,l=!1;return(r=0!=(64&t.flags))||(r=(null===e||null!==e.memoizedState)&&0!=(2&o)),r?(l=!0,t.flags&=-65):null!==e&&null===e.memoizedState||void 0===a.fallback||!0===a.unstable_avoidThisFallback||(o|=1),la(Io,1&o),null===e?(void 0!==a.fallback&&jo(t),e=a.children,o=a.fallback,l?(e=ql(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Kl,e):"number"==typeof a.unstable_expectedLoadTime?(e=ql(t,e,o,n),t.child.memoizedState={baseLanes:n},t.memoizedState=Kl,t.lanes=33554432,e):((n=ju({mode:"visible",children:e},t.mode,n,null)).return=t,t.child=n)):(e.memoizedState,l?(a=function(e,t,n,r,a){var o=t.mode,l=e.child;e=l.sibling;var i={mode:"hidden",children:n};return 0==(2&o)&&t.child!==l?((n=t.child).childLanes=0,n.pendingProps=i,null!==(l=n.lastEffect)?(t.firstEffect=n.firstEffect,t.lastEffect=l,l.nextEffect=null):t.firstEffect=t.lastEffect=null):n=zu(l,i),null!==e?r=zu(e,r):(r=Uu(r,o,a,null)).flags|=2,r.return=t,n.return=t,n.sibling=r,t.child=n,r}(e,t,a.children,a.fallback,n),l=t.child,o=e.child.memoizedState,l.memoizedState=null===o?{baseLanes:n}:{baseLanes:o.baseLanes|n},l.childLanes=e.childLanes&~n,t.memoizedState=Kl,a):(n=function(e,t,n,r){var a=e.child;return e=a.sibling,n=zu(a,{mode:"visible",children:n}),0==(2&t.mode)&&(n.lanes=r),n.return=t,n.sibling=null,null!==e&&(e.nextEffect=null,e.flags=8,t.firstEffect=t.lastEffect=e),t.child=n}(e,t,a.children,n),t.memoizedState=null,n))}function ql(e,t,n,r){var a=e.mode,o=e.child;return t={mode:"hidden",children:t},0==(2&a)&&null!==o?(o.childLanes=0,o.pendingProps=t):o=ju(t,a,0,null),n=Uu(n,a,r,null),o.return=e,n.return=e,o.sibling=n,e.child=o,n}function Yl(e,t){e.lanes|=t;var n=e.alternate;null!==n&&(n.lanes|=t),Ja(e.return,t)}function Xl(e,t,n,r,a,o){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a,lastEffect:o}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a,l.lastEffect=o)}function Gl(e,t,n){var r=t.pendingProps,a=r.revealOrder,o=r.tail;if(Il(e,t,r.children,n),0!=(2&(r=Io.current)))r=1&r|2,t.flags|=64;else{if(null!==e&&0!=(64&e.flags))e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Yl(e,n);else if(19===e.tag)Yl(e,n);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(la(Io,r),0==(2&t.mode))t.memoizedState=null;else switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===Fo(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Xl(t,!1,a,n,o,t.lastEffect);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===Fo(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Xl(t,!0,n,null,o,t.lastEffect);break;case"together":Xl(t,!1,null,null,void 0,t.lastEffect);break;default:t.memoizedState=null}return t.child}function Zl(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Fi|=t.lanes,0!=(n&t.childLanes)){if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=zu(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=zu(e,e.pendingProps)).return=t;n.sibling=null}return t.child}return null}function Jl(e,t){if(!zo)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function ei(e,t,n){var r=t.pendingProps;switch(t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return null;case 1:return da(t.type)&&pa(),null;case 3:return Mo(),oa(ca),oa(ua),Ho(),(r=t.stateNode).pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(Vo(t)?t.flags|=4:r.hydrate||(t.flags|=256)),null;case 5:Ro(t);var o=To(_o.current);if(n=t.type,null!==e&&null!=t.stateNode)$l(e,t,n,r),e.ref!==t.ref&&(t.flags|=128);else{if(!r){if(null===t.stateNode)throw Error(l(166));return null}if(e=To(Co.current),Vo(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[Qr]=t,r[qr]=i,n){case"dialog":Cr("cancel",r),Cr("close",r);break;case"iframe":case"object":case"embed":Cr("load",r);break;case"video":case"audio":for(e=0;e<kr.length;e++)Cr(kr[e],r);break;case"source":Cr("error",r);break;case"img":case"image":case"link":Cr("error",r),Cr("load",r);break;case"details":Cr("toggle",r);break;case"input":ee(r,i),Cr("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},Cr("invalid",r);break;case"textarea":ue(r,i),Cr("invalid",r)}for(var c in Se(n,i),e=null,i)i.hasOwnProperty(c)&&(o=i[c],"children"===c?"string"==typeof o?r.textContent!==o&&(e=["children",o]):"number"==typeof o&&r.textContent!==""+o&&(e=["children",""+o]):u.hasOwnProperty(c)&&null!=o&&"onScroll"===c&&Cr("scroll",r));switch(n){case"input":X(r),re(r,i,!0);break;case"textarea":X(r),se(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Lr)}r=e,t.updateQueue=r,null!==r&&(t.flags|=4)}else{switch(c=9===o.nodeType?o:o.ownerDocument,e===fe&&(e=de(n)),e===fe?"script"===n?((e=c.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=c.createElement(n,{is:r.is}):(e=c.createElement(n),"select"===n&&(c=e,r.multiple?c.multiple=!0:r.size&&(c.size=r.size))):e=c.createElementNS(e,n),e[Qr]=t,e[qr]=r,Wl(e,t),t.stateNode=e,c=xe(n,r),n){case"dialog":Cr("cancel",e),Cr("close",e),o=r;break;case"iframe":case"object":case"embed":Cr("load",e),o=r;break;case"video":case"audio":for(o=0;o<kr.length;o++)Cr(kr[o],e);o=r;break;case"source":Cr("error",e),o=r;break;case"img":case"image":case"link":Cr("error",e),Cr("load",e),o=r;break;case"details":Cr("toggle",e),o=r;break;case"input":ee(e,r),o=J(e,r),Cr("invalid",e);break;case"option":o=oe(e,r);break;case"select":e._wrapperState={wasMultiple:!!r.multiple},o=a({},r,{value:void 0}),Cr("invalid",e);break;case"textarea":ue(e,r),o=ie(e,r),Cr("invalid",e);break;default:o=r}Se(n,o);var s=o;for(i in s)if(s.hasOwnProperty(i)){var f=s[i];"style"===i?ke(e,f):"dangerouslySetInnerHTML"===i?null!=(f=f?f.__html:void 0)&&ve(e,f):"children"===i?"string"==typeof f?("textarea"!==n||""!==f)&&ye(e,f):"number"==typeof f&&ye(e,""+f):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(u.hasOwnProperty(i)?null!=f&&"onScroll"===i&&Cr("scroll",e):null!=f&&w(e,i,f,c))}switch(n){case"input":X(e),re(e,r,!1);break;case"textarea":X(e),se(e);break;case"option":null!=r.value&&e.setAttribute("value",""+q(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?le(e,!!r.multiple,i,!1):null!=r.defaultValue&&le(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof o.onClick&&(e.onclick=Lr)}Dr(n,r)&&(t.flags|=4)}null!==t.ref&&(t.flags|=128)}return null;case 6:if(e&&null!=t.stateNode)Hl(0,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));n=To(_o.current),To(Co.current),Vo(t)?(r=t.stateNode,n=t.memoizedProps,r[Qr]=t,r.nodeValue!==n&&(t.flags|=4)):((r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[Qr]=t,t.stateNode=r)}return null;case 13:return oa(Io),r=t.memoizedState,0!=(64&t.flags)?(t.lanes=n,t):(r=null!==r,n=!1,null===e?void 0!==t.memoizedProps.fallback&&Vo(t):n=null!==e.memoizedState,r&&!n&&0!=(2&t.mode)&&(null===e&&!0!==t.memoizedProps.unstable_avoidThisFallback||0!=(1&Io.current)?0===Oi&&(Oi=3):(0!==Oi&&3!==Oi||(Oi=4),null===Pi||0==(134217727&Fi)&&0==(134217727&Li)||fu(Pi,Ti))),(r||n)&&(t.flags|=4),null);case 4:return Mo(),null===e&&_r(t.stateNode.containerInfo),null;case 10:return Za(t),null;case 17:return da(t.type)&&pa(),null;case 19:if(oa(Io),null===(r=t.memoizedState))return null;if(i=0!=(64&t.flags),null===(c=r.rendering))if(i)Jl(r,!1);else{if(0!==Oi||null!==e&&0!=(64&e.flags))for(e=t.child;null!==e;){if(null!==(c=Fo(e))){for(t.flags|=64,Jl(r,!1),null!==(i=c.updateQueue)&&(t.updateQueue=i,t.flags|=4),null===r.lastEffect&&(t.firstEffect=null),t.lastEffect=r.lastEffect,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=2,i.nextEffect=null,i.firstEffect=null,i.lastEffect=null,null===(c=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=c.childLanes,i.lanes=c.lanes,i.child=c.child,i.memoizedProps=c.memoizedProps,i.memoizedState=c.memoizedState,i.updateQueue=c.updateQueue,i.type=c.type,e=c.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return la(Io,1&Io.current|2),t.child}e=e.sibling}null!==r.tail&&Da()>Ui&&(t.flags|=64,i=!0,Jl(r,!1),t.lanes=33554432)}else{if(!i)if(null!==(e=Fo(c))){if(t.flags|=64,i=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Jl(r,!0),null===r.tail&&"hidden"===r.tailMode&&!c.alternate&&!zo)return null!==(t=t.lastEffect=r.lastEffect)&&(t.nextEffect=null),null}else 2*Da()-r.renderingStartTime>Ui&&1073741824!==n&&(t.flags|=64,i=!0,Jl(r,!1),t.lanes=33554432);r.isBackwards?(c.sibling=t.child,t.child=c):(null!==(n=r.last)?n.sibling=c:t.child=c,r.last=c)}return null!==r.tail?(n=r.tail,r.rendering=n,r.tail=n.sibling,r.lastEffect=t.lastEffect,r.renderingStartTime=Da(),n.sibling=null,t=Io.current,la(Io,i?1&t|2:1&t),n):null;case 23:case 24:return hu(),null!==e&&null!==e.memoizedState!=(null!==t.memoizedState)&&"unstable-defer-without-hiding"!==r.mode&&(t.flags|=4),null}throw Error(l(156,t.tag))}function ti(e){switch(e.tag){case 1:da(e.type)&&pa();var t=e.flags;return 4096&t?(e.flags=-4097&t|64,e):null;case 3:if(Mo(),oa(ca),oa(ua),Ho(),0!=(64&(t=e.flags)))throw Error(l(285));return e.flags=-4097&t|64,e;case 5:return Ro(e),null;case 13:return oa(Io),4096&(t=e.flags)?(e.flags=-4097&t|64,e):null;case 19:return oa(Io),null;case 4:return Mo(),null;case 10:return Za(e),null;case 23:case 24:return hu(),null;default:return null}}function ni(e,t){try{var n="",r=t;do{n+=K(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a}}function ri(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}Wl=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},$l=function(e,t,n,r){var o=e.memoizedProps;if(o!==r){e=t.stateNode,To(Co.current);var l,i=null;switch(n){case"input":o=J(e,o),r=J(e,r),i=[];break;case"option":o=oe(e,o),r=oe(e,r),i=[];break;case"select":o=a({},o,{value:void 0}),r=a({},r,{value:void 0}),i=[];break;case"textarea":o=ie(e,o),r=ie(e,r),i=[];break;default:"function"!=typeof o.onClick&&"function"==typeof r.onClick&&(e.onclick=Lr)}for(f in Se(n,r),n=null,o)if(!r.hasOwnProperty(f)&&o.hasOwnProperty(f)&&null!=o[f])if("style"===f){var c=o[f];for(l in c)c.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==f&&"children"!==f&&"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&"autoFocus"!==f&&(u.hasOwnProperty(f)?i||(i=[]):(i=i||[]).push(f,null));for(f in r){var s=r[f];if(c=null!=o?o[f]:void 0,r.hasOwnProperty(f)&&s!==c&&(null!=s||null!=c))if("style"===f)if(c){for(l in c)!c.hasOwnProperty(l)||s&&s.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in s)s.hasOwnProperty(l)&&c[l]!==s[l]&&(n||(n={}),n[l]=s[l])}else n||(i||(i=[]),i.push(f,n)),n=s;else"dangerouslySetInnerHTML"===f?(s=s?s.__html:void 0,c=c?c.__html:void 0,null!=s&&c!==s&&(i=i||[]).push(f,s)):"children"===f?"string"!=typeof s&&"number"!=typeof s||(i=i||[]).push(f,""+s):"suppressContentEditableWarning"!==f&&"suppressHydrationWarning"!==f&&(u.hasOwnProperty(f)?(null!=s&&"onScroll"===f&&Cr("scroll",e),i||c===s||(i=[])):"object"==typeof s&&null!==s&&s.$$typeof===L?s.toString():(i=i||[]).push(f,s))}n&&(i=i||[]).push("style",n);var f=i;(t.updateQueue=f)&&(t.flags|=4)}},Hl=function(e,t,n,r){n!==r&&(t.flags|=4)};var ai="function"==typeof WeakMap?WeakMap:Map;function oi(e,t,n){(n=oo(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Wi||(Wi=!0,$i=r),ri(0,t)},n}function li(e,t,n){(n=oo(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return ri(0,t),r(a)}}var o=e.stateNode;return null!==o&&"function"==typeof o.componentDidCatch&&(n.callback=function(){"function"!=typeof r&&(null===Hi?Hi=new Set([this]):Hi.add(this),ri(0,t));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}var ii="function"==typeof WeakSet?WeakSet:Set;function ui(e){var t=e.ref;if(null!==t)if("function"==typeof t)try{t(null)}catch(t){Ou(e,t)}else t.current=null}function ci(e,t){switch(t.tag){case 0:case 11:case 15:case 22:return;case 1:if(256&t.flags&&null!==e){var n=e.memoizedProps,r=e.memoizedState;t=(e=t.stateNode).getSnapshotBeforeUpdate(t.elementType===t.type?n:Ka(t.type,n),r),e.__reactInternalSnapshotBeforeUpdate=t}return;case 3:return void(256&t.flags&&Vr(t.stateNode.containerInfo));case 5:case 6:case 4:case 17:return}throw Error(l(163))}function si(e,t,n){switch(n.tag){case 0:case 11:case 15:case 22:if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{if(3==(3&e.tag)){var r=e.create;e.destroy=r()}e=e.next}while(e!==t)}if(null!==(t=null!==(t=n.updateQueue)?t.lastEffect:null)){e=t=t.next;do{var a=e;r=a.next,0!=(4&(a=a.tag))&&0!=(1&a)&&(Tu(n,e),_u(n,e)),e=r}while(e!==t)}return;case 1:return e=n.stateNode,4&n.flags&&(null===t?e.componentDidMount():(r=n.elementType===n.type?t.memoizedProps:Ka(n.type,t.memoizedProps),e.componentDidUpdate(r,t.memoizedState,e.__reactInternalSnapshotBeforeUpdate))),void(null!==(t=n.updateQueue)&&co(n,t,e));case 3:if(null!==(t=n.updateQueue)){if(e=null,null!==n.child)switch(n.child.tag){case 5:e=n.child.stateNode;break;case 1:e=n.child.stateNode}co(n,t,e)}return;case 5:return e=n.stateNode,void(null===t&&4&n.flags&&Dr(n.type,n.memoizedProps)&&e.focus());case 6:case 4:case 12:return;case 13:return void(null===n.memoizedState&&(n=n.alternate,null!==n&&(n=n.memoizedState,null!==n&&(n=n.dehydrated,null!==n&&wt(n)))));case 19:case 17:case 20:case 21:case 23:case 24:return}throw Error(l(163))}function fi(e,t){for(var n=e;;){if(5===n.tag){var r=n.stateNode;if(t)"function"==typeof(r=r.style).setProperty?r.setProperty("display","none","important"):r.display="none";else{r=n.stateNode;var a=n.memoizedProps.style;a=null!=a&&a.hasOwnProperty("display")?a.display:null,r.style.display=we("display",a)}}else if(6===n.tag)n.stateNode.nodeValue=t?"":n.memoizedProps;else if((23!==n.tag&&24!==n.tag||null===n.memoizedState||n===e)&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===e)break;for(;null===n.sibling;){if(null===n.return||n.return===e)return;n=n.return}n.sibling.return=n.return,n=n.sibling}}function di(e,t){if(ba&&"function"==typeof ba.onCommitFiberUnmount)try{ba.onCommitFiberUnmount(ga,t)}catch(e){}switch(t.tag){case 0:case 11:case 14:case 15:case 22:if(null!==(e=t.updateQueue)&&null!==(e=e.lastEffect)){var n=e=e.next;do{var r=n,a=r.destroy;if(r=r.tag,void 0!==a)if(0!=(4&r))Tu(t,n);else{r=t;try{a()}catch(e){Ou(r,e)}}n=n.next}while(n!==e)}break;case 1:if(ui(t),"function"==typeof(e=t.stateNode).componentWillUnmount)try{e.props=t.memoizedProps,e.state=t.memoizedState,e.componentWillUnmount()}catch(e){Ou(t,e)}break;case 5:ui(t);break;case 4:gi(e,t)}}function pi(e){e.alternate=null,e.child=null,e.dependencies=null,e.firstEffect=null,e.lastEffect=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.return=null,e.updateQueue=null}function hi(e){return 5===e.tag||3===e.tag||4===e.tag}function mi(e){e:{for(var t=e.return;null!==t;){if(hi(t))break e;t=t.return}throw Error(l(160))}var n=t;switch(t=n.stateNode,n.tag){case 5:var r=!1;break;case 3:case 4:t=t.containerInfo,r=!0;break;default:throw Error(l(161))}16&n.flags&&(ye(t,""),n.flags&=-17);e:t:for(n=e;;){for(;null===n.sibling;){if(null===n.return||hi(n.return)){n=null;break e}n=n.return}for(n.sibling.return=n.return,n=n.sibling;5!==n.tag&&6!==n.tag&&18!==n.tag;){if(2&n.flags)continue t;if(null===n.child||4===n.tag)continue t;n.child.return=n,n=n.child}if(!(2&n.flags)){n=n.stateNode;break e}}r?vi(e,n,t):yi(e,n,t)}function vi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Lr));else if(4!==r&&null!==(e=e.child))for(vi(e,t,n),e=e.sibling;null!==e;)vi(e,t,n),e=e.sibling}function yi(e,t,n){var r=e.tag,a=5===r||6===r;if(a)e=a?e.stateNode:e.stateNode.instance,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(yi(e,t,n),e=e.sibling;null!==e;)yi(e,t,n),e=e.sibling}function gi(e,t){for(var n,r,a=t,o=!1;;){if(!o){o=a.return;e:for(;;){if(null===o)throw Error(l(160));switch(n=o.stateNode,o.tag){case 5:r=!1;break e;case 3:case 4:n=n.containerInfo,r=!0;break e}o=o.return}o=!0}if(5===a.tag||6===a.tag){e:for(var i=e,u=a,c=u;;)if(di(i,c),null!==c.child&&4!==c.tag)c.child.return=c,c=c.child;else{if(c===u)break e;for(;null===c.sibling;){if(null===c.return||c.return===u)break e;c=c.return}c.sibling.return=c.return,c=c.sibling}r?(i=n,u=a.stateNode,8===i.nodeType?i.parentNode.removeChild(u):i.removeChild(u)):n.removeChild(a.stateNode)}else if(4===a.tag){if(null!==a.child){n=a.stateNode.containerInfo,r=!0,a.child.return=a,a=a.child;continue}}else if(di(e,a),null!==a.child){a.child.return=a,a=a.child;continue}if(a===t)break;for(;null===a.sibling;){if(null===a.return||a.return===t)return;4===(a=a.return).tag&&(o=!1)}a.sibling.return=a.return,a=a.sibling}}function bi(e,t){switch(t.tag){case 0:case 11:case 14:case 15:case 22:var n=t.updateQueue;if(null!==(n=null!==n?n.lastEffect:null)){var r=n=n.next;do{3==(3&r.tag)&&(e=r.destroy,r.destroy=void 0,void 0!==e&&e()),r=r.next}while(r!==n)}return;case 1:return;case 5:if(null!=(n=t.stateNode)){r=t.memoizedProps;var a=null!==e?e.memoizedProps:r;e=t.type;var o=t.updateQueue;if(t.updateQueue=null,null!==o){for(n[qr]=r,"input"===e&&"radio"===r.type&&null!=r.name&&te(n,r),xe(e,a),t=xe(e,r),a=0;a<o.length;a+=2){var i=o[a],u=o[a+1];"style"===i?ke(n,u):"dangerouslySetInnerHTML"===i?ve(n,u):"children"===i?ye(n,u):w(n,i,u,t)}switch(e){case"input":ne(n,r);break;case"textarea":ce(n,r);break;case"select":e=n._wrapperState.wasMultiple,n._wrapperState.wasMultiple=!!r.multiple,null!=(o=r.value)?le(n,!!r.multiple,o,!1):e!==!!r.multiple&&(null!=r.defaultValue?le(n,!!r.multiple,r.defaultValue,!0):le(n,!!r.multiple,r.multiple?[]:"",!1))}}}return;case 6:if(null===t.stateNode)throw Error(l(162));return void(t.stateNode.nodeValue=t.memoizedProps);case 3:return void((n=t.stateNode).hydrate&&(n.hydrate=!1,wt(n.containerInfo)));case 12:return;case 13:return null!==t.memoizedState&&(Di=Da(),fi(t.child,!0)),void wi(t);case 19:return void wi(t);case 17:return;case 23:case 24:return void fi(t,null!==t.memoizedState)}throw Error(l(163))}function wi(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new ii),t.forEach((function(t){var r=Iu.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function ki(e,t){return null!==e&&(null===(e=e.memoizedState)||null!==e.dehydrated)&&null!==(t=t.memoizedState)&&null===t.dehydrated}var Ei=Math.ceil,Si=k.ReactCurrentDispatcher,xi=k.ReactCurrentOwner,Ci=0,Pi=null,_i=null,Ti=0,Ni=0,Mi=aa(0),Oi=0,Ri=null,Ii=0,Fi=0,Li=0,Ai=0,zi=null,Di=0,Ui=1/0;function ji(){Ui=Da()+500}var Bi,Vi=null,Wi=!1,$i=null,Hi=null,Ki=!1,Qi=null,qi=90,Yi=[],Xi=[],Gi=null,Zi=0,Ji=null,eu=-1,tu=0,nu=0,ru=null,au=!1;function ou(){return 0!=(48&Ci)?Da():-1!==eu?eu:eu=Da()}function lu(e){if(0==(2&(e=e.mode)))return 1;if(0==(4&e))return 99===Ua()?1:2;if(0===tu&&(tu=Ii),0!==Ha.transition){0!==nu&&(nu=null!==zi?zi.pendingLanes:0),e=tu;var t=4186112&~nu;return 0==(t&=-t)&&0==(t=(e=4186112&~e)&-e)&&(t=8192),t}return e=Ua(),e=Dt(0!=(4&Ci)&&98===e?12:e=function(e){switch(e){case 99:return 15;case 98:return 10;case 97:case 96:return 8;case 95:return 2;default:return 0}}(e),tu)}function iu(e,t,n){if(50<Zi)throw Zi=0,Ji=null,Error(l(185));if(null===(e=uu(e,t)))return null;Bt(e,t,n),e===Pi&&(Li|=t,4===Oi&&fu(e,Ti));var r=Ua();1===t?0!=(8&Ci)&&0==(48&Ci)?du(e):(cu(e,n),0===Ci&&(ji(),Wa())):(0==(4&Ci)||98!==r&&99!==r||(null===Gi?Gi=new Set([e]):Gi.add(e)),cu(e,n)),zi=e}function uu(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}function cu(e,t){for(var n=e.callbackNode,r=e.suspendedLanes,a=e.pingedLanes,o=e.expirationTimes,i=e.pendingLanes;0<i;){var u=31-Vt(i),c=1<<u,s=o[u];if(-1===s){if(0==(c&r)||0!=(c&a)){s=t,Lt(c);var f=Ft;o[u]=10<=f?s+250:6<=f?s+5e3:-1}}else s<=t&&(e.expiredLanes|=c);i&=~c}if(r=At(e,e===Pi?Ti:0),t=Ft,0===r)null!==n&&(n!==Ra&&Ea(n),e.callbackNode=null,e.callbackPriority=0);else{if(null!==n){if(e.callbackPriority===t)return;n!==Ra&&Ea(n)}15===t?(n=du.bind(null,e),null===Fa?(Fa=[n],La=ka(_a,$a)):Fa.push(n),n=Ra):n=14===t?Va(99,du.bind(null,e)):Va(n=function(e){switch(e){case 15:case 14:return 99;case 13:case 12:case 11:case 10:return 98;case 9:case 8:case 7:case 6:case 4:case 5:return 97;case 3:case 2:case 1:return 95;case 0:return 90;default:throw Error(l(358,e))}}(t),su.bind(null,e)),e.callbackPriority=t,e.callbackNode=n}}function su(e){if(eu=-1,nu=tu=0,0!=(48&Ci))throw Error(l(327));var t=e.callbackNode;if(Pu()&&e.callbackNode!==t)return null;var n=At(e,e===Pi?Ti:0);if(0===n)return null;var r=n,a=Ci;Ci|=16;var o=yu();for(Pi===e&&Ti===r||(ji(),mu(e,r));;)try{wu();break}catch(t){vu(e,t)}if(Ga(),Si.current=o,Ci=a,null!==_i?r=0:(Pi=null,Ti=0,r=Oi),0!=(Ii&Li))mu(e,0);else if(0!==r){if(2===r&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(n=zt(e))&&(r=gu(e,n))),1===r)throw t=Ri,mu(e,0),fu(e,n),cu(e,Da()),t;switch(e.finishedWork=e.current.alternate,e.finishedLanes=n,r){case 0:case 1:throw Error(l(345));case 2:Su(e);break;case 3:if(fu(e,n),(62914560&n)===n&&10<(r=Di+500-Da())){if(0!==At(e,0))break;if(((a=e.suspendedLanes)&n)!==n){ou(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=jr(Su.bind(null,e),r);break}Su(e);break;case 4:if(fu(e,n),(4186112&n)===n)break;for(r=e.eventTimes,a=-1;0<n;){var i=31-Vt(n);o=1<<i,(i=r[i])>a&&(a=i),n&=~o}if(n=a,10<(n=(120>(n=Da()-n)?120:480>n?480:1080>n?1080:1920>n?1920:3e3>n?3e3:4320>n?4320:1960*Ei(n/1960))-n)){e.timeoutHandle=jr(Su.bind(null,e),n);break}Su(e);break;case 5:Su(e);break;default:throw Error(l(329))}}return cu(e,Da()),e.callbackNode===t?su.bind(null,e):null}function fu(e,t){for(t&=~Ai,t&=~Li,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-Vt(t),r=1<<n;e[n]=-1,t&=~r}}function du(e){if(0!=(48&Ci))throw Error(l(327));if(Pu(),e===Pi&&0!=(e.expiredLanes&Ti)){var t=Ti,n=gu(e,t);0!=(Ii&Li)&&(n=gu(e,t=At(e,t)))}else n=gu(e,t=At(e,0));if(0!==e.tag&&2===n&&(Ci|=64,e.hydrate&&(e.hydrate=!1,Vr(e.containerInfo)),0!==(t=zt(e))&&(n=gu(e,t))),1===n)throw n=Ri,mu(e,0),fu(e,t),cu(e,Da()),n;return e.finishedWork=e.current.alternate,e.finishedLanes=t,Su(e),cu(e,Da()),null}function pu(e,t){la(Mi,Ni),Ni|=t,Ii|=t}function hu(){Ni=Mi.current,oa(Mi)}function mu(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,Br(n)),null!==_i)for(n=_i.return;null!==n;){var r=n;switch(r.tag){case 1:null!=(r=r.type.childContextTypes)&&pa();break;case 3:Mo(),oa(ca),oa(ua),Ho();break;case 5:Ro(r);break;case 4:Mo();break;case 13:case 19:oa(Io);break;case 10:Za(r);break;case 23:case 24:hu()}n=n.return}Pi=e,_i=zu(e.current,null),Ti=Ni=Ii=t,Oi=0,Ri=null,Ai=Li=Fi=0}function vu(e,t){for(;;){var n=_i;try{if(Ga(),Ko.current=_l,Zo){for(var r=Yo.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}Zo=!1}if(qo=0,Go=Xo=Yo=null,Jo=!1,xi.current=null,null===n||null===n.return){Oi=1,Ri=t,_i=null;break}e:{var o=e,l=n.return,i=n,u=t;if(t=Ti,i.flags|=2048,i.firstEffect=i.lastEffect=null,null!==u&&"object"==typeof u&&"function"==typeof u.then){var c=u;if(0==(2&i.mode)){var s=i.alternate;s?(i.updateQueue=s.updateQueue,i.memoizedState=s.memoizedState,i.lanes=s.lanes):(i.updateQueue=null,i.memoizedState=null)}var f=0!=(1&Io.current),d=l;do{var p;if(p=13===d.tag){var h=d.memoizedState;if(null!==h)p=null!==h.dehydrated;else{var m=d.memoizedProps;p=void 0!==m.fallback&&(!0!==m.unstable_avoidThisFallback||!f)}}if(p){var v=d.updateQueue;if(null===v){var y=new Set;y.add(c),d.updateQueue=y}else v.add(c);if(0==(2&d.mode)){if(d.flags|=64,i.flags|=16384,i.flags&=-2981,1===i.tag)if(null===i.alternate)i.tag=17;else{var g=oo(-1,1);g.tag=2,lo(i,g)}i.lanes|=1;break e}u=void 0,i=t;var b=o.pingCache;if(null===b?(b=o.pingCache=new ai,u=new Set,b.set(c,u)):void 0===(u=b.get(c))&&(u=new Set,b.set(c,u)),!u.has(i)){u.add(i);var w=Ru.bind(null,o,c,i);c.then(w,w)}d.flags|=4096,d.lanes=t;break e}d=d.return}while(null!==d);u=Error((Q(i.type)||"A React component")+" suspended while rendering, but no fallback UI was specified.\n\nAdd a <Suspense fallback=...> component higher in the tree to provide a loading indicator or placeholder to display.")}5!==Oi&&(Oi=2),u=ni(u,i),d=l;do{switch(d.tag){case 3:o=u,d.flags|=4096,t&=-t,d.lanes|=t,io(d,oi(0,o,t));break e;case 1:o=u;var k=d.type,E=d.stateNode;if(0==(64&d.flags)&&("function"==typeof k.getDerivedStateFromError||null!==E&&"function"==typeof E.componentDidCatch&&(null===Hi||!Hi.has(E)))){d.flags|=4096,t&=-t,d.lanes|=t,io(d,li(d,o,t));break e}}d=d.return}while(null!==d)}Eu(n)}catch(e){t=e,_i===n&&null!==n&&(_i=n=n.return);continue}break}}function yu(){var e=Si.current;return Si.current=_l,null===e?_l:e}function gu(e,t){var n=Ci;Ci|=16;var r=yu();for(Pi===e&&Ti===t||mu(e,t);;)try{bu();break}catch(t){vu(e,t)}if(Ga(),Ci=n,Si.current=r,null!==_i)throw Error(l(261));return Pi=null,Ti=0,Oi}function bu(){for(;null!==_i;)ku(_i)}function wu(){for(;null!==_i&&!Sa();)ku(_i)}function ku(e){var t=Bi(e.alternate,e,Ni);e.memoizedProps=e.pendingProps,null===t?Eu(e):_i=t,xi.current=null}function Eu(e){var t=e;do{var n=t.alternate;if(e=t.return,0==(2048&t.flags)){if(null!==(n=ei(n,t,Ni)))return void(_i=n);if(24!==(n=t).tag&&23!==n.tag||null===n.memoizedState||0!=(1073741824&Ni)||0==(4&n.mode)){for(var r=0,a=n.child;null!==a;)r|=a.lanes|a.childLanes,a=a.sibling;n.childLanes=r}null!==e&&0==(2048&e.flags)&&(null===e.firstEffect&&(e.firstEffect=t.firstEffect),null!==t.lastEffect&&(null!==e.lastEffect&&(e.lastEffect.nextEffect=t.firstEffect),e.lastEffect=t.lastEffect),1<t.flags&&(null!==e.lastEffect?e.lastEffect.nextEffect=t:e.firstEffect=t,e.lastEffect=t))}else{if(null!==(n=ti(t)))return n.flags&=2047,void(_i=n);null!==e&&(e.firstEffect=e.lastEffect=null,e.flags|=2048)}if(null!==(t=t.sibling))return void(_i=t);_i=t=e}while(null!==t);0===Oi&&(Oi=5)}function Su(e){var t=Ua();return Ba(99,xu.bind(null,e,t)),null}function xu(e,t){do{Pu()}while(null!==Qi);if(0!=(48&Ci))throw Error(l(327));var n=e.finishedWork;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null;var r=n.lanes|n.childLanes,a=r,o=e.pendingLanes&~a;e.pendingLanes=a,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=a,e.mutableReadLanes&=a,e.entangledLanes&=a,a=e.entanglements;for(var i=e.eventTimes,u=e.expirationTimes;0<o;){var c=31-Vt(o),s=1<<c;a[c]=0,i[c]=-1,u[c]=-1,o&=~s}if(null!==Gi&&0==(24&r)&&Gi.has(e)&&Gi.delete(e),e===Pi&&(_i=Pi=null,Ti=0),1<n.flags?null!==n.lastEffect?(n.lastEffect.nextEffect=n,r=n.firstEffect):r=n:r=n.firstEffect,null!==r){if(a=Ci,Ci|=32,xi.current=null,Ar=Qt,dr(i=fr())){if("selectionStart"in i)u={start:i.selectionStart,end:i.selectionEnd};else e:if(u=(u=i.ownerDocument)&&u.defaultView||window,(s=u.getSelection&&u.getSelection())&&0!==s.rangeCount){u=s.anchorNode,o=s.anchorOffset,c=s.focusNode,s=s.focusOffset;try{u.nodeType,c.nodeType}catch(e){u=null;break e}var f=0,d=-1,p=-1,h=0,m=0,v=i,y=null;t:for(;;){for(var g;v!==u||0!==o&&3!==v.nodeType||(d=f+o),v!==c||0!==s&&3!==v.nodeType||(p=f+s),3===v.nodeType&&(f+=v.nodeValue.length),null!==(g=v.firstChild);)y=v,v=g;for(;;){if(v===i)break t;if(y===u&&++h===o&&(d=f),y===c&&++m===s&&(p=f),null!==(g=v.nextSibling))break;y=(v=y).parentNode}v=g}u=-1===d||-1===p?null:{start:d,end:p}}else u=null;u=u||{start:0,end:0}}else u=null;zr={focusedElem:i,selectionRange:u},Qt=!1,ru=null,au=!1,Vi=r;do{try{Cu()}catch(e){if(null===Vi)throw Error(l(330));Ou(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);ru=null,Vi=r;do{try{for(i=e;null!==Vi;){var b=Vi.flags;if(16&b&&ye(Vi.stateNode,""),128&b){var w=Vi.alternate;if(null!==w){var k=w.ref;null!==k&&("function"==typeof k?k(null):k.current=null)}}switch(1038&b){case 2:mi(Vi),Vi.flags&=-3;break;case 6:mi(Vi),Vi.flags&=-3,bi(Vi.alternate,Vi);break;case 1024:Vi.flags&=-1025;break;case 1028:Vi.flags&=-1025,bi(Vi.alternate,Vi);break;case 4:bi(Vi.alternate,Vi);break;case 8:gi(i,u=Vi);var E=u.alternate;pi(u),null!==E&&pi(E)}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(l(330));Ou(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);if(k=zr,w=fr(),b=k.focusedElem,i=k.selectionRange,w!==b&&b&&b.ownerDocument&&sr(b.ownerDocument.documentElement,b)){null!==i&&dr(b)&&(w=i.start,void 0===(k=i.end)&&(k=w),"selectionStart"in b?(b.selectionStart=w,b.selectionEnd=Math.min(k,b.value.length)):(k=(w=b.ownerDocument||document)&&w.defaultView||window).getSelection&&(k=k.getSelection(),u=b.textContent.length,E=Math.min(i.start,u),i=void 0===i.end?E:Math.min(i.end,u),!k.extend&&E>i&&(u=i,i=E,E=u),u=cr(b,E),o=cr(b,i),u&&o&&(1!==k.rangeCount||k.anchorNode!==u.node||k.anchorOffset!==u.offset||k.focusNode!==o.node||k.focusOffset!==o.offset)&&((w=w.createRange()).setStart(u.node,u.offset),k.removeAllRanges(),E>i?(k.addRange(w),k.extend(o.node,o.offset)):(w.setEnd(o.node,o.offset),k.addRange(w))))),w=[];for(k=b;k=k.parentNode;)1===k.nodeType&&w.push({element:k,left:k.scrollLeft,top:k.scrollTop});for("function"==typeof b.focus&&b.focus(),b=0;b<w.length;b++)(k=w[b]).element.scrollLeft=k.left,k.element.scrollTop=k.top}Qt=!!Ar,zr=Ar=null,e.current=n,Vi=r;do{try{for(b=e;null!==Vi;){var S=Vi.flags;if(36&S&&si(b,Vi.alternate,Vi),128&S){w=void 0;var x=Vi.ref;if(null!==x){var C=Vi.stateNode;switch(Vi.tag){case 5:w=C;break;default:w=C}"function"==typeof x?x(w):x.current=w}}Vi=Vi.nextEffect}}catch(e){if(null===Vi)throw Error(l(330));Ou(Vi,e),Vi=Vi.nextEffect}}while(null!==Vi);Vi=null,Ia(),Ci=a}else e.current=n;if(Ki)Ki=!1,Qi=e,qi=t;else for(Vi=r;null!==Vi;)t=Vi.nextEffect,Vi.nextEffect=null,8&Vi.flags&&((S=Vi).sibling=null,S.stateNode=null),Vi=t;if(0===(r=e.pendingLanes)&&(Hi=null),1===r?e===Ji?Zi++:(Zi=0,Ji=e):Zi=0,n=n.stateNode,ba&&"function"==typeof ba.onCommitFiberRoot)try{ba.onCommitFiberRoot(ga,n,void 0,64==(64&n.current.flags))}catch(e){}if(cu(e,Da()),Wi)throw Wi=!1,e=$i,$i=null,e;return 0!=(8&Ci)||Wa(),null}function Cu(){for(;null!==Vi;){var e=Vi.alternate;au||null===ru||(0!=(8&Vi.flags)?Ze(Vi,ru)&&(au=!0):13===Vi.tag&&ki(e,Vi)&&Ze(Vi,ru)&&(au=!0));var t=Vi.flags;0!=(256&t)&&ci(e,Vi),0==(512&t)||Ki||(Ki=!0,Va(97,(function(){return Pu(),null}))),Vi=Vi.nextEffect}}function Pu(){if(90!==qi){var e=97<qi?97:qi;return qi=90,Ba(e,Nu)}return!1}function _u(e,t){Yi.push(t,e),Ki||(Ki=!0,Va(97,(function(){return Pu(),null})))}function Tu(e,t){Xi.push(t,e),Ki||(Ki=!0,Va(97,(function(){return Pu(),null})))}function Nu(){if(null===Qi)return!1;var e=Qi;if(Qi=null,0!=(48&Ci))throw Error(l(331));var t=Ci;Ci|=32;var n=Xi;Xi=[];for(var r=0;r<n.length;r+=2){var a=n[r],o=n[r+1],i=a.destroy;if(a.destroy=void 0,"function"==typeof i)try{i()}catch(e){if(null===o)throw Error(l(330));Ou(o,e)}}for(n=Yi,Yi=[],r=0;r<n.length;r+=2){a=n[r],o=n[r+1];try{var u=a.create;a.destroy=u()}catch(e){if(null===o)throw Error(l(330));Ou(o,e)}}for(u=e.current.firstEffect;null!==u;)e=u.nextEffect,u.nextEffect=null,8&u.flags&&(u.sibling=null,u.stateNode=null),u=e;return Ci=t,Wa(),!0}function Mu(e,t,n){lo(e,t=oi(0,t=ni(n,t),1)),t=ou(),null!==(e=uu(e,1))&&(Bt(e,1,t),cu(e,t))}function Ou(e,t){if(3===e.tag)Mu(e,e,t);else for(var n=e.return;null!==n;){if(3===n.tag){Mu(n,e,t);break}if(1===n.tag){var r=n.stateNode;if("function"==typeof n.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Hi||!Hi.has(r))){var a=li(n,e=ni(t,e),1);if(lo(n,a),a=ou(),null!==(n=uu(n,1)))Bt(n,1,a),cu(n,a);else if("function"==typeof r.componentDidCatch&&(null===Hi||!Hi.has(r)))try{r.componentDidCatch(t,e)}catch(e){}break}}n=n.return}}function Ru(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ou(),e.pingedLanes|=e.suspendedLanes&n,Pi===e&&(Ti&n)===n&&(4===Oi||3===Oi&&(62914560&Ti)===Ti&&500>Da()-Di?mu(e,0):Ai|=n),cu(e,t)}function Iu(e,t){var n=e.stateNode;null!==n&&n.delete(t),0==(t=0)&&(0==(2&(t=e.mode))?t=1:0==(4&t)?t=99===Ua()?1:2:(0===tu&&(tu=Ii),0===(t=Ut(62914560&~tu))&&(t=4194304))),n=ou(),null!==(e=uu(e,t))&&(Bt(e,t,n),cu(e,n))}function Fu(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.flags=0,this.lastEffect=this.firstEffect=this.nextEffect=null,this.childLanes=this.lanes=0,this.alternate=null}function Lu(e,t,n,r){return new Fu(e,t,n,r)}function Au(e){return!(!(e=e.prototype)||!e.isReactComponent)}function zu(e,t){var n=e.alternate;return null===n?((n=Lu(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.nextEffect=null,n.firstEffect=null,n.lastEffect=null),n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Du(e,t,n,r,a,o){var i=2;if(r=e,"function"==typeof e)Au(e)&&(i=1);else if("string"==typeof e)i=5;else e:switch(e){case x:return Uu(n.children,a,o,t);case A:i=8,a|=16;break;case C:i=8,a|=1;break;case P:return(e=Lu(12,n,t,8|a)).elementType=P,e.type=P,e.lanes=o,e;case M:return(e=Lu(13,n,t,a)).type=M,e.elementType=M,e.lanes=o,e;case O:return(e=Lu(19,n,t,a)).elementType=O,e.lanes=o,e;case z:return ju(n,a,o,t);case D:return(e=Lu(24,n,t,a)).elementType=D,e.lanes=o,e;default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case _:i=10;break e;case T:i=9;break e;case N:i=11;break e;case R:i=14;break e;case I:i=16,r=null;break e;case F:i=22;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lu(i,n,t,a)).elementType=e,t.type=r,t.lanes=o,t}function Uu(e,t,n,r){return(e=Lu(7,e,r,t)).lanes=n,e}function ju(e,t,n,r){return(e=Lu(23,e,r,t)).elementType=z,e.lanes=n,e}function Bu(e,t,n){return(e=Lu(6,e,null,t)).lanes=n,e}function Vu(e,t,n){return(t=Lu(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function Wu(e,t,n){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.pendingContext=this.context=null,this.hydrate=n,this.callbackNode=null,this.callbackPriority=0,this.eventTimes=jt(0),this.expirationTimes=jt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=jt(0),this.mutableSourceEagerHydrationData=null}function $u(e,t,n,r){var a=t.current,o=ou(),i=lu(a);e:if(n){t:{if(Ye(n=n._reactInternals)!==n||1!==n.tag)throw Error(l(170));var u=n;do{switch(u.tag){case 3:u=u.stateNode.context;break t;case 1:if(da(u.type)){u=u.stateNode.__reactInternalMemoizedMergedChildContext;break t}}u=u.return}while(null!==u);throw Error(l(171))}if(1===n.tag){var c=n.type;if(da(c)){n=ma(n,c,u);break e}}n=u}else n=ia;return null===t.context?t.context=n:t.pendingContext=n,(t=oo(o,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),lo(a,t),iu(a,i,o),i}function Hu(e){if(!(e=e.current).child)return null;switch(e.child.tag){case 5:default:return e.child.stateNode}}function Ku(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Qu(e,t){Ku(e,t),(e=e.alternate)&&Ku(e,t)}function qu(e,t,n){var r=null!=n&&null!=n.hydrationOptions&&n.hydrationOptions.mutableSources||null;if(n=new Wu(e,t,null!=n&&!0===n.hydrate),t=Lu(3,null,null,2===t?7:1===t?3:0),n.current=t,t.stateNode=n,ro(t),e[Yr]=n.current,_r(8===e.nodeType?e.parentNode:e),r)for(e=0;e<r.length;e++){var a=(t=r[e])._getVersion;a=a(t._source),null==n.mutableSourceEagerHydrationData?n.mutableSourceEagerHydrationData=[t,a]:n.mutableSourceEagerHydrationData.push(t,a)}this._internalRoot=n}function Yu(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Xu(e,t,n,r,a){var o=n._reactRootContainer;if(o){var l=o._internalRoot;if("function"==typeof a){var i=a;a=function(){var e=Hu(l);i.call(e)}}$u(t,l,e,a)}else{if(o=n._reactRootContainer=function(e,t){if(t||(t=!(!(t=e?9===e.nodeType?e.documentElement:e.firstChild:null)||1!==t.nodeType||!t.hasAttribute("data-reactroot"))),!t)for(var n;n=e.lastChild;)e.removeChild(n);return new qu(e,0,t?{hydrate:!0}:void 0)}(n,r),l=o._internalRoot,"function"==typeof a){var u=a;a=function(){var e=Hu(l);u.call(e)}}!function(e,t){var n=Ci;Ci&=-2,Ci|=8;try{e(t)}finally{0===(Ci=n)&&(ji(),Wa())}}((function(){$u(t,l,e,a)}))}return Hu(l)}Bi=function(e,t,n){var r=t.lanes;if(null!==e)if(e.memoizedProps!==t.pendingProps||ca.current)Rl=!0;else{if(0==(n&r)){switch(Rl=!1,t.tag){case 3:Vl(t),Wo();break;case 5:Oo(t);break;case 1:da(t.type)&&va(t);break;case 4:No(t,t.stateNode.containerInfo);break;case 10:r=t.memoizedProps.value;var a=t.type._context;la(Qa,a._currentValue),a._currentValue=r;break;case 13:if(null!==t.memoizedState)return 0!=(n&t.child.childLanes)?Ql(e,t,n):(la(Io,1&Io.current),null!==(t=Zl(e,t,n))?t.sibling:null);la(Io,1&Io.current);break;case 19:if(r=0!=(n&t.childLanes),0!=(64&e.flags)){if(r)return Gl(e,t,n);t.flags|=64}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),la(Io,Io.current),r)break;return null;case 23:case 24:return t.lanes=0,zl(e,t,n)}return Zl(e,t,n)}Rl=0!=(16384&e.flags)}else Rl=!1;switch(t.lanes=0,t.tag){case 2:if(r=t.type,null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=fa(t,ua.current),eo(t,n),a=nl(null,t,r,e,a,n),t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof){if(t.tag=1,t.memoizedState=null,t.updateQueue=null,da(r)){var o=!0;va(t)}else o=!1;t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,ro(t);var i=r.getDerivedStateFromProps;"function"==typeof i&&fo(t,r,i,e),a.updater=po,t.stateNode=a,a._reactInternals=t,yo(t,r,e,n),t=Bl(null,t,r,!0,o,n)}else t.tag=0,Il(null,t,a,n),t=t.child;return t;case 16:a=t.elementType;e:{switch(null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),e=t.pendingProps,a=(o=a._init)(a._payload),t.type=a,o=t.tag=function(e){if("function"==typeof e)return Au(e)?1:0;if(null!=e){if((e=e.$$typeof)===N)return 11;if(e===R)return 14}return 2}(a),e=Ka(a,e),o){case 0:t=Ul(null,t,a,e,n);break e;case 1:t=jl(null,t,a,e,n);break e;case 11:t=Fl(null,t,a,e,n);break e;case 14:t=Ll(null,t,a,Ka(a.type,e),r,n);break e}throw Error(l(306,a,""))}return t;case 0:return r=t.type,a=t.pendingProps,Ul(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 1:return r=t.type,a=t.pendingProps,jl(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 3:if(Vl(t),r=t.updateQueue,null===e||null===r)throw Error(l(282));if(r=t.pendingProps,a=null!==(a=t.memoizedState)?a.element:null,ao(e,t),uo(t,r,null,n),(r=t.memoizedState.element)===a)Wo(),t=Zl(e,t,n);else{if((o=(a=t.stateNode).hydrate)&&(Ao=Wr(t.stateNode.containerInfo.firstChild),Lo=t,o=zo=!0),o){if(null!=(e=a.mutableSourceEagerHydrationData))for(a=0;a<e.length;a+=2)(o=e[a])._workInProgressVersionPrimary=e[a+1],$o.push(o);for(n=So(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|1024,n=n.sibling}else Il(e,t,r,n),Wo();t=t.child}return t;case 5:return Oo(t),null===e&&jo(t),r=t.type,a=t.pendingProps,o=null!==e?e.memoizedProps:null,i=a.children,Ur(r,a)?i=null:null!==o&&Ur(r,o)&&(t.flags|=16),Dl(e,t),Il(e,t,i,n),t.child;case 6:return null===e&&jo(t),null;case 13:return Ql(e,t,n);case 4:return No(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=Eo(t,null,r,n):Il(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Fl(e,t,r,a=t.elementType===r?a:Ka(r,a),n);case 7:return Il(e,t,t.pendingProps,n),t.child;case 8:case 12:return Il(e,t,t.pendingProps.children,n),t.child;case 10:e:{r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value;var u=t.type._context;if(la(Qa,u._currentValue),u._currentValue=o,null!==i)if(u=i.value,0==(o=or(u,o)?0:0|("function"==typeof r._calculateChangedBits?r._calculateChangedBits(u,o):1073741823))){if(i.children===a.children&&!ca.current){t=Zl(e,t,n);break e}}else for(null!==(u=t.child)&&(u.return=t);null!==u;){var c=u.dependencies;if(null!==c){i=u.child;for(var s=c.firstContext;null!==s;){if(s.context===r&&0!=(s.observedBits&o)){1===u.tag&&((s=oo(-1,n&-n)).tag=2,lo(u,s)),u.lanes|=n,null!==(s=u.alternate)&&(s.lanes|=n),Ja(u.return,n),c.lanes|=n;break}s=s.next}}else i=10===u.tag&&u.type===t.type?null:u.child;if(null!==i)i.return=u;else for(i=u;null!==i;){if(i===t){i=null;break}if(null!==(u=i.sibling)){u.return=i.return,i=u;break}i=i.return}u=i}Il(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=(o=t.pendingProps).children,eo(t,n),r=r(a=to(a,o.unstable_observedBits)),t.flags|=1,Il(e,t,r,n),t.child;case 14:return o=Ka(a=t.type,t.pendingProps),Ll(e,t,a,o=Ka(a.type,o),r,n);case 15:return Al(e,t,t.type,t.pendingProps,r,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:Ka(r,a),null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2),t.tag=1,da(r)?(e=!0,va(t)):e=!1,eo(t,n),mo(t,r,a),yo(t,r,a,n),Bl(null,t,r,!0,e,n);case 19:return Gl(e,t,n);case 23:case 24:return zl(e,t,n)}throw Error(l(156,t.tag))},qu.prototype.render=function(e){$u(e,this._internalRoot,null,null)},qu.prototype.unmount=function(){var e=this._internalRoot,t=e.containerInfo;$u(null,e,null,(function(){t[Yr]=null}))},Je=function(e){13===e.tag&&(iu(e,4,ou()),Qu(e,4))},et=function(e){13===e.tag&&(iu(e,67108864,ou()),Qu(e,67108864))},tt=function(e){if(13===e.tag){var t=ou(),n=lu(e);iu(e,n,t),Qu(e,n)}},nt=function(e,t){return t()},Pe=function(e,t,n){switch(t){case"input":if(ne(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=ea(r);if(!a)throw Error(l(90));G(r),ne(r,a)}}}break;case"textarea":ce(e,n);break;case"select":null!=(t=n.value)&&le(e,!!n.multiple,t,!1)}},Re=function(e,t){var n=Ci;Ci|=1;try{return e(t)}finally{0===(Ci=n)&&(ji(),Wa())}},Ie=function(e,t,n,r,a){var o=Ci;Ci|=4;try{return Ba(98,e.bind(null,t,n,r,a))}finally{0===(Ci=o)&&(ji(),Wa())}},Fe=function(){0==(49&Ci)&&(function(){if(null!==Gi){var e=Gi;Gi=null,e.forEach((function(e){e.expiredLanes|=24&e.pendingLanes,cu(e,Da())}))}Wa()}(),Pu())},Le=function(e,t){var n=Ci;Ci|=2;try{return e(t)}finally{0===(Ci=n)&&(ji(),Wa())}};var Gu={findFiberByHostInstance:Gr,bundleType:0,version:"17.0.1",rendererPackageName:"react-dom"},Zu={bundleType:Gu.bundleType,version:Gu.version,rendererPackageName:Gu.rendererPackageName,rendererConfig:Gu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:k.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=function(e){if(!(e=function(e){var t=e.alternate;if(!t){if(null===(t=Ye(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var o=a.alternate;if(null===o){if(null!==(r=a.return)){n=r;continue}break}if(a.child===o.child){for(o=a.child;o;){if(o===n)return Ge(a),e;if(o===r)return Ge(a),t;o=o.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=o;else{for(var i=!1,u=a.child;u;){if(u===n){i=!0,n=a,r=o;break}if(u===r){i=!0,r=a,n=o;break}u=u.sibling}if(!i){for(u=o.child;u;){if(u===n){i=!0,n=o,r=a;break}if(u===r){i=!0,r=o,n=a;break}u=u.sibling}if(!i)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e)))return null;for(var t=e;;){if(5===t.tag||6===t.tag)return t;if(t.child)t.child.return=t,t=t.child;else{if(t===e)break;for(;!t.sibling;){if(!t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}}return null}(e))?null:e.stateNode},findFiberByHostInstance:Gu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var Ju=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Ju.isDisabled&&Ju.supportsFiber)try{ga=Ju.inject(Zu),ba=Ju}catch(me){}}t.render=function(e,t,n){if(!Yu(t))throw Error(l(200));return Xu(null,e,t,!1,n)}},935:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(448)},921:(e,t)=>{"use strict";var n="function"==typeof Symbol&&Symbol.for,r=n?Symbol.for("react.element"):60103,a=n?Symbol.for("react.portal"):60106,o=n?Symbol.for("react.fragment"):60107,l=n?Symbol.for("react.strict_mode"):60108,i=n?Symbol.for("react.profiler"):60114,u=n?Symbol.for("react.provider"):60109,c=n?Symbol.for("react.context"):60110,s=n?Symbol.for("react.async_mode"):60111,f=n?Symbol.for("react.concurrent_mode"):60111,d=n?Symbol.for("react.forward_ref"):60112,p=n?Symbol.for("react.suspense"):60113,h=n?Symbol.for("react.suspense_list"):60120,m=n?Symbol.for("react.memo"):60115,v=n?Symbol.for("react.lazy"):60116,y=n?Symbol.for("react.block"):60121,g=n?Symbol.for("react.fundamental"):60117,b=n?Symbol.for("react.responder"):60118,w=n?Symbol.for("react.scope"):60119;function k(e){if("object"==typeof e&&null!==e){var t=e.$$typeof;switch(t){case r:switch(e=e.type){case s:case f:case o:case i:case l:case p:return e;default:switch(e=e&&e.$$typeof){case c:case d:case v:case m:case u:return e;default:return t}}case a:return t}}}function E(e){return k(e)===f}t.AsyncMode=s,t.ConcurrentMode=f,t.ContextConsumer=c,t.ContextProvider=u,t.Element=r,t.ForwardRef=d,t.Fragment=o,t.Lazy=v,t.Memo=m,t.Portal=a,t.Profiler=i,t.StrictMode=l,t.Suspense=p,t.isAsyncMode=function(e){return E(e)||k(e)===s},t.isConcurrentMode=E,t.isContextConsumer=function(e){return k(e)===c},t.isContextProvider=function(e){return k(e)===u},t.isElement=function(e){return"object"==typeof e&&null!==e&&e.$$typeof===r},t.isForwardRef=function(e){return k(e)===d},t.isFragment=function(e){return k(e)===o},t.isLazy=function(e){return k(e)===v},t.isMemo=function(e){return k(e)===m},t.isPortal=function(e){return k(e)===a},t.isProfiler=function(e){return k(e)===i},t.isStrictMode=function(e){return k(e)===l},t.isSuspense=function(e){return k(e)===p},t.isValidElementType=function(e){return"string"==typeof e||"function"==typeof e||e===o||e===f||e===i||e===l||e===p||e===h||"object"==typeof e&&null!==e&&(e.$$typeof===v||e.$$typeof===m||e.$$typeof===u||e.$$typeof===c||e.$$typeof===d||e.$$typeof===g||e.$$typeof===b||e.$$typeof===w||e.$$typeof===y)},t.typeOf=k},864:(e,t,n)=>{"use strict";e.exports=n(921)},408:(e,t,n)=>{"use strict";var r=n(418),a=60103,o=60106;t.Fragment=60107,t.StrictMode=60108,t.Profiler=60114;var l=60109,i=60110,u=60112;t.Suspense=60113;var c=60115,s=60116;if("function"==typeof Symbol&&Symbol.for){var f=Symbol.for;a=f("react.element"),o=f("react.portal"),t.Fragment=f("react.fragment"),t.StrictMode=f("react.strict_mode"),t.Profiler=f("react.profiler"),l=f("react.provider"),i=f("react.context"),u=f("react.forward_ref"),t.Suspense=f("react.suspense"),c=f("react.memo"),s=f("react.lazy")}var d="function"==typeof Symbol&&Symbol.iterator;function p(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var h={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},m={};function v(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}function y(){}function g(e,t,n){this.props=e,this.context=t,this.refs=m,this.updater=n||h}v.prototype.isReactComponent={},v.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error(p(85));this.updater.enqueueSetState(this,e,t,"setState")},v.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=v.prototype;var b=g.prototype=new y;b.constructor=g,r(b,v.prototype),b.isPureReactComponent=!0;var w={current:null},k=Object.prototype.hasOwnProperty,E={key:!0,ref:!0,__self:!0,__source:!0};function S(e,t,n){var r,o={},l=null,i=null;if(null!=t)for(r in void 0!==t.ref&&(i=t.ref),void 0!==t.key&&(l=""+t.key),t)k.call(t,r)&&!E.hasOwnProperty(r)&&(o[r]=t[r]);var u=arguments.length-2;if(1===u)o.children=n;else if(1<u){for(var c=Array(u),s=0;s<u;s++)c[s]=arguments[s+2];o.children=c}if(e&&e.defaultProps)for(r in u=e.defaultProps)void 0===o[r]&&(o[r]=u[r]);return{$$typeof:a,type:e,key:l,ref:i,props:o,_owner:w.current}}function x(e){return"object"==typeof e&&null!==e&&e.$$typeof===a}var C=/\/+/g;function P(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function _(e,t,n,r,l){var i=typeof e;"undefined"!==i&&"boolean"!==i||(e=null);var u=!1;if(null===e)u=!0;else switch(i){case"string":case"number":u=!0;break;case"object":switch(e.$$typeof){case a:case o:u=!0}}if(u)return l=l(u=e),e=""===r?"."+P(u,0):r,Array.isArray(l)?(n="",null!=e&&(n=e.replace(C,"$&/")+"/"),_(l,t,n,"",(function(e){return e}))):null!=l&&(x(l)&&(l=function(e,t){return{$$typeof:a,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(l,n+(!l.key||u&&u.key===l.key?"":(""+l.key).replace(C,"$&/")+"/")+e)),t.push(l)),1;if(u=0,r=""===r?".":r+":",Array.isArray(e))for(var c=0;c<e.length;c++){var s=r+P(i=e[c],c);u+=_(i,t,n,s,l)}else if("function"==typeof(s=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=d&&e[d]||e["@@iterator"])?e:null}(e)))for(e=s.call(e),c=0;!(i=e.next()).done;)u+=_(i=i.value,t,n,s=r+P(i,c++),l);else if("object"===i)throw t=""+e,Error(p(31,"[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t));return u}function T(e,t,n){if(null==e)return e;var r=[],a=0;return _(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function N(e){if(-1===e._status){var t=e._result;t=t(),e._status=0,e._result=t,t.then((function(t){0===e._status&&(t=t.default,e._status=1,e._result=t)}),(function(t){0===e._status&&(e._status=2,e._result=t)}))}if(1===e._status)return e._result;throw e._result}var M={current:null};function O(){var e=M.current;if(null===e)throw Error(p(321));return e}var R={ReactCurrentDispatcher:M,ReactCurrentBatchConfig:{transition:0},ReactCurrentOwner:w,IsSomeRendererActing:{current:!1},assign:r};t.Children={map:T,forEach:function(e,t,n){T(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return T(e,(function(){t++})),t},toArray:function(e){return T(e,(function(e){return e}))||[]},only:function(e){if(!x(e))throw Error(p(143));return e}},t.Component=v,t.PureComponent=g,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=R,t.cloneElement=function(e,t,n){if(null==e)throw Error(p(267,e));var o=r({},e.props),l=e.key,i=e.ref,u=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,u=w.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var c=e.type.defaultProps;for(s in t)k.call(t,s)&&!E.hasOwnProperty(s)&&(o[s]=void 0===t[s]&&void 0!==c?c[s]:t[s])}var s=arguments.length-2;if(1===s)o.children=n;else if(1<s){c=Array(s);for(var f=0;f<s;f++)c[f]=arguments[f+2];o.children=c}return{$$typeof:a,type:e.type,key:l,ref:i,props:o,_owner:u}},t.createContext=function(e,t){return void 0===t&&(t=null),(e={$$typeof:i,_calculateChangedBits:t,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null}).Provider={$$typeof:l,_context:e},e.Consumer=e},t.createElement=S,t.createFactory=function(e){var t=S.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:u,render:e}},t.isValidElement=x,t.lazy=function(e){return{$$typeof:s,_payload:{_status:-1,_result:e},_init:N}},t.memo=function(e,t){return{$$typeof:c,type:e,compare:void 0===t?null:t}},t.useCallback=function(e,t){return O().useCallback(e,t)},t.useContext=function(e,t){return O().useContext(e,t)},t.useDebugValue=function(){},t.useEffect=function(e,t){return O().useEffect(e,t)},t.useImperativeHandle=function(e,t,n){return O().useImperativeHandle(e,t,n)},t.useLayoutEffect=function(e,t){return O().useLayoutEffect(e,t)},t.useMemo=function(e,t){return O().useMemo(e,t)},t.useReducer=function(e,t,n){return O().useReducer(e,t,n)},t.useRef=function(e){return O().useRef(e)},t.useState=function(e){return O().useState(e)},t.version="17.0.1"},294:(e,t,n)=>{"use strict";e.exports=n(408)},53:(e,t)=>{"use strict";var n,r,a,o;if("object"==typeof performance&&"function"==typeof performance.now){var l=performance;t.unstable_now=function(){return l.now()}}else{var i=Date,u=i.now();t.unstable_now=function(){return i.now()-u}}if("undefined"==typeof window||"function"!=typeof MessageChannel){var c=null,s=null,f=function(){if(null!==c)try{var e=t.unstable_now();c(!0,e),c=null}catch(e){throw setTimeout(f,0),e}};n=function(e){null!==c?setTimeout(n,0,e):(c=e,setTimeout(f,0))},r=function(e,t){s=setTimeout(e,t)},a=function(){clearTimeout(s)},t.unstable_shouldYield=function(){return!1},o=t.unstable_forceFrameRate=function(){}}else{var d=window.setTimeout,p=window.clearTimeout;if("undefined"!=typeof console){var h=window.cancelAnimationFrame;"function"!=typeof window.requestAnimationFrame&&console.error("This browser doesn't support requestAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills"),"function"!=typeof h&&console.error("This browser doesn't support cancelAnimationFrame. Make sure that you load a polyfill in older browsers. https://reactjs.org/link/react-polyfills")}var m=!1,v=null,y=-1,g=5,b=0;t.unstable_shouldYield=function(){return t.unstable_now()>=b},o=function(){},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):g=0<e?Math.floor(1e3/e):5};var w=new MessageChannel,k=w.port2;w.port1.onmessage=function(){if(null!==v){var e=t.unstable_now();b=e+g;try{v(!0,e)?k.postMessage(null):(m=!1,v=null)}catch(e){throw k.postMessage(null),e}}else m=!1},n=function(e){v=e,m||(m=!0,k.postMessage(null))},r=function(e,n){y=d((function(){e(t.unstable_now())}),n)},a=function(){p(y),y=-1}}function E(e,t){var n=e.length;e.push(t);e:for(;;){var r=n-1>>>1,a=e[r];if(!(void 0!==a&&0<C(a,t)))break e;e[r]=t,e[n]=a,n=r}}function S(e){return void 0===(e=e[0])?null:e}function x(e){var t=e[0];if(void 0!==t){var n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length;r<a;){var o=2*(r+1)-1,l=e[o],i=o+1,u=e[i];if(void 0!==l&&0>C(l,n))void 0!==u&&0>C(u,l)?(e[r]=u,e[i]=n,r=i):(e[r]=l,e[o]=n,r=o);else{if(!(void 0!==u&&0>C(u,n)))break e;e[r]=u,e[i]=n,r=i}}}return t}return null}function C(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}var P=[],_=[],T=1,N=null,M=3,O=!1,R=!1,I=!1;function F(e){for(var t=S(_);null!==t;){if(null===t.callback)x(_);else{if(!(t.startTime<=e))break;x(_),t.sortIndex=t.expirationTime,E(P,t)}t=S(_)}}function L(e){if(I=!1,F(e),!R)if(null!==S(P))R=!0,n(A);else{var t=S(_);null!==t&&r(L,t.startTime-e)}}function A(e,n){R=!1,I&&(I=!1,a()),O=!0;var o=M;try{for(F(n),N=S(P);null!==N&&(!(N.expirationTime>n)||e&&!t.unstable_shouldYield());){var l=N.callback;if("function"==typeof l){N.callback=null,M=N.priorityLevel;var i=l(N.expirationTime<=n);n=t.unstable_now(),"function"==typeof i?N.callback=i:N===S(P)&&x(P),F(n)}else x(P);N=S(P)}if(null!==N)var u=!0;else{var c=S(_);null!==c&&r(L,c.startTime-n),u=!1}return u}finally{N=null,M=o,O=!1}}var z=o;t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){R||O||(R=!0,n(A))},t.unstable_getCurrentPriorityLevel=function(){return M},t.unstable_getFirstCallbackNode=function(){return S(P)},t.unstable_next=function(e){switch(M){case 1:case 2:case 3:var t=3;break;default:t=M}var n=M;M=t;try{return e()}finally{M=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=z,t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=M;M=e;try{return t()}finally{M=n}},t.unstable_scheduleCallback=function(e,o,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var u=-1;break;case 2:u=250;break;case 5:u=1073741823;break;case 4:u=1e4;break;default:u=5e3}return e={id:T++,callback:o,priorityLevel:e,startTime:l,expirationTime:u=l+u,sortIndex:-1},l>i?(e.sortIndex=l,E(_,e),null===S(P)&&e===S(_)&&(I?a():I=!0,r(L,l-i))):(e.sortIndex=u,E(P,e),R||O||(R=!0,n(A))),e},t.unstable_wrapCallback=function(e){var t=M;return function(){var n=M;M=t;try{return e.apply(this,arguments)}finally{M=n}}}},840:(e,t,n)=>{"use strict";e.exports=n(53)}},t={};function n(r){if(t[r])return t[r].exports;var a=t[r]={exports:{}};return e[r](a,a.exports,n),a.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),(()=>{"use strict";var e=n(294),t=n(935);function r(e,t){e.prototype=Object.create(t.prototype),e.prototype.constructor=e,e.__proto__=t}var a=n(697),o=n.n(a);function l(){return(l=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}function i(e){return"/"===e.charAt(0)}function u(e,t){for(var n=t,r=n+1,a=e.length;r<a;n+=1,r+=1)e[n]=e[r];e.pop()}const c=function(e,t){if(!e)throw new Error("Invariant failed")};function s(e){return"/"===e.charAt(0)?e:"/"+e}function f(e,t){return function(e,t){return 0===e.toLowerCase().indexOf(t.toLowerCase())&&-1!=="/?#".indexOf(e.charAt(t.length))}(e,t)?e.substr(t.length):e}function d(e){return"/"===e.charAt(e.length-1)?e.slice(0,-1):e}function p(e){var t=e.pathname,n=e.search,r=e.hash,a=t||"/";return n&&"?"!==n&&(a+="?"===n.charAt(0)?n:"?"+n),r&&"#"!==r&&(a+="#"===r.charAt(0)?r:"#"+r),a}function h(e,t,n,r){var a;"string"==typeof e?(a=function(e){var t=e||"/",n="",r="",a=t.indexOf("#");-1!==a&&(r=t.substr(a),t=t.substr(0,a));var o=t.indexOf("?");return-1!==o&&(n=t.substr(o),t=t.substr(0,o)),{pathname:t,search:"?"===n?"":n,hash:"#"===r?"":r}}(e)).state=t:(void 0===(a=l({},e)).pathname&&(a.pathname=""),a.search?"?"!==a.search.charAt(0)&&(a.search="?"+a.search):a.search="",a.hash?"#"!==a.hash.charAt(0)&&(a.hash="#"+a.hash):a.hash="",void 0!==t&&void 0===a.state&&(a.state=t));try{a.pathname=decodeURI(a.pathname)}catch(e){throw e instanceof URIError?new URIError('Pathname "'+a.pathname+'" could not be decoded. This is likely caused by an invalid percent-encoding.'):e}return n&&(a.key=n),r?a.pathname?"/"!==a.pathname.charAt(0)&&(a.pathname=function(e,t){void 0===t&&(t="");var n,r=e&&e.split("/")||[],a=t&&t.split("/")||[],o=e&&i(e),l=t&&i(t),c=o||l;if(e&&i(e)?a=r:r.length&&(a.pop(),a=a.concat(r)),!a.length)return"/";if(a.length){var s=a[a.length-1];n="."===s||".."===s||""===s}else n=!1;for(var f=0,d=a.length;d>=0;d--){var p=a[d];"."===p?u(a,d):".."===p?(u(a,d),f++):f&&(u(a,d),f--)}if(!c)for(;f--;f)a.unshift("..");!c||""===a[0]||a[0]&&i(a[0])||a.unshift("");var h=a.join("/");return n&&"/"!==h.substr(-1)&&(h+="/"),h}(a.pathname,r.pathname)):a.pathname=r.pathname:a.pathname||(a.pathname="/"),a}function m(){var e=null,t=[];return{setPrompt:function(t){return e=t,function(){e===t&&(e=null)}},confirmTransitionTo:function(t,n,r,a){if(null!=e){var o="function"==typeof e?e(t,n):e;"string"==typeof o?"function"==typeof r?r(o,a):a(!0):a(!1!==o)}else a(!0)},appendListener:function(e){var n=!0;function r(){n&&e.apply(void 0,arguments)}return t.push(r),function(){n=!1,t=t.filter((function(e){return e!==r}))}},notifyListeners:function(){for(var e=arguments.length,n=new Array(e),r=0;r<e;r++)n[r]=arguments[r];t.forEach((function(e){return e.apply(void 0,n)}))}}}var v=!("undefined"==typeof window||!window.document||!window.document.createElement);function y(e,t){t(window.confirm(e))}var g="popstate",b="hashchange";function w(){try{return window.history.state||{}}catch(e){return{}}}function k(e){void 0===e&&(e={}),v||c(!1);var t,n=window.history,r=(-1===(t=window.navigator.userAgent).indexOf("Android 2.")&&-1===t.indexOf("Android 4.0")||-1===t.indexOf("Mobile Safari")||-1!==t.indexOf("Chrome")||-1!==t.indexOf("Windows Phone"))&&window.history&&"pushState"in window.history,a=!(-1===window.navigator.userAgent.indexOf("Trident")),o=e,i=o.forceRefresh,u=void 0!==i&&i,k=o.getUserConfirmation,E=void 0===k?y:k,S=o.keyLength,x=void 0===S?6:S,C=e.basename?d(s(e.basename)):"";function P(e){var t=e||{},n=t.key,r=t.state,a=window.location,o=a.pathname+a.search+a.hash;return C&&(o=f(o,C)),h(o,r,n)}function _(){return Math.random().toString(36).substr(2,x)}var T=m();function N(e){l(B,e),B.length=n.length,T.notifyListeners(B.location,B.action)}function M(e){(function(e){return void 0===e.state&&-1===navigator.userAgent.indexOf("CriOS")})(e)||I(P(e.state))}function O(){I(P(w()))}var R=!1;function I(e){R?(R=!1,N()):T.confirmTransitionTo(e,"POP",E,(function(t){t?N({action:"POP",location:e}):function(e){var t=B.location,n=L.indexOf(t.key);-1===n&&(n=0);var r=L.indexOf(e.key);-1===r&&(r=0);var a=n-r;a&&(R=!0,z(a))}(e)}))}var F=P(w()),L=[F.key];function A(e){return C+p(e)}function z(e){n.go(e)}var D=0;function U(e){1===(D+=e)&&1===e?(window.addEventListener(g,M),a&&window.addEventListener(b,O)):0===D&&(window.removeEventListener(g,M),a&&window.removeEventListener(b,O))}var j=!1,B={length:n.length,action:"POP",location:F,createHref:A,push:function(e,t){var a="PUSH",o=h(e,t,_(),B.location);T.confirmTransitionTo(o,a,E,(function(e){if(e){var t=A(o),l=o.key,i=o.state;if(r)if(n.pushState({key:l,state:i},null,t),u)window.location.href=t;else{var c=L.indexOf(B.location.key),s=L.slice(0,c+1);s.push(o.key),L=s,N({action:a,location:o})}else window.location.href=t}}))},replace:function(e,t){var a="REPLACE",o=h(e,t,_(),B.location);T.confirmTransitionTo(o,a,E,(function(e){if(e){var t=A(o),l=o.key,i=o.state;if(r)if(n.replaceState({key:l,state:i},null,t),u)window.location.replace(t);else{var c=L.indexOf(B.location.key);-1!==c&&(L[c]=o.key),N({action:a,location:o})}else window.location.replace(t)}}))},go:z,goBack:function(){z(-1)},goForward:function(){z(1)},block:function(e){void 0===e&&(e=!1);var t=T.setPrompt(e);return j||(U(1),j=!0),function(){return j&&(j=!1,U(-1)),t()}},listen:function(e){var t=T.appendListener(e);return U(1),function(){U(-1),t()}}};return B}var E=1073741823,S="undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:void 0!==n.g?n.g:{};function x(e){var t=[];return{on:function(e){t.push(e)},off:function(e){t=t.filter((function(t){return t!==e}))},get:function(){return e},set:function(n,r){e=n,t.forEach((function(t){return t(e,r)}))}}}const C=e.createContext||function(t,n){var a,l,i,u="__create-react-context-"+((S[i="__global_unique_id__"]=(S[i]||0)+1)+"__"),c=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).emitter=x(t.props.value),t}r(t,e);var a=t.prototype;return a.getChildContext=function(){var e;return(e={})[u]=this.emitter,e},a.componentWillReceiveProps=function(e){if(this.props.value!==e.value){var t,r=this.props.value,a=e.value;((o=r)===(l=a)?0!==o||1/o==1/l:o!=o&&l!=l)?t=0:(t="function"==typeof n?n(r,a):E,0!=(t|=0)&&this.emitter.set(e.value,t))}var o,l},a.render=function(){return this.props.children},t}(e.Component);c.childContextTypes=((a={})[u]=o().object.isRequired,a);var s=function(e){function n(){var t;return(t=e.apply(this,arguments)||this).state={value:t.getValue()},t.onUpdate=function(e,n){0!=((0|t.observedBits)&n)&&t.setState({value:t.getValue()})},t}r(n,e);var a=n.prototype;return a.componentWillReceiveProps=function(e){var t=e.observedBits;this.observedBits=null==t?E:t},a.componentDidMount=function(){this.context[u]&&this.context[u].on(this.onUpdate);var e=this.props.observedBits;this.observedBits=null==e?E:e},a.componentWillUnmount=function(){this.context[u]&&this.context[u].off(this.onUpdate)},a.getValue=function(){return this.context[u]?this.context[u].get():t},a.render=function(){return(e=this.props.children,Array.isArray(e)?e[0]:e)(this.state.value);var e},n}(e.Component);return s.contextTypes=((l={})[u]=o().object,l),{Provider:c,Consumer:s}};var P=n(779),_=n.n(P);function T(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}n(864),n(679);var N=function(e){var t=C();return t.displayName="Router-History",t}(),M=function(e){var t=C();return t.displayName="Router",t}(),O=function(t){function n(e){var n;return(n=t.call(this,e)||this).state={location:e.history.location},n._isMounted=!1,n._pendingLocation=null,e.staticContext||(n.unlisten=e.history.listen((function(e){n._isMounted?n.setState({location:e}):n._pendingLocation=e}))),n}r(n,t),n.computeRootMatch=function(e){return{path:"/",url:"/",params:{},isExact:"/"===e}};var a=n.prototype;return a.componentDidMount=function(){this._isMounted=!0,this._pendingLocation&&this.setState({location:this._pendingLocation})},a.componentWillUnmount=function(){this.unlisten&&this.unlisten()},a.render=function(){return e.createElement(M.Provider,{value:{history:this.props.history,location:this.state.location,match:n.computeRootMatch(this.state.location.pathname),staticContext:this.props.staticContext}},e.createElement(N.Provider,{children:this.props.children||null,value:this.props.history}))},n}(e.Component);e.Component,e.Component;var R={},I=0;e.Component,e.Component,e.Component,e.useContext;var F=function(t){function n(){for(var e,n=arguments.length,r=new Array(n),a=0;a<n;a++)r[a]=arguments[a];return(e=t.call.apply(t,[this].concat(r))||this).history=k(e.props),e}return r(n,t),n.prototype.render=function(){return e.createElement(O,{history:this.history,children:this.props.children})},n}(e.Component);e.Component;var L=function(e,t){return"function"==typeof e?e(t):e},A=function(e,t){return"string"==typeof e?h(e,null,null,t):e},z=function(e){return e},D=e.forwardRef;void 0===D&&(D=z);var U=D((function(t,n){var r=t.innerRef,a=t.navigate,o=t.onClick,i=T(t,["innerRef","navigate","onClick"]),u=i.target,c=l({},i,{onClick:function(e){try{o&&o(e)}catch(t){throw e.preventDefault(),t}e.defaultPrevented||0!==e.button||u&&"_self"!==u||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e)||(e.preventDefault(),a())}});return c.ref=z!==D&&n||r,e.createElement("a",c)})),j=D((function(t,n){var r=t.component,a=void 0===r?U:r,o=t.replace,i=t.to,u=t.innerRef,s=T(t,["component","replace","to","innerRef"]);return e.createElement(M.Consumer,null,(function(t){t||c(!1);var r=t.history,f=A(L(i,t.location),t.location),d=f?r.createHref(f):"",p=l({},s,{href:d,navigate:function(){var e=L(i,t.location);(o?r.replace:r.push)(e)}});return z!==D?p.ref=n||u:p.innerRef=u,e.createElement(a,p)}))})),B=function(e){return e},V=e.forwardRef;void 0===V&&(V=B),V((function(t,n){var r=t["aria-current"],a=void 0===r?"page":r,o=t.activeClassName,i=void 0===o?"active":o,u=t.activeStyle,s=t.className,f=t.exact,d=t.isActive,p=t.location,h=t.sensitive,m=t.strict,v=t.style,y=t.to,g=t.innerRef,b=T(t,["aria-current","activeClassName","activeStyle","className","exact","isActive","location","sensitive","strict","style","to","innerRef"]);return e.createElement(M.Consumer,null,(function(t){t||c(!1);var r=p||t.location,o=A(L(y,r),r),w=o.pathname,k=w&&w.replace(/([.+*?=^!:${}()[\]|/\\])/g,"\\$1"),E=k?function(e,t){void 0===t&&(t={}),("string"==typeof t||Array.isArray(t))&&(t={path:t});var n=t,r=n.path,a=n.exact,o=void 0!==a&&a,l=n.strict,i=void 0!==l&&l,u=n.sensitive,c=void 0!==u&&u;return[].concat(r).reduce((function(t,n){if(!n&&""!==n)return null;if(t)return t;var r=function(e,t){var n=""+t.end+t.strict+t.sensitive,r=R[n]||(R[n]={});if(r[e])return r[e];var a=[],o={regexp:_()(e,a,t),keys:a};return I<1e4&&(r[e]=o,I++),o}(n,{end:o,strict:i,sensitive:c}),a=r.regexp,l=r.keys,u=a.exec(e);if(!u)return null;var s=u[0],f=u.slice(1),d=e===s;return o&&!d?null:{path:n,url:"/"===n&&""===s?"/":s,isExact:d,params:l.reduce((function(e,t,n){return e[t.name]=f[n],e}),{})}}),null)}(r.pathname,{path:k,exact:f,sensitive:h,strict:m}):null,S=!!(d?d(E,r):E),x=S?function(){for(var e=arguments.length,t=new Array(e),n=0;n<e;n++)t[n]=arguments[n];return t.filter((function(e){return e})).join(" ")}(s,i):s,C=S?l({},v,{},u):v,P=l({"aria-current":S&&a||null,className:x,style:C,to:o},b);return B!==V?P.ref=n||g:P.innerRef=g,e.createElement(j,P)}))}));var W=1e-6,$="undefined"!=typeof Float32Array?Float32Array:Array;function H(){var e=new $(3);return $!=Float32Array&&(e[0]=0,e[1]=0,e[2]=0),e}function K(e,t,n){var r=new $(3);return r[0]=e,r[1]=t,r[2]=n,r}function Q(e,t,n){return e[0]=t[0]+n[0],e[1]=t[1]+n[1],e[2]=t[2]+n[2],e}function q(e,t){var n=t[0],r=t[1],a=t[2],o=n*n+r*r+a*a;return o>0&&(o=1/Math.sqrt(o)),e[0]=t[0]*o,e[1]=t[1]*o,e[2]=t[2]*o,e}function Y(e,t,n){var r=t[0],a=t[1],o=t[2],l=n[3]*r+n[7]*a+n[11]*o+n[15];return l=l||1,e[0]=(n[0]*r+n[4]*a+n[8]*o+n[12])/l,e[1]=(n[1]*r+n[5]*a+n[9]*o+n[13])/l,e[2]=(n[2]*r+n[6]*a+n[10]*o+n[14])/l,e}function X(){var e=new $(16);return $!=Float32Array&&(e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0),e[0]=1,e[5]=1,e[10]=1,e[15]=1,e}function G(e,t,n){var r=t[0],a=t[1],o=t[2],l=t[3],i=t[4],u=t[5],c=t[6],s=t[7],f=t[8],d=t[9],p=t[10],h=t[11],m=t[12],v=t[13],y=t[14],g=t[15],b=n[0],w=n[1],k=n[2],E=n[3];return e[0]=b*r+w*i+k*f+E*m,e[1]=b*a+w*u+k*d+E*v,e[2]=b*o+w*c+k*p+E*y,e[3]=b*l+w*s+k*h+E*g,b=n[4],w=n[5],k=n[6],E=n[7],e[4]=b*r+w*i+k*f+E*m,e[5]=b*a+w*u+k*d+E*v,e[6]=b*o+w*c+k*p+E*y,e[7]=b*l+w*s+k*h+E*g,b=n[8],w=n[9],k=n[10],E=n[11],e[8]=b*r+w*i+k*f+E*m,e[9]=b*a+w*u+k*d+E*v,e[10]=b*o+w*c+k*p+E*y,e[11]=b*l+w*s+k*h+E*g,b=n[12],w=n[13],k=n[14],E=n[15],e[12]=b*r+w*i+k*f+E*m,e[13]=b*a+w*u+k*d+E*v,e[14]=b*o+w*c+k*p+E*y,e[15]=b*l+w*s+k*h+E*g,e}function Z(e,t){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=t[0],e[13]=t[1],e[14]=t[2],e[15]=1,e}function J(e,t,n){var r,a,o,l=n[0],i=n[1],u=n[2],c=Math.hypot(l,i,u);return c<W?null:(l*=c=1/c,i*=c,u*=c,r=Math.sin(t),o=1-(a=Math.cos(t)),e[0]=l*l*o+a,e[1]=i*l*o+u*r,e[2]=u*l*o-i*r,e[3]=0,e[4]=l*i*o-u*r,e[5]=i*i*o+a,e[6]=u*i*o+l*r,e[7]=0,e[8]=l*u*o+i*r,e[9]=i*u*o-l*r,e[10]=u*u*o+a,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e)}function ee(e,t,n,r,a){var o,l=1/Math.tan(t/2);return e[0]=l/n,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=l,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[11]=-1,e[12]=0,e[13]=0,e[15]=0,null!=a&&a!==1/0?(o=1/(r-a),e[10]=(a+r)*o,e[14]=2*a*r*o):(e[10]=-1,e[14]=-2*r),e}function te(e,t,n,r){var a,o,l,i,u,c,s,f,d,p,h=t[0],m=t[1],v=t[2],y=r[0],g=r[1],b=r[2],w=n[0],k=n[1],E=n[2];return Math.abs(h-w)<W&&Math.abs(m-k)<W&&Math.abs(v-E)<W?function(e){return e[0]=1,e[1]=0,e[2]=0,e[3]=0,e[4]=0,e[5]=1,e[6]=0,e[7]=0,e[8]=0,e[9]=0,e[10]=1,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,e}(e):(s=h-w,f=m-k,d=v-E,a=g*(d*=p=1/Math.hypot(s,f,d))-b*(f*=p),o=b*(s*=p)-y*d,l=y*f-g*s,(p=Math.hypot(a,o,l))?(a*=p=1/p,o*=p,l*=p):(a=0,o=0,l=0),i=f*l-d*o,u=d*a-s*l,c=s*o-f*a,(p=Math.hypot(i,u,c))?(i*=p=1/p,u*=p,c*=p):(i=0,u=0,c=0),e[0]=a,e[1]=i,e[2]=s,e[3]=0,e[4]=o,e[5]=u,e[6]=f,e[7]=0,e[8]=l,e[9]=c,e[10]=d,e[11]=0,e[12]=-(a*h+o*m+l*v),e[13]=-(i*h+u*m+c*v),e[14]=-(s*h+f*m+d*v),e[15]=1,e)}function ne(e){return(ne="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function re(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function ae(e,t){return(ae=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function oe(e,t){return!t||"object"!==ne(t)&&"function"!=typeof t?le(e):t}function le(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function ie(e){return(ie=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function ue(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function ce(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?ue(Object(n),!0).forEach((function(t){se(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):ue(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function se(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function fe(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=me(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,a=function(){};return{s:a,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,i=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return l=e.done,e},e:function(e){i=!0,o=e},f:function(){try{l||null==n.return||n.return()}finally{if(i)throw o}}}}function de(e,t,n,r,a,o,l){try{var i=e[o](l),u=i.value}catch(e){return void n(e)}i.done?t(u):Promise.resolve(u).then(r,a)}function pe(e){return function(){var t=this,n=arguments;return new Promise((function(r,a){var o=e.apply(t,n);function l(e){de(o,r,a,l,i,"next",e)}function i(e){de(o,r,a,l,i,"throw",e)}l(void 0)}))}}function he(e){return function(e){if(Array.isArray(e))return ve(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||me(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function me(e,t){if(e){if("string"==typeof e)return ve(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ve(e,t):void 0}}function ve(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}Math.random,Math.PI,Math.hypot||(Math.hypot=function(){for(var e=0,t=arguments.length;t--;)e+=arguments[t]*arguments[t];return Math.sqrt(e)}),H();var ye=null,ge={textured:{program:null,attribs:{},uniforms:{},buffers:{}},untextured:{program:null,attribs:{},uniforms:{},buffers:{}},selection:{program:null,attribs:{},uniforms:{},buffers:{}}},be={position:K(0,30,30),lookAt:q(H(),K(0,-1,-1)),lookUp:q(H(),K(0,1,-1)),yAngle:Math.PI/4},we=[],ke={Backspace:2,Tab:1.5,Backslash:1.5,Caps:1.75,ANSIEnter:2.25,LShift:2.25,RShift1_75:1.75,RShift2_75:2.75,LCtrl1_25:1.25,LWin1_25:1.25,LAlt1_25:1.25,LCtrl1_5:1.5,LWin1_5:1.5,LAlt1_5:1.5,RCtrl1_25:1.25,RWin1_25:1.25,RAlt1_25:1.25,RCtrl1_5:1.5,RWin1_5:1.5,RAlt1_5:1.5,Fn1_25:1.25,Fn1_5:1.5,Space6:6,Space6_25:6.25,Space7:7,Num0:2},Ee=new Set(["Space6_25","Space6","Space7","NumEnter","NumPlus","ISOEnter"]);function Se(e,t){var n=J(X(),e,t);be.position=Y(H(),be.position,n),be.lookAt=Y(H(),be.lookAt,n),be.lookUp=Y(H(),be.lookUp,n)}function xe(e,t,n){e.vertices=ye.createBuffer(),ye.bindBuffer(ye.ARRAY_BUFFER,e.vertices),ye.bufferData(ye.ARRAY_BUFFER,new Float32Array(t.vertices.flat()),ye.STATIC_DRAW),e.normals=ye.createBuffer(),ye.bindBuffer(ye.ARRAY_BUFFER,e.normals),ye.bufferData(ye.ARRAY_BUFFER,new Float32Array(t.normals.flat()),ye.STATIC_DRAW),n&&(e.uvs=ye.createBuffer(),ye.bindBuffer(ye.ARRAY_BUFFER,e.uvs),ye.bufferData(ye.ARRAY_BUFFER,new Float32Array(t.uvs.flat()),ye.STATIC_DRAW)),e.triangles=ye.createBuffer(),ye.bindBuffer(ye.ELEMENT_ARRAY_BUFFER,e.triangles),ye.bufferData(ye.ELEMENT_ARRAY_BUFFER,new Uint16Array(t.triangles.flat()),ye.STATIC_DRAW),e.numTriangles=t.triangles.length}function Ce(e){var t=ye.createTexture();return ye.bindTexture(ye.TEXTURE_2D,t),ye.texImage2D(ye.TEXTURE_2D,0,ye.RGBA,1,1,0,ye.RGBA,ye.UNSIGNED_BYTE,new Uint8Array([0,255,255,0])),{texture:t,loadTexturePromise:new Promise((function(n){var r=new Image;r.onload=function(){ye.bindTexture(ye.TEXTURE_2D,t),ye.texImage2D(ye.TEXTURE_2D,0,ye.RGBA,ye.RGBA,ye.UNSIGNED_BYTE,r);var e=function(e){return 0==(e&e-1)};e(r.width)&&e(r.height)?ye.generateMipmap(ye.TEXTURE_2D):(ye.texParameteri(ye.TEXTURE_2D,ye.TEXTURE_WRAP_S,ye.CLAMP_TO_EDGE),ye.texParameteri(ye.TEXTURE_2D,ye.TEXTURE_WRAP_T,ye.CLAMP_TO_EDGE),ye.texParameteri(ye.TEXTURE_2D,ye.TEXTURE_MIN_FILTER,ye.LINEAR)),n(r)},r.onerror=function(){return n(r)},r.src=e}))}}var Pe=new Set(["F1","F2","F3","F4","F9","F10","F11","F12","Tilde","1","2","3","4","5","6","7","8","9","0","Minus","Equals","Q","W","E","R","T","Y","U","I","O","P","OSqr","CSqr","Backslash","A","S","D","F","G","H","J","K","L","Semicolon","Apostrophe","Z","X","C","V","B","N","M","Comma","Period","Forwardslash","Space6","Space6_25","Space7","Num0","Num1","Num2","Num3","Num4","Num5","Num6","Num7","Num8","Num9","NumPoint"]),_e=new Set(["Esc","ANSIEnter","ISOEnter","NumEnter"]),Te=new Set,Ne=new Set,Me=new Set;function Oe(e,t){var n,r=[];_e.has(e)&&(Me.add(e),r.push.apply(r,he(t.accents))),(n=t.exceptions.find((function(t){return t.keys.includes(e)})))?r.push(n):Pe.has(e)?(Te.add(e),r.push(t.alphas)):(Ne.add(e),r.push(t.mods));var a=t.extras.filter((function(t){return t.keys.includes(e)}));return r.push.apply(r,he(a)),{colorOptions:r,optionSelected:0,keycapColor:r[0].keycapColor,legendColor:r[0].legendColor}}var Re={},Ie={};function Fe(){return(Fe=pe(regeneratorRuntime.mark((function e(t,n,r){var a,o,l,i,u,c,s,f,d,p,h,m,v,y,g,b;return regeneratorRuntime.wrap((function(e){for(;;)switch(e.prev=e.next){case 0:return a=function(e){return fetch("resources/"+e+".json").then((function(e){return e.json()}))},e.next=3,Promise.all([a("keyboardInfo").then((function(e){return o=e[t]})),a("keycapInfo").then((function(e){return l=e[r]}))]);case 3:we=[],Re={},Ie={},i=[],u=new Set,c=o.keyGroups.reduce((function(e,t){return Math.max(e,t.keys.reduce((function(e,t){return e+(ke[t]||1)}),t.offset[0]))}),0),s=o.keyGroups.reduce((function(e,t){return Math.max(e,t.offset[1])}),0)+1,f=G(X(),Z(X(),K(0,1.25,0)),J(X(),o.incline*(Math.PI/180),[1,0,0])),d=fe(o.keyGroups);try{for(d.s();!(p=d.n()).done;){h=p.value,m=[h.offset[0]-c/2,0,h.offset[1]-s/2+.5],v=fe(h.keys);try{for(g=function(){var e=y.value,t=ke[e]||1,r=t.toString().replace(".","_"),o=Ee.has(e)?e:"R".concat(h.row,"_").concat(r,"U");if(!u.has(o)){var c=ge.textured.buffers;c[o]={},i.push(a("models/keycaps/".concat(n,"/").concat(o)).then((function(e){return xe(c[o],e,!0)}))),u.add(o)}var s=Z(X(),[m[0]+t/2,0,m[2]]),d=G(X(),f,s),p=Ce("resources/legends/"+e+".png"),v=p.loadTexturePromise,g=p.texture;i.push(v);var b=ce({modelIdentifier:o,keysize:t,transformation:d,legendTexture:g},Oe(e,l)),w=Object.keys(Ie).length+1;Ie[w]=b,Re[e]=b,b.objectId=w,we.push(b),m[0]+=t},v.s();!(y=v.n()).done;)g()}catch(e){v.e(e)}finally{v.f()}}}catch(e){d.e(e)}finally{d.f()}return(b=ge.untextured.buffers).case={},i.push(a("models/cases/tofu65").then((function(e){return xe(b.case,e,!1)}))),b.switch={},i.push(a("models/switch").then((function(e){return xe(b.switch,e,!1)}))),b.stabilizer={},i.push(a("models/stabilizer").then((function(e){return xe(b.stabilizer,e,!1)}))),e.next=23,Promise.all(i);case 23:return e.abrupt("return",e.sent);case 24:case"end":return e.stop()}}),e)})))).apply(this,arguments)}function Le(e,t,n){for(var r in ye.useProgram(e.program),e.attribs){var a,o=e.attribs[r];ye.enableVertexAttribArray(o.loc),ye.bindBuffer(ye.ARRAY_BUFFER,t[o.bufferName]),(a=ye).vertexAttribPointer.apply(a,[o.loc].concat(he(o.vapParams)))}for(var l in n){var i=e.uniforms[l];i.method.apply(i,[i.loc].concat(he(n[l])))}for(var u in ye.bindBuffer(ye.ELEMENT_ARRAY_BUFFER,t.triangles),ye.drawElements(ye.TRIANGLES,3*t.numTriangles,ye.UNSIGNED_SHORT,0),e.attribs)ye.disableVertexAttribArray(e.attribs[u].loc)}var Ae=function(e){return[e.slice(1,3),e.slice(3,5),e.slice(5)].map((function(e){return Number("0x"+e)/255}))},ze=function(t){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&ae(e,t)}(i,t);var n,r,a,o,l=(a=i,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=ie(a);if(o){var n=ie(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return oe(this,e)});function i(e){var t;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,i),(t=l.call(this,e)).state={blinkProportion:0,increasing:!1,prevWidth:0,highlightKeys:!1,fullCustom:!1,keycapColor:"#000000",legendColor:"#ffffff"},t.handleCanvasClicked=t.handleCanvasClicked.bind(le(t)),t.handleCanvasMouseMove=t.handleCanvasMouseMove.bind(le(t)),t.handleCanvasWheel=t.handleCanvasWheel.bind(le(t)),t.handleToggleHighlight=t.handleToggleHighlight.bind(le(t)),t.handleCustomizeKeycaps=t.handleCustomizeKeycaps.bind(le(t)),t.handleResetKeycaps=t.handleResetKeycaps.bind(le(t)),t.handleResizeCanvas=t.handleResizeCanvas.bind(le(t)),t}return n=i,(r=[{key:"componentDidMount",value:function(){var e,t=this,n=document.getElementById("webgl-canvas");null!==(ye=n.getContext("webgl"))?(ye.viewport(0,0,n.width,n.height),(e=ye).clearColor.apply(e,he(Ae("#fcfcf8")).concat([1])),ye.clearDepth(1),ye.enable(ye.DEPTH_TEST),window.addEventListener("resize",this.handleResizeCanvas),n.addEventListener("wheel",this.handleCanvasWheel),function(){var e="\n        attribute vec3 aVertexPosition; // vertex position\n        attribute vec3 aVertexNormal; // vertex normal\n        \n        uniform mat4 uModelMat; // model matrix\n        uniform mat4 uMVPMat; // model-view-projection matrix\n        \n        varying vec3 vWorldPos; // interpolated world position of vertex\n        varying vec3 vVertexNormal; // interpolated normal for frag shader\n    ",t="\n        precision mediump float;\n\n        // eye world position\n        uniform vec3 uEyePosition;\n\n        uniform vec3 uColor;\n        \n        // geometry properties\n        varying vec3 vWorldPos; // world xyz of fragment\n        varying vec3 vVertexNormal; // normal of fragment\n    ",n="\n        // vertex position\n        vec4 vWorldPos4 = uModelMat * vec4(aVertexPosition, 1.0);\n        vWorldPos = vec3(vWorldPos4.x,vWorldPos4.y,vWorldPos4.z);\n        gl_Position = uMVPMat * vec4(aVertexPosition, 1.0);\n\n        // vertex normal (assume no non-uniform scale)\n        vec4 vWorldNormal4 = uModelMat * vec4(aVertexNormal, 0.0);\n        vVertexNormal = normalize(vec3(vWorldNormal4.x, vWorldNormal4.y, vWorldNormal4.z));\n    ",r="\n        vec3 blinnPhong(vec3 ambient, vec3 diffuse, vec3 specular) {\n            vec3 normal = normalize(vVertexNormal); \n\n            vec3 lightPos = vec3(0.0, 20.0, 10.0);\n\n            // compute diffuse term\n            vec3 toLight = normalize(lightPos - vWorldPos);\n            float lambert = max(0.0, dot(normal, toLight));\n            vec3 diffVal = diffuse * lambert;\n            \n            // compute specular term\n            vec3 toEye = normalize(uEyePosition - vWorldPos);\n            vec3 halfVec = normalize(toLight + toEye);\n            float highlight = pow(max(0.0, dot(normal, halfVec)), 10.0);\n            vec3 specVal = specular * highlight;\n            \n            // combine ambient, diffuse, specular to output color\n            return ambient + diffVal + specVal;\n        }\n    ",a="\n        ".concat(e,"\n\n        void main(void) {\n            ").concat(n,"\n        }\n    "),o="\n        ".concat(t,"\n\n        ").concat(r,"\n\n        void main(void) {\n            vec3 colorFromLighting = blinnPhong(uColor * 0.4, uColor * 0.4, vec3(0.2, 0.2, 0.2));\n            gl_FragColor = vec4(colorFromLighting, 1.0);\n        }\n    "),l="\n        ".concat(e,"\n\n        attribute vec2 aVertexUV;\n        varying vec2 vVertexUV;\n\n        void main(void) {\n            ").concat(n,"\n\n            vVertexUV = aVertexUV;\n            // TODO\n            if (vVertexUV.x == 0.0 && vVertexUV.y == 0.0) {\n                vVertexUV = vec2(-10000.0, -10000.0);\n            }\n        }\n    "),i="\n        ".concat(t,"\n\n        varying vec2 vVertexUV;\n\n        uniform sampler2D uTexture;\n        uniform vec3 uTextureColor;\n\n        uniform bool uIsBlinking;\n        uniform float uBlinkProportion;\n\n        ").concat(r,"\n\n        void main(void) {\n            vec3 color = uColor;\n\n            vec2 actualUV = vec2(1.0 - vVertexUV.s, vVertexUV.t);\n            if (actualUV.x >= 0.0 && actualUV.y >= 0.0) {\n                vec4 baseTextureColor = texture2D(uTexture, actualUV);\n                baseTextureColor.r = 1.0;\n                baseTextureColor.g = 1.0;\n                baseTextureColor.b = 1.0;\n\n                vec4 colorFromTexture = vec4(uTextureColor, 1.0) * baseTextureColor;\n                float alpha = colorFromTexture.a;\n\n                color = alpha * colorFromTexture.rgb + (1.0 - alpha) * uColor;\n            }\n            float kAmb =  0.3;\n            float kDiff = 0.7;\n            float kSpec = 0.2;\n\n            vec3 spec = vec3(kSpec, kSpec, kSpec);\n            vec3 colorFromLighting = blinnPhong(color * kAmb, color * kDiff, spec);\n            if (uIsBlinking) {\n                vec3 blinkColor = vec3(1.0, 1.0, 0.0);\n                colorFromLighting = uBlinkProportion * blinkColor + (1.0 - uBlinkProportion) * colorFromLighting;\n            }\n\n            gl_FragColor = vec4(colorFromLighting, 1.0);\n        }\n    "),u=ye.createShader(ye.VERTEX_SHADER);ye.shaderSource(u,a);var c=ye.createShader(ye.FRAGMENT_SHADER);ye.shaderSource(c,o);var s=ye.createShader(ye.VERTEX_SHADER);ye.shaderSource(s,l);var f=ye.createShader(ye.FRAGMENT_SHADER);ye.shaderSource(f,i);var d=ye.createShader(ye.VERTEX_SHADER);ye.shaderSource(d,"\n        attribute vec3 aVertexPosition; // vertex position\n        \n        uniform mat4 uModelMat; // model matrix\n        uniform mat4 uMVPMat; // model-view-projection matrix\n\n        void main(void) {\n            gl_Position = uMVPMat * vec4(aVertexPosition, 1.0);\n        }\n    ");var p=ye.createShader(ye.FRAGMENT_SHADER);ye.shaderSource(p,"\n        precision mediump float;\n\n        uniform int uObjectId;\n\n        void main(void) {\n            vec3 color = vec3(float(uObjectId) / 255.0, 1.0, 1.0);\n            gl_FragColor = vec4(color, 0.0);\n        }\n    ");for(var h=0,m=[u,c,s,f,d,p];h<m.length;h++){var v=m[h];if(ye.compileShader(v),!ye.getShaderParameter(v,ye.COMPILE_STATUS))return alert("Shader compilation error: "+ye.getShaderInfoLog(v)),void ye.deleteShader(v)}var y=ge.textured,g=ge.untextured,b=ge.selection;g.program=ye.createProgram(),ye.attachShader(g.program,u),ye.attachShader(g.program,c),y.program=ye.createProgram(),ye.attachShader(y.program,s),ye.attachShader(y.program,f),b.program=ye.createProgram(),ye.attachShader(b.program,d),ye.attachShader(b.program,p);for(var w=0,k=[g.program,y.program,b.program];w<k.length;w++){var E=k[w];if(ye.linkProgram(E),!ye.getProgramParameter(E,ye.LINK_STATUS))return void alert("Shader program linking error: "+ye.getProgramInfoLog(E))}function S(e,t,n){for(var r in t){var a=t[r];e.attribs[r]=ce({loc:ye.getAttribLocation(e.program,r)},a)}for(var o in n)e.uniforms[o]={loc:ye.getUniformLocation(e.program,o),method:n[o].bind(ye)}}var x={bufferName:"vertices",vapParams:[3,ye.FLOAT,!1,0,0]},C={bufferName:"normals",vapParams:[3,ye.FLOAT,!1,0,0]},P={bufferName:"uvs",vapParams:[2,ye.FLOAT,!1,0,0]};S(g,{aVertexPosition:x,aVertexNormal:C},{uColor:ye.uniform3f,uEyePosition:ye.uniform3f,uModelMat:ye.uniformMatrix4fv,uMVPMat:ye.uniformMatrix4fv}),S(y,{aVertexPosition:x,aVertexNormal:C,aVertexUV:P},{uColor:ye.uniform3f,uEyePosition:ye.uniform3f,uModelMat:ye.uniformMatrix4fv,uMVPMat:ye.uniformMatrix4fv,uTexture:ye.uniform1i,uTextureColor:ye.uniform3f,uIsBlinking:ye.uniform1i,uBlinkProportion:ye.uniform1f}),S(b,{aVertexPosition:x},{uModelMat:ye.uniformMatrix4fv,uMVPMat:ye.uniformMatrix4fv,uObjectId:ye.uniform1i})}(),function(e,t,n){return Fe.apply(this,arguments)}("Tofu 65% Aluminum","cherry",this.props.selectedItems.Keycaps.Name).then((function(){t.handleResizeCanvas(),t.renderScene()}))):alert("Error in fetching GL context. Please ensure that your browser support WebGL.")}},{key:"componentWillUnmount",value:function(){window.removeEventListener("resize",this.handleResizeCanvas),document.getElementById("webgl-canvas").removeEventListener("wheel",this.handleCanvasWheel),this.tick&&(clearInterval(this.tick),this.tick=null),ye=null}},{key:"componentDidUpdate",value:function(){this.handleResizeCanvas(),this.renderScene()}},{key:"handleResizeCanvas",value:function(){var e=document.getElementById("render-container"),t=e.offsetLeft,n=window.innerWidth-e.style.marginRight.replace("px",""),r=Math.max(600,n-t),a=Math.floor(r/2);if(this.state.prevWidth!==r){var o=document.getElementById("webgl-canvas");o.width=r,o.height=a,ye.viewport(0,0,r,a),this.setState({prevWidth:r})}}},{key:"handleCanvasMouseMove",value:function(e){if(0!==e.buttons){console.log("moved");var t=e.movementX,n=e.movementY;if(0!==t&&Se(-t/100,K(0,1,0)),0!==n){var r=n/100,a=Math.PI/2,o=Math.max(.1,Math.min(a,be.yAngle+r));Se(o-be.yAngle,(l=H(),i=be.lookUp,u=be.lookAt,c=i[0],s=i[1],f=i[2],d=u[0],p=u[1],h=u[2],l[0]=s*h-f*p,l[1]=f*d-c*h,l[2]=c*p-s*d,l)),be.yAngle=o}this.renderScene()}var l,i,u,c,s,f,d,p,h}},{key:"handleCanvasWheel",value:function(e){e.preventDefault();var t,n,r,a=e.deltaY/100,o=function(e){var t=e[0],n=e[1],r=e[2];return Math.hypot(t,n,r)}(be.position),l=Math.max(14,Math.min(50,o+a));be.position=(t=H(),n=q(H(),be.position),r=l,t[0]=n[0]*r,t[1]=n[1]*r,t[2]=n[2]*r,t),this.renderScene()}},{key:"handleCanvasClicked",value:function(e){if(e.clientX===this.beginClick.x&&e.clientY===this.beginClick.y){var t=e.target.getBoundingClientRect(),n=t.left,r=t.top,a=t.height,o=e.clientX-n,l=a-(e.clientY-r);!function(){ye.clear(ye.COLOR_BUFFER_BIT|ye.DEPTH_BUFFER_BIT);var e=ee(X(),Math.PI/9,2,.1,1e3),t=te(X(),be.position,Q(H(),be.position,be.lookAt),be.lookUp),n=G(X(),e,t);Le(ge.selection,ge.untextured.buffers.case,{uMVPMat:[!1,n],uModelMat:[!1,X()],uObjectId:[0]});var r,a=fe(we);try{for(a.s();!(r=a.n()).done;){var o=r.value,l=o.transformation,i=o.objectId,u=o.modelIdentifier,c=G(X(),n,l);Le(ge.selection,ge.untextured.buffers.switch,{uMVPMat:[!1,c],uModelMat:[!1,l],uObjectId:[0]}),Le(ge.selection,ge.textured.buffers[u],{uMVPMat:[!1,c],uModelMat:[!1,l],uObjectId:[i]})}}catch(e){a.e(e)}finally{a.f()}}();var i=new Uint8Array(4);ye.readPixels(o,l,1,1,ye.RGBA,ye.UNSIGNED_BYTE,i);var u=0===i[3],c=i[0];if(u&&0!==c){var s=Ie[c];this.state.fullCustom?(s.keycapColor=Ae(this.state.keycapColor),s.legendColor=Ae(this.state.legendColor)):(s.optionSelected=(s.optionSelected+1)%s.colorOptions.length,s.keycapColor=s.colorOptions[s.optionSelected].keycapColor,s.legendColor=s.colorOptions[s.optionSelected].legendColor)}this.renderScene()}}},{key:"handleToggleHighlight",value:function(){var e=this;null!==this.tick?(clearInterval(this.tick),this.setState({increasing:!1,blinkProportion:0}),this.tick=null):this.tick=setInterval((function(){e.state.highlightKeys&&e.setState((function(e){var t=e.highlightKeys,n=e.increasing,r=e.blinkProportion;return n?1===(r=Math.min(1,r+.05))&&(n=!1):0===(r=Math.max(0,r-.05))&&(n=!0),{highlightKeys:t,increasing:n,blinkProportion:r}}))}),20),this.setState((function(e){return{highlightKeys:!e.highlightKeys}}))}},{key:"handleColorMultiple",value:function(e){var t,n=fe({alphas:Te,mods:Ne,accents:Me}[e]);try{for(n.s();!(t=n.n()).done;){var r=t.value,a=Re[r];a.keycapColor=Ae(this.state.keycapColor),a.legendColor=Ae(this.state.legendColor)}}catch(e){n.e(e)}finally{n.f()}this.renderScene()}},{key:"handleCustomizeKeycaps",value:function(){this.keycapColors=we.map((function(e){return{keycapColor:e.keycapColor,legendColor:e.legendColor}})),this.setState({highlightKeys:!1,fullCustom:!0})}},{key:"handleResetKeycaps",value:function(){for(var e in we)we[e].keycapColor=this.keycapColors[e].keycapColor,we[e].legendColor=this.keycapColors[e].legendColor;this.setState({fullCustom:!1})}},{key:"renderScene",value:function(){var e=this;ye.clear(ye.COLOR_BUFFER_BIT|ye.DEPTH_BUFFER_BIT);var t=ee(X(),Math.PI/9,2,.1,1e3),n=te(X(),be.position,Q(H(),be.position,be.lookAt),be.lookUp),r=G(X(),t,n);Le(ge.untextured,ge.untextured.buffers.case,{uEyePosition:[be.position[0],be.position[1],be.position[2]],uMVPMat:[!1,r],uModelMat:[!1,X()],uColor:[.1,.1,.1]});var a,o=fe(we);try{var l=function(){var t=a.value,n=G(X(),r,t.transformation),o={2:.65,2.25:.65,2.75:.65,6:2.5,6.25:2.5,7:2.5}[t.keysize];if(o){var l=function(n){var a=Z(X(),n),o=G(X(),a,t.transformation);Le(ge.untextured,ge.untextured.buffers.stabilizer,{uEyePosition:[be.position[0],be.position[1],be.position[2]],uMVPMat:[!1,G(X(),r,o)],uModelMat:[!1,o],uColor:e.props.selectedItems.Stabilizers.color.slice(0,3)})};l([o,0,0]),l([-o,0,0])}Le(ge.untextured,ge.untextured.buffers.switch,{uEyePosition:[be.position[0],be.position[1],be.position[2]],uMVPMat:[!1,n],uModelMat:[!1,t.transformation],uColor:e.props.selectedItems.Switches.casingColor}),ye.activeTexture(ye.TEXTURE0),ye.bindTexture(ye.TEXTURE_2D,t.legendTexture),Le(ge.textured,ge.textured.buffers[t.modelIdentifier],{uEyePosition:[be.position[0],be.position[1],be.position[2]],uMVPMat:[!1,n],uModelMat:[!1,t.transformation],uColor:t.keycapColor,uTexture:[0],uTextureColor:t.legendColor,uIsBlinking:[!e.state.fullCustom&&e.state.highlightKeys&&t.colorOptions.length>1],uBlinkProportion:[e.state.blinkProportion]})};for(o.s();!(a=o.n()).done;)l()}catch(e){o.e(e)}finally{o.f()}}},{key:"render",value:function(){var t=this;return e.createElement("div",{id:"keyboard-render"},e.createElement("canvas",{id:"webgl-canvas",onMouseDown:function(e){return t.beginClick={x:e.clientX,y:e.clientY}},onMouseUp:this.handleCanvasClicked,onMouseMove:this.handleCanvasMouseMove}),e.createElement("div",{id:"render-inputs"},this.state.fullCustom?e.createElement(e.Fragment,null,e.createElement("button",{onClick:this.handleResetKeycaps},"Reset"),e.createElement("div",null,e.createElement("input",{type:"color",id:"keycap-color",value:this.state.keycapColor,onChange:function(e){return t.setState({keycapColor:e.target.value})}}),e.createElement("label",{htmlFor:"keycap-color"},"Keycap Color"),e.createElement("input",{type:"color",id:"legend-color",value:this.state.legendColor,onChange:function(e){return t.setState({legendColor:e.target.value})}}),e.createElement("label",{htmlFor:"legend-color"},"Legend Color")),e.createElement("button",{onClick:function(){return t.handleColorMultiple("alphas")}},"Color Alphas"),e.createElement("button",{onClick:function(){return t.handleColorMultiple("mods")}},"Color Mods"),e.createElement("button",{onClick:function(){return t.handleColorMultiple("accents")}},"Color Accents")):e.createElement("div",null,e.createElement("button",{onClick:this.handleCustomizeKeycaps},"Customize"),e.createElement("input",{type:"checkbox",id:"highlight-changeable",onChange:this.handleToggleHighlight}),e.createElement("label",{htmlFor:"highlight-changeable"},"Highlight Changeable Keys"))))}}])&&re(n.prototype,r),i}(e.Component);function De(e){return(De="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}function Ue(e,t){var n;if("undefined"==typeof Symbol||null==e[Symbol.iterator]){if(Array.isArray(e)||(n=Be(e))||t&&e&&"number"==typeof e.length){n&&(e=n);var r=0,a=function(){};return{s:a,n:function(){return r>=e.length?{done:!0}:{done:!1,value:e[r++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var o,l=!0,i=!1;return{s:function(){n=e[Symbol.iterator]()},n:function(){var e=n.next();return l=e.done,e},e:function(e){i=!0,o=e},f:function(){try{l||null==n.return||n.return()}finally{if(i)throw o}}}}function je(e){return function(e){if(Array.isArray(e))return Ve(e)}(e)||function(e){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e))return Array.from(e)}(e)||Be(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Be(e,t){if(e){if("string"==typeof e)return Ve(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ve(e,t):void 0}}function Ve(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function We(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function $e(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?We(Object(n),!0).forEach((function(t){He(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):We(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function He(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Ke(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function Qe(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function qe(e,t,n){return t&&Qe(e.prototype,t),n&&Qe(e,n),e}function Ye(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&Xe(e,t)}function Xe(e,t){return(Xe=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function Ge(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,r=et(e);if(t){var a=et(this).constructor;n=Reflect.construct(r,arguments,a)}else n=r.apply(this,arguments);return Ze(this,n)}}function Ze(e,t){return!t||"object"!==De(t)&&"function"!=typeof t?Je(e):t}function Je(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}function et(e){return(et=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}function tt(){return(tt=Object.assign||function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e}).apply(this,arguments)}var nt=function(e){return"$"+e.toFixed(2)};function rt(t){var n=t.filter,r=n.field,a=n.low,o=n.high,l=n.display;return e.createElement("div",null,e.createElement("h4",null,r),l(e.createElement("input",{type:"text",value:a,onChange:function(e){isNaN(e.target.value)||t.onUpdateFilter([e.target.value,o])}})),"-",l(e.createElement("input",{type:"text",value:o,onChange:function(e){isNaN(e.target.value)||t.onUpdateFilter([a,e.target.value])}})))}function at(t){var n=t.filter,r=n.field,a=n.passAll,o=n.all,l=n.selected;return e.createElement("div",null,e.createElement("h4",null,r," ",a&&e.createElement("em",null,"(Match all)")),Array.from(o).map((function(n){return e.createElement("div",{className:"filter-option",key:n},e.createElement("input",{type:"checkbox",id:"filter-option-".concat(r,"-").concat(n),className:"match-"+(a?"all":"some")+"-chosen-checkbox",checked:l.has(n),onChange:function(){return t.onUpdateFilter(n)}}),e.createElement("label",{htmlFor:"filter-option-".concat(r,"-").concat(n)},n))})))}var ot=function(t){return e.createElement("div",{id:"filters-box"},e.createElement("h2",null,"Filters"),t.filters.map((function(n){var r={filter:n,onUpdateFilter:function(e){return t.onUpdateFilter(n.field,e)}};return n instanceof st?e.createElement(at,tt({key:n.field},r)):e.createElement(rt,tt({key:n.field},r))})))},lt="-- select an option --",it=function(t){Ye(r,t);var n=Ge(r);function r(e){var t;return Ke(this,r),(t=n.call(this,e)).state={selections:e.extraFieldInfo.reduce((function(t,n){var r=n.name,a=e.item[r];return t[r]=a&&"selection"===a.type?lt:a,t}),{})},t}return qe(r,[{key:"displayOption",value:function(e){return e&&e.type&&e.extra?"".concat(e.type," (+").concat(nt(e.extra),")"):e}},{key:"handleSelectionChange",value:function(e,t){var n=this,r=this.props.item[t].options.find((function(t){return n.displayOption(t)===e.target.value}));this.setState((function(e){return{selections:$e($e({},e.selections),{},He({},t,r))}}))}},{key:"renderTableData",value:function(t){var n=this,r=t.name,a=this.props.item[r];if(void 0===a)return null;if(Array.isArray(a))return a.join(", ");if("selection"===a.type){var o=this.displayOption(t.display(this.state.selections[r]));return e.createElement("select",{value:o,onChange:function(e){return n.handleSelectionChange(e,r)}},[lt].concat(a.options.map((function(e){return t.display(e)}))).map((function(t){var r=n.displayOption(t);return e.createElement("option",{key:r,value:r},r)})))}return t.display(a)}},{key:"render",value:function(){var t=this,n=this.props.item;return e.createElement("tr",{className:"select-item-row"},e.createElement("td",{className:"item-name-cell"},e.createElement("a",{className:"item-link",href:n.Link,target:"_blank",rel:"noreferrer"},e.createElement("div",{className:"item-image-container"},e.createElement("img",{src:n.Image,alt:n.Name})),e.createElement("div",{className:"item-name"},n.Name))),e.createElement("td",{className:"item-price-cell"},nt(n["Base Price"])),this.props.extraFieldInfo.map((function(n){return e.createElement("td",{key:n.name},t.renderTableData(n))})),e.createElement("td",{className:"item-select-cell"},e.createElement("button",{className:"select-item-button",onClick:function(){t.props.onSelect(n,t.state.selections,t.props.itemType)||alert("Please select all relevant values")}},"Select")))}}]),r}(e.Component),ut=function(){function e(t,n,r){Ke(this,e),this.field=t,this.origin=n,this.accepts=r}return qe(e,[{key:"passes",value:function(e){var t=this,n=e[this.field];return"selection"===n.type?n.options.some((function(e){return t.accepts.includes(e.type||e)})):this.accepts.includes(n)}}]),e}(),ct=function(){function e(t,n,r,a){Ke(this,e),this.field=t,this.low=n,this.high=r,this.display=a}return qe(e,[{key:"updateData",value:function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){if("undefined"!=typeof Symbol&&Symbol.iterator in Object(e)){var n=[],r=!0,a=!1,o=void 0;try{for(var l,i=e[Symbol.iterator]();!(r=(l=i.next()).done)&&(n.push(l.value),!t||n.length!==t);r=!0);}catch(e){a=!0,o=e}finally{try{r||null==i.return||i.return()}finally{if(a)throw o}}return n}}(t,n)||Be(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=r[0],o=r[1];this.low=a,this.high=o}},{key:"passes",value:function(e){var t=e[this.field],n=""===this.low?0:Number(this.low),r=""===this.high?1/0:Number(this.high);return"selection"===t.type?t.options.some((function(e){return e>=n&&e<=r})):t>=n&&t<=r}}]),e}(),st=function(){function e(t,n,r){Ke(this,e),this.field=t,this.all=n,this.selected=new Set,this.passAll=r}return qe(e,[{key:"updateData",value:function(e){this.selected.has(e)?this.selected.delete(e):this.selected.add(e)}},{key:"passes",value:function(e){var t=this;if(0===this.selected.size)return!0;var n=e[this.field];return this.passAll?Array.from(this.selected).every((function(e){return n.includes(e)})):"selection"===n.type?n.options.some((function(e){return t.selected.has(e.type||e)})):this.selected.has(n)}}]),e}(),ft=function(t){Ye(r,t);var n=Ge(r);function r(e){var t;return Ke(this,r),(t=n.call(this,e)).state={items:null,filters:[],sortBy:"alpha"},t.handleUpdateFilter=t.handleUpdateFilter.bind(Je(t)),t}return qe(r,[{key:"componentDidMount",value:function(){var e=this;fetch("resources/items/"+this.props.itemType.toLowerCase()+".json").then((function(e){return e.json()})).then((function(t){return e.loadItems(t)}))}},{key:"loadItems",value:function(t){var n,r=this,a=t.filter((function(e){return r.props.compatibilityFilters.every((function(t){return t.passes(e)}))})),o=a.map((function(e){return e["Base Price"]})),l=[new ct("Base Price",Math.min.apply(Math,je(o)),Math.max.apply(Math,je(o)),(function(t){return e.createElement("span",{className:"numeric-range-input"},"$",t)}))],i=Ue(this.props.extraFieldInfo);try{var u=function(){var e=n.value,t=e.name,r=a.map((function(e){return e[t]}));l.push(e.generateFilter(t,r))};for(i.s();!(n=i.n()).done;)u()}catch(e){i.e(e)}finally{i.f()}a.sort((function(e,t){return e.Name.localeCompare(t.Name)})),this.setState({items:a,filters:l})}},{key:"handleUpdateFilter",value:function(e,t){this.setState((function(n){var r=je(n.filters);return r.find((function(t){return t.field===e})).updateData(t),{filters:r}}))}},{key:"render",value:function(){var t=this,n=this.state,r=n.items,a=n.filters,o=n.sortBy,l=this.props,i=l.extraFieldInfo,u=l.compatibilityFilters,c=l.itemType;if(null===r)return null;var s=("low-high"===o?function(e){return je(e).sort((function(e,t){return e["Base Price"]-t["Base Price"]}))}:"high-low"===o?function(e){return je(e).sort((function(e,t){return t["Base Price"]-e["Base Price"]}))}:function(e){return e})(r.filter((function(e){return a.every((function(t){return t.passes(e)}))})));return e.createElement("div",null,e.createElement(ot,{filters:a,onUpdateFilter:this.handleUpdateFilter}),e.createElement("div",{style:{margin:"10px 30px 10px 250px"}},e.createElement("button",{className:"return-button",onClick:this.props.onReturn},"Return"),e.createElement("div",{className:"sort-by"},"Sort By:",e.createElement("select",{value:o,onChange:function(e){return t.setState({sortBy:e.target.value})}},e.createElement("option",{value:"alpha"},"Name (alphabetical)"),e.createElement("option",{value:"low-high"},"Price (low to high)"),e.createElement("option",{value:"high-low"},"Price (high to low)"))),0!==u.length&&e.createElement("h4",{style:{color:"red"}},"Note: only items compatible with currently selected parts are shown"),0===s.length?e.createElement("h3",null,"No Items Found To Match Filters"):e.createElement("table",{id:"select-item-table"},e.createElement("thead",null,e.createElement("tr",null,["Name","Base Price"].concat(i.map((function(e){return e.name}))).map((function(t){return e.createElement("th",{key:t},t)})))),e.createElement("tbody",null,s.map((function(n){return e.createElement(it,{key:n.Name,item:n,extraFieldInfo:i,itemType:c,onSelect:t.props.onSelect})}))))))}}]),r}(e.Component),dt=["Case","Plate","PCB","Stabilizers","Switches","Keycaps"],pt=function(t){Ye(r,t);var n=Ge(r);function r(e){var t;return Ke(this,r),(t=n.call(this,e)).state={selectedItems:["Kit"].concat(dt).reduce((function(e,t){return e[t]=null,e}),{}),selectingItem:null,partsInKit:[],compatibilityFilters:dt.reduce((function(e,t){return e[t]=[],e}),{})},t.handleBrowseItem=t.handleBrowseItem.bind(Je(t)),t.handleSelectItem=t.handleSelectItem.bind(Je(t)),t.handleRemoveItem=t.handleRemoveItem.bind(Je(t)),t.state.selectedItems={Kit:null,Case:{Name:"Tofu 65% Aluminum",Image:"https://cdn.shopify.com/s/files/1/1473/3902/products/8b9cc7c9808a81fc8db0eaf67a4d79d7_b3abc1fb-7837-45dd-bbca-f1b4202bc9e2_1800x1800.jpg?v=1584436794",Link:"https://kbdfans.com/collections/65-layout-case/products/in-stocktofu-65-aluminum-case","Base Price":125,"Form Factor":"65%","Mount Method":"Tray Mount",Material:"Aluminum","Primary Color":{type:"selection",options:["Silver","Grey","Black","Chocolate","Burgundy","Purple","Ink Blue",{type:"E-White",extra:4}]},price:1},Plate:{Name:"KBDPad MKII Brass Plate",Image:"https://cdn.shopify.com/s/files/1/1473/3902/products/8_d0a22ed5-026f-4709-b469-2cb6d618abb1_1800x1800.jpg?v=1601098440",Link:"https://kbdfans.com/collections/plate/products/kbdpad-mkii-brass-plate","Base Price":18,"Form Factor":"Numpad",Material:"Brass",price:1},PCB:{Name:"DZ60 Rev 3.0 PCB",Image:"https://cdn.shopify.com/s/files/1/1473/3902/products/c_1_1800x1800.jpg?v=1584436582",Link:"https://kbdfans.com/collections/pcb/products/dz60-60-pcb","Base Price":38,"Form Factor":"60%","Hot-swap":"No",Backlight:"RGB Underglow",price:1},Switches:{Name:"Cherry MX Red",Image:"https://www.cherrymx.de/_Resources/Persistent/d4e5d661da4d28eb2c5d6321289c29ac2d6cbd56/img-productstage-mxRed%402x_100-368x368.png",Link:"https://www.cherrymx.de/en/mx-original/mx-red.html","Base Price":1,Tactility:"Linear","Spring Weight":"46g","Actuation Distance":"2.0 mm","Bottom-out Distance":"4.0 mm",price:1,casingColor:[.05,.05,.05]},Keycaps:{Name:"GMK Modern Dolch",Image:"https://matrixzj.github.io/assets/images/gmk-keycaps/Hanami-Dango/kits_pics/base.jpg",Link:"https://geekhack.org/index.php?topic=110049.0","Base Price":134.99,Colors:["Beige","Green","Red"],Material:"ABS",Legends:"Doubleshot",price:1,profile:"cherry"},Stabilizers:{Name:"GMK Screw-in Stabilizers",Image:"https://cdn.shopify.com/s/files/1/1473/3902/products/O1CN01MtwenC1amQ9FHFKxo__134583372_1800x1800.jpg?v=1598932169",Link:"https://kbdfans.com/collections/keyboard-stabilizer/products/gmk-screw-in-stabilizers","Base Price":19,"Mount Method":"PCB Screw-in",color:[.05,.05,.05,0],price:1}},t}return qe(r,[{key:"handleBrowseItem",value:function(e){this.setState({selectingItem:e})}},{key:"handleSelectItem",value:function(e,t,n){var r=Object.values(t).filter((function(e){return void 0!==e}));return!r.some((function(e){return e===lt}))&&(this.setState((function(a){var o="Kit"===n?dt.filter((function(e){return t[e]})):a.partsInKit,l=a.compatibilityFilters,i=new ut("Form Factor",n,[t["Form Factor"]]);"Case"===n?(l.PCB.push(i),l.Plate.push(i)):"Plate"===n?(l.Case.push(i),l.PCB.push(i)):"PCB"===n&&(l.Case.push(i),l.Plate.push(i));var u=e["Base Price"]+r.reduce((function(e,t){return e+(t.extra||0)}),0);return{selectingItem:null,selectedItems:$e($e({},a.selectedItems),{},He({},n,$e($e({},e),{},{price:u}))),partsInKit:o,compatibilityFilters:l}})),!0)}},{key:"handleRemoveItem",value:function(e){"Kit"===e&&this.setState({partsInKit:[]}),this.setState((function(t){var n=$e({},t.compatibilityFilters);for(var r in n)n[r]=n[r].filter((function(t){return t.origin!==e}));return{selectedItems:$e($e({},t.selectedItems),{},He({},e,null)),compatibilityFilters:n}}))}},{key:"getExtraFieldInfo",value:function(t){var n=function(e){return function(t,n){var r=function(e,t){return"selection"===t.type?e.apply(void 0,je(t.options)):t},a=Math.min.apply(Math,je(n.map((function(e){return r(Math.min,e)})))),o=Math.max.apply(Math,je(n.map((function(e){return r(Math.max,e)}))));return new ct(t,a,o,e)}};function r(e,t){var n,r=this,a=new Set,o=Array.isArray(t[0]),l=Ue(t);try{for(l.s();!(n=l.n()).done;){var i=n.value;void 0!==i&&(o?i.forEach((function(e){return a.add(r.display(e))})):"selection"===i.type?i.options.forEach((function(e){return a.add(r.display(e.type||e))})):a.add(this.display(i)))}}catch(e){l.e(e)}finally{l.f()}return new st(e,Array.from(a).sort(),o)}var a=function(e){return{name:e,display:function(e){return e},generateFilter:r}};return{Kit:[a("Form Factor")].concat(dt.map((function(e){return a(e)}))),Case:[a("Form Factor"),a("Material"),a("Primary Color"),a("Mount Method")],Plate:[a("Form Factor"),a("Material")],PCB:[a("Form Factor"),a("Hot-swap"),a("Backlight")],Stabilizers:[a("Mount Method")],Switches:[a("Tactility"),{name:"Spring Weight",display:function(e){return e+"g"},generateFilter:n((function(t){return e.createElement("span",{className:"numeric-range-input"},t,"g")}))},{name:"Actuation Distance",display:function(e){return e.toFixed(1)+" mm"},generateFilter:n((function(t){return e.createElement("span",{className:"numeric-range-input"},t,"mm")}))},{name:"Bottom-out Distance",display:function(e){return e.toFixed(1)+" mm"},generateFilter:n((function(t){return e.createElement("span",{className:"numeric-range-input"},t,"mm")}))}],Keycaps:[a("Colors"),a("Material"),a("Legends")]}[t]||[]}},{key:"render",value:function(){var t=this,n=this.state,r=n.selectedItems,a=n.selectingItem,o=n.partsInKit,l=n.compatibilityFilters;return null!==a?e.createElement(ft,{itemType:a,compatibilityFilters:l[a],extraFieldInfo:this.getExtraFieldInfo(a),onSelect:this.handleSelectItem,onReturn:function(){return t.setState({selectingItem:null})}}):e.createElement(mt,{selectedItems:r,partsInKit:o,onSelect:this.handleBrowseItem,onDelete:this.handleRemoveItem})}}]),r}(e.Component);function ht(t){return e.createElement("div",{id:"collapse-selected-items"},e.createElement("div",{className:"vertical-line"}),e.createElement("div",{id:"show-hide-arrow-container",onClick:t.onClick},t.collapsed?e.createElement(e.Fragment,null,e.createElement("div",{id:"vertical-show"},"Show"),e.createElement("div",{id:"arrow"},"〉")):e.createElement(e.Fragment,null,e.createElement("div",{id:"arrow"},"〈"),e.createElement("div",{id:"vertical-hide"},"Hide"))),e.createElement("div",{className:"vertical-line"}))}var mt=function(t){Ye(r,t);var n=Ge(r);function r(e){var t;return Ke(this,r),(t=n.call(this,e)).state={selectedItemsCollapsed:!1},t.handleCollapseItems=t.handleCollapseItems.bind(Je(t)),t}return qe(r,[{key:"handleCollapseItems",value:function(){this.setState((function(e){return{selectedItemsCollapsed:!e.selectedItemsCollapsed}}))}},{key:"componentDidUpdate",value:function(e,t){}},{key:"render",value:function(){var t=this.props.selectedItems,n=this.state.selectedItemsCollapsed,r=dt.every((function(e){return t[e]})),a=dt.reduce((function(e,n){return e+t[n].price||0}),0);return e.createElement("div",{id:"selected-items-container"},!n&&e.createElement("div",null,e.createElement(vt,this.props),e.createElement("div",null,"Total Price: ",nt(a))),e.createElement(ht,{collapsed:n,onClick:this.handleCollapseItems}),e.createElement("div",{id:"rightmost"},e.createElement("div",{id:"render-container"},r?e.createElement(ze,{selectedItems:this.props.selectedItems}):e.createElement("h3",null,"Select all parts to view keyboard render"))))}}]),r}(e.Component),vt=function(t){return e.createElement("table",{id:"selected-item-table"},e.createElement("thead",null,e.createElement("tr",{className:"selected-item-row"},e.createElement("th",{className:"item-select-cell"},"Item"),e.createElement("th",{className:"item-name-cell"},"Selected"),e.createElement("th",{className:"item-price-cell"},"Price"),e.createElement("th",null))),e.createElement("tbody",null,["Kit"].concat(dt).map((function(n){var r=t.selectedItems[n],a=t.partsInKit.includes(n);return e.createElement("tr",{key:n,className:a?"part-in-kit":void 0},e.createElement("td",{className:"item-select-cell"},e.createElement("button",{className:"select-item-button"+("Kit"===n?" kit-item-button":""),disabled:a,onClick:function(){return t.onSelect(n)}},n)),e.createElement("td",{className:"item-name-cell"},a?"Included in kit":r&&e.createElement("a",{className:"item-link",href:r.Link,target:"_blank",rel:"noreferrer"},e.createElement("div",{className:"item-image-container selected-item-image-container"},e.createElement("img",{src:r.Image,alt:r.Name})),e.createElement("span",{className:"item-name"},r.Name))),e.createElement("td",{className:"item-price-cell"},r&&nt(r.price)),e.createElement("td",null,r&&e.createElement("button",{className:"delete-button",onClick:function(){return t.onDelete(n)}},"✖")))}))))},yt=function(e){Ye(n,e);var t=Ge(n);function n(){return Ke(this,n),t.apply(this,arguments)}return qe(n,[{key:"render",value:function(){return null}}]),n}(e.Component),gt=function(t){Ye(r,t);var n=Ge(r);function r(){return Ke(this,r),n.apply(this,arguments)}return qe(r,[{key:"render",value:function(){return e.createElement(F,null,e.createElement("header",null,e.createElement("div",{id:"header-inner"},e.createElement("img",{src:"./resources/keyboard.png",alt:"Keyboard Icon",width:"60",height:"60"}),e.createElement("h1",null,"KBD",e.createElement("span",{id:"header-part"},"PART"),"PICKER"))),e.createElement(pt,null),e.createElement(yt,null))}}]),r}(e.Component);t.render(e.createElement(gt,null),document.getElementById("root"))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,